{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../app/components/Header.tsx", "../app/store/store.ts", "../app/lib/auth.server.ts", "../app/lib/session.server.ts", "../app/lib/supabase.ts", "../app/routes/reports.security-log.tsx", "../app/components/ClientOnly.tsx", "../app/components/DateFilter.tsx", "../app/lib/mockData.ts", "../app/routes/transactions.tsx", "../app/routes/management.tsx", "../app/components/management/ManagementTabs.tsx", "../app/components/management/CurrencyTab.tsx", "../app/components/ui/use-toast.ts", "../app/lib/auth.ts", "../app/hooks/useUserRole.ts", "../app/components/management/BehaviourTab.tsx", "../app/components/ui/toggle-group.tsx", "../app/lib/utils.ts", "../app/components/ui/input.tsx", "../app/components/ui/button.tsx", "../app/components/ui/label.tsx", "../app/components/ui/select.tsx", "../app/components/management/EconomyTab.tsx", "../app/components/management/economy/AddActivityTab.tsx", "../app/components/management/economy/AddExpenseTab.tsx", "../app/components/management/economy/AssignActivityTab.tsx", "../app/components/management/economy/AssignExpenseTab.tsx", "../app/routes/dashboard.tsx", "../app/components/dashboard/UserDashboard.tsx", "../app/components/dashboard/AdminDashboard.tsx", "../app/routes/settings.tsx", "../app/components/settings/ChangePasswordModal.tsx", "../app/routes/transfer.tsx", "../app/components/DashboardCard.tsx", "../app/components/UserCombobox.tsx", "../app/components/ui/command.tsx", "../app/components/ui/popover.tsx", "../app/routes/reports.tsx", "../app/routes/_index.tsx", "../app/routes/logout.tsx", "../app/routes/market.tsx", "../app/components/market/MarketplaceItemCard.tsx", "../app/components/market/ProductGrid.tsx", "../app/components/market/SearchBar.tsx", "../app/components/market/FilterSortPanel.tsx", "../app/components/market/ProductDetailModal.tsx", "../app/components/market/setup/InventoryTable.tsx", "../app/components/market/setup/AddProductForm.tsx", "../app/components/market/setup/EditProductModal.tsx", "../app/components/market/setup/DeleteConfirmationModal.tsx", "../app/components/market/SalesLogTable.tsx", "../app/components/admin/ConfirmationModal.tsx", "../app/lib/supabase-admin.ts", "../app/routes/admin.tsx", "../app/components/admin/AdminTabs.tsx", "../app/components/admin/UsersTabContent.tsx", "../app/components/admin/UsersTable.tsx", "../app/components/admin/AddUserModal.tsx", "../app/components/admin/BulkUploadModal.tsx", "../app/components/admin/UserProfileView.tsx", "../app/components/admin/EditUserModal.tsx", "../app/components/admin/ChangePasswordModal.tsx", "../app/components/admin/GroupsManagement.tsx", "../app/components/admin/EssenceSettings.tsx", "../app/components/admin/BackupRestore.tsx", "../app/components/admin/MasterTabContent.tsx", "../app/components/dashboard/SuperAdminDashboard.tsx", "../app/routes/login.tsx", "../app/routes/_app.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u00E2\u0153\u00A8\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  // This is ignored so we can keep it in the template for visibility.  Feel\n  // free to delete this parameter in your app if you're not using it!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\") || \"\")\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  useRouteError,\n  isRouteErrorResponse } from\n\"@remix-run/react\";\nimport type { LinksFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useEffect } from \"react\";\nimport { Header } from \"~/components/Header\";\nimport { getAuthSession, getUserProfile } from \"~/lib/auth.server\"; // Import new auth functions\nimport { getSession, commitSession } from \"~/lib/session.server\"; // Import session functions\nimport type { UserProfile } from \"~/types/user\";\nimport { useStore } from \"~/store/store\";\nimport type { User as AdminUser, UserRole } from \"~/types/admin\";\nimport { getBrowserEnvironment } from \"~/lib/supabase\"; // Import getBrowserEnvironment\n\nimport \"./tailwind.css?__remix_sideEffect__\";\n\n// Export AppUser as an alias for UserProfile for clarity in child routes\nexport type AppUser = UserProfile;\n\nexport const links: LinksFunction = () => [\n{ rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n{\n  rel: \"preconnect\",\n  href: \"https://fonts.gstatic.com\",\n  crossOrigin: \"anonymous\"\n},\n{\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap\"\n}];\n\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  console.log(\"--- [Server Loader - root] ROOT LOADER CALLED ---\");\n\n  let userProfile: UserProfile | null = null;\n  let sessionData: any | null = null; // Variable to hold session data\n  let error: string | null = null;\n  const headers = new Headers();\n  const url = new URL(request.url);\n  const pathname = url.pathname;\n\n  const publicPaths = [\"/login\", \"/signup\", \"/reset-password\"]; // Define public paths\n  const isPublicPath = publicPaths.includes(pathname);\n\n  try {\n    const session = await getAuthSession(request); // This gets the Supabase session\n\n    if (!session) {\n      // If no Supabase session, and not on a public path, redirect to login\n      if (!isPublicPath) {\n        console.log(\"[Server Loader - root] No Supabase session found and not a public path. Redirecting to /login.\");\n        throw redirect(\"/login\", { headers });\n      }\n      console.log(\"[Server Loader - root] No Supabase session found. Current path is public or user is not logged in.\");\n    } else {\n      // If session exists, try to get user profile\n      const { userProfile: fetchedProfile, headers: profileHeaders } = await getUserProfile(request);\n      userProfile = fetchedProfile;\n      profileHeaders.forEach((value, key) => headers.append(key, value)); // Append any headers from getUserProfile\n\n      // Extract session data to pass to client\n      sessionData = {\n        access_token: session.access_token,\n        refresh_token: session.refresh_token,\n        expires_in: session.expires_in,\n        user: session.user // Include the user object from the session if needed\n      };\n      console.log(\"[Server Loader - root] Supabase session data extracted for client:\", sessionData);\n\n\n      if (!userProfile && !isPublicPath) {\n        // This case should ideally not happen if session exists and is valid,\n        // but as a fallback, if profile can't be fetched, redirect to login.\n        console.log(\"[Server Loader - root] User profile not found for session and not a public path. Redirecting to /login.\");\n        throw redirect(\"/login\", { headers });\n      }\n      if (userProfile) {\n        console.log(\"[Server Loader - root] UserProfile fetched:\", userProfile.id);\n      }\n    }\n\n  } catch (err: any) {\n    if (err instanceof Response && err.status === 302) {\n      // This is a redirect response, re-throw it\n      throw err;\n    }\n    console.error(\"[Server Loader - root] UNEXPECTED error caught during loader execution:\", err);\n    error = `Root loader failed: ${err.message || \"An unknown error occurred\"}`;\n    userProfile = null;\n  }\n\n  // Commit any session changes (e.g., if session was updated by auth.server.ts)\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  headers.append(\"Set-Cookie\", await commitSession(session));\n\n  // Get browser environment variables\n  const ENV = getBrowserEnvironment();\n\n  return json({\n    userProfile,\n    session: sessionData, // Pass the session data to the client\n    error,\n    ENV // Pass environment variables to the client\n  }, { headers });\n}\n\n\nexport function Layout({ children }: {children: React.ReactNode;}) {\n  const loaderData = useLoaderData<typeof loader>();\n  const { userProfile = null, error = null, ENV } = loaderData || {};\n\n  const zustandSetCurrentUser = useStore((state) => state.setCurrentUser);\n\n  useEffect(() => {\n    // Set client-side environment variables\n    if (ENV) {\n      window.ENV = ENV;\n    }\n\n    const currentStoreUser = useStore.getState().currentUser;\n\n    if (userProfile) {\n      const profileEmail = userProfile.email || '';\n      const profileFullName = userProfile.full_name || 'User';\n      const profileBalance = userProfile.balance ?? 0;\n      const profileRole = userProfile.role as UserRole || 'User';\n      const profileCreatedAt = userProfile.created_at;\n      const profileGroupId = userProfile.group_id;\n      // userProfile.group_name will be undefined as it's not selected from DB\n      const profileGroupName = userProfile.group_name; // This will be undefined\n      // userProfile.avatar_url will be undefined as it's not selected from DB\n      const profileAvatarUrl = userProfile.avatar_url; // This will be undefined\n\n\n      const needsZustandUpdate =\n      !currentStoreUser ||\n      currentStoreUser.id !== userProfile.id ||\n      currentStoreUser.email !== profileEmail ||\n      currentStoreUser.fullName !== profileFullName ||\n      currentStoreUser.balance !== profileBalance ||\n      currentStoreUser.role !== profileRole ||\n      profileCreatedAt && currentStoreUser.createdAt !== (profileCreatedAt ? new Date(profileCreatedAt).toISOString().split('T')[0] : undefined) ||\n      currentStoreUser.groupId !== profileGroupId ||\n      currentStoreUser.groupName !== (profileGroupName || currentStoreUser?.groupName || 'Group Placeholder') || // Ensure comparison handles undefined profileGroupName\n      currentStoreUser.avatarUrl !== (profileAvatarUrl || currentStoreUser?.avatarUrl || undefined); // Ensure comparison handles undefined profileAvatarUrl\n\n\n      if (needsZustandUpdate) {\n        const userForStore: AdminUser = {\n          id: userProfile.id,\n          email: profileEmail,\n          fullName: profileFullName,\n          balance: profileBalance,\n          role: profileRole,\n          createdAt: profileCreatedAt ? new Date(profileCreatedAt).toISOString().split('T')[0] : currentStoreUser?.createdAt || new Date().toISOString().split('T')[0],\n          status: currentStoreUser?.status || 'active',\n          groupId: profileGroupId || currentStoreUser?.groupId || 'group_placeholder_id',\n          // profileGroupName will be undefined, so fallback logic will apply\n          groupName: profileGroupName || currentStoreUser?.groupName || 'Group Placeholder',\n          // profileAvatarUrl will be undefined, so fallback logic will apply\n          avatarUrl: profileAvatarUrl || currentStoreUser?.avatarUrl || undefined\n        };\n        zustandSetCurrentUser(userForStore);\n        console.log(\"[Layout Effect] Updated currentUser in Zustand:\", userForStore);\n      } else {\n        console.log(\"[Layout Effect] Skipping Zustand update, data appears consistent with userProfile:\", userProfile.id);\n      }\n    } else if (error) {\n      console.warn(\"[Layout Effect] No user profile loaded due to error from loader:\", error);\n    } else {\n      // If userProfile is null and no error, it means user is not logged in.\n      // Clear Zustand state if there was a previous user.\n      if (currentStoreUser) {\n        zustandSetCurrentUser(null);\n        console.log(\"[Layout Effect] Cleared currentUser in Zustand as no userProfile was loaded.\");\n      }\n    }\n  }, [userProfile, error, ENV, zustandSetCurrentUser]);\n\n\n  if (!loaderData) {\n    console.warn(\"[Layout Component] Warning: useLoaderData() returned undefined. Using default values.\");\n  }\n\n  if (error && !userProfile) {\n    console.error(\"[Layout Component] Error message received from loader:\", error);\n  }\n\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full bg-gray-50 dark:bg-gray-950\">\n        <Header user={userProfile} /> {/* Pass userProfile to Header */}\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {/* Inject client-side environment variables */}\n        {ENV ?\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(ENV)};`\n          }} /> :\n\n        null}\n      </body>\n    </html>);\n\n}\n\nexport default function App() {\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      <main className=\"flex-1 p-4 md:p-6\">\n        <Outlet />\n      </main>\n    </div>);\n\n}\n\nexport function ErrorBoundary() {\n  const error = useRouteError();\n  console.error(\"Root Error Boundary caught error:\", error);\n\n  let errorMessage = \"An unexpected error occurred.\";\n  let errorStatus = 500;\n\n  if (isRouteErrorResponse(error)) {\n    if (typeof error.data === 'object' && error.data !== null && 'message' in error.data) {\n      errorMessage = String(error.data.message) || error.statusText;\n    } else if (typeof error.data === 'string') {\n      errorMessage = error.data || error.statusText;\n    } else {\n      errorMessage = error.statusText;\n    }\n    errorStatus = error.status;\n  } else if (error instanceof Error) {\n    errorMessage = error.message;\n  } else if (typeof error === 'string') {\n    errorMessage = error;\n  }\n\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <title>Error</title>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full flex items-center justify-center bg-red-100\">\n        <div className=\"text-center p-8 bg-white shadow-md rounded\">\n          <h1 className=\"text-2xl font-bold text-red-600\">Application Error</h1>\n          <p className=\"mt-2\">Status: {errorStatus}</p>\n          <p className=\"mt-2\">{errorMessage}</p>\n          <a href=\"/\" className=\"mt-4 inline-block px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">Go Home</a>\n        </div>\n        <Scripts />\n      </body>\n    </html>);\n\n}", "import { Link, Form, useLocation } from \"@remix-run/react\";\nimport type { UserProfile } from \"~/types/user\";\nimport { useStore } from \"~/store/store\";\nimport { useEffect, useState } from \"react\"; // Import useState\nimport { Dialog } from '@headlessui/react'; // Import Dialog from Headless UI\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline'; // Import icons\n\ninterface HeaderProps {\n  user: UserProfile | null;\n}\n\nexport function Header({ user }: HeaderProps) {\n  const currentUser = useStore((state) => state.currentUser);\n  const zustandSetCurrentUser = useStore((state) => state.setCurrentUser);\n  const location = useLocation();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false); // State for mobile menu\n\n  // This useEffect ensures that if the user prop changes (e.g., after login/logout),\n  // the Zustand store is updated to reflect the latest user state.\n  useEffect(() => {\n    if (user) {\n      // Only update if the user object from props is different from the store\n      if (!currentUser || currentUser.id !== user.id) {\n        zustandSetCurrentUser({\n          id: user.id,\n          email: user.email || '',\n          fullName: user.full_name || 'User',\n          balance: user.balance ?? 0,\n          role: user.role || 'User',\n          createdAt: user.created_at ? new Date(user.created_at).toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\n          status: 'active', // Assuming active status from profile\n          groupId: user.group_id || 'group_placeholder_id',\n          groupName: 'Group Placeholder', // Not fetched in root loader, placeholder\n          avatarUrl: undefined, // Not fetched in root loader, placeholder\n        });\n      }\n    } else {\n      // If user prop is null, clear the Zustand store\n      if (currentUser) {\n        zustandSetCurrentUser(null);\n      }\n    }\n  }, [user, currentUser, zustandSetCurrentUser]);\n\n  // Define navigation links with role-based visibility\n  const navigation = [\n    {\n      name: 'Dashboard',\n      href: (user?.role === 'Admin' || user?.role === 'Super Admin') ? '/admin' : '/dashboard',\n      roles: ['User', 'Admin', 'Super Admin']\n    },\n    { name: 'Transfer', href: '/transfer', roles: ['User', 'Admin', 'Super Admin'] },\n    { name: 'Transactions', href: '/transactions', roles: ['User', 'Admin', 'Super Admin'] },\n    { name: 'Market', href: '/market', roles: ['User', 'Admin', 'Super Admin'] },\n    { name: 'Management', href: '/management', roles: ['Admin', 'Super Admin'] },\n    { name: 'Admin', href: '/admin', roles: ['Super Admin'] }, // Ensure this points to /admin\n    { name: 'Reports', href: '/reports', roles: ['Admin', 'Super Admin'] },\n    { name: 'Settings', href: '/settings', roles: ['User', 'Admin', 'Super Admin'] },\n  ];\n\n  // Filter navigation links based on user's role\n  const filteredNavigation = user\n    ? navigation.filter(item => item.roles.includes(user.role || 'User'))\n    : [];\n\n  return (\n    <header className=\"bg-white shadow-sm dark:bg-gray-900\">\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-4 lg:px-8\" aria-label=\"Global\">\n        <div className=\"flex lg:flex-1\">\n          <Link to=\"/\" className=\"-m-1.5 p-1.5\">\n            <span className=\"sr-only\">Life Economy</span>\n            <img\n              className=\"h-8 w-auto\"\n              src=\"https://www.svgrepo.com/show/493600/economy-growth.svg\"\n              alt=\"Life Economy Logo\"\n            />\n          </Link>\n        </div>\n        <div className=\"flex lg:hidden\"> {/* Mobile menu button */}\n          <button\n            type=\"button\"\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700 dark:text-gray-300\"\n            onClick={() => setMobileMenuOpen(true)}\n          >\n            <span className=\"sr-only\">Open main menu</span>\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n        <div className=\"hidden lg:flex lg:gap-x-12\"> {/* Desktop navigation */}\n          {user && filteredNavigation.map((item) => (\n            <Link\n              key={item.name}\n              to={item.href}\n              className={`text-sm font-semibold leading-6 ${\n                location.pathname.startsWith(item.href) ? 'text-indigo-600 dark:text-indigo-400' : 'text-gray-900 dark:text-white'\n              } hover:text-indigo-600 dark:hover:text-indigo-400`}\n            >\n              {item.name}\n            </Link>\n          ))}\n        </div>\n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end lg:items-center lg:gap-x-4\"> {/* Desktop auth buttons */}\n          {user ? (\n            <>\n              <span className=\"text-gray-900 dark:text-white text-sm font-medium\">\n                Welcome, {user.full_name || user.email || 'User'}!\n              </span>\n              <Form action=\"/logout\" method=\"post\">\n                <button\n                  type=\"submit\"\n                  className=\"inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-3 py-1.5 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:bg-indigo-500 dark:hover:bg-indigo-600 dark:focus:ring-offset-gray-900\"\n                >\n                  Sign Out\n                </button>\n              </Form>\n            </>\n          ) : (\n            <Link\n              to=\"/login\"\n              className=\"inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-3 py-1.5 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:bg-indigo-500 dark:hover:bg-indigo-600 dark:focus:ring-offset-gray-900\"\n            >\n              Sign In\n            </Link>\n          )}\n        </div>\n      </nav>\n\n      {/* Mobile Dialog */}\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\n        <div className=\"fixed inset-0 z-10\" />\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white dark:bg-gray-900 px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10 dark:sm:ring-gray-100/10\">\n          <div className=\"flex items-center justify-between\">\n            <Link to=\"/\" className=\"-m-1.5 p-1.5\" onClick={() => setMobileMenuOpen(false)}>\n              <span className=\"sr-only\">Life Economy</span>\n              <img\n                className=\"h-8 w-auto\"\n                src=\"https://www.svgrepo.com/show/493600/economy-growth.svg\"\n                alt=\"Life Economy Logo\"\n              />\n            </Link>\n            <button\n              type=\"button\"\n              className=\"-m-2.5 rounded-md p-2.5 text-gray-700 dark:text-gray-300\"\n              onClick={() => setMobileMenuOpen(false)}\n            >\n              <span className=\"sr-only\">Close menu</span>\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n          <div className=\"mt-6 flow-root\">\n            <div className=\"-my-6 divide-y divide-gray-500/10 dark:divide-gray-400/10\">\n              <div className=\"space-y-2 py-6\">\n                {user && filteredNavigation.map((item) => (\n                  <Link\n                    key={item.name}\n                    to={item.href}\n                    className={`-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 ${\n                      location.pathname.startsWith(item.href) ? 'text-indigo-600 dark:text-indigo-400' : 'text-gray-900 dark:text-white'\n                    } hover:bg-gray-50 dark:hover:bg-gray-800`}\n                    onClick={() => setMobileMenuOpen(false)}\n                  >\n                    {item.name}\n                  </Link>\n                ))}\n              </div>\n              <div className=\"py-6\">\n                {user ? (\n                  <>\n                    <span className=\"block -mx-3 rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-gray-900 dark:text-white\">\n                      Welcome, {user.full_name || user.email || 'User'}!\n                    </span>\n                    <Form action=\"/logout\" method=\"post\">\n                      <button\n                        type=\"submit\"\n                        className=\"mt-4 w-full inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-3 py-1.5 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:bg-indigo-500 dark:hover:bg-indigo-600 dark:focus:ring-offset-gray-900\"\n                        onClick={() => setMobileMenuOpen(false)}\n                      >\n                        Sign Out\n                      </button>\n                    </Form>\n                  </>\n                ) : (\n                  <Link\n                    to=\"/login\"\n                    className=\"-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-gray-900 dark:text-white hover:bg-gray-50 dark:hover:bg-gray-800\"\n                    onClick={() => setMobileMenuOpen(false)}\n                  >\n                    Sign In\n                  </Link>\n                )}\n              </div>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </Dialog>\n    </header>\n  );\n}\n", "import { create } from 'zustand';\nimport type { StoreState, User, Transaction, MarketplaceItem, PurchaseRecordWithBuyerDetails } from './types'; // Import MarketplaceItem and PurchaseRecordWithBuyerDetails\n\nexport const useStore = create<StoreState>((set) => ({\n  currentUser: null,\n  users: [], // Initialize with an empty array\n  transactions: [], // Initialize with an empty array\n  marketplaceItems: [], // Initialize marketplaceItems as an empty array\n  purchaseRecords: [], // Initialize purchaseRecords as an empty array\n\n  setCurrentUser: (user) => set({ currentUser: user }),\n\n  setUsers: (users) => set({ users }), // Add setUsers setter\n  addUser: (user) => set((state) => ({\n    users: [...state.users, user],\n  })),\n\n  updateUserBalance: (userId, newBalance) => set((state) => ({\n    users: state.users.map((user) =>\n      user.id === userId ? { ...user, balance: newBalance } : user\n    ),\n    currentUser: state.currentUser?.id === userId\n      ? { ...state.currentUser, balance: newBalance }\n      : state.currentUser,\n  })),\n\n  setTransactions: (transactions) => set({ transactions }), // Add setTransactions setter\n  addTransaction: (transaction) => set((state) => ({\n    transactions: [...state.transactions, transaction],\n  })),\n\n  setMarketplaceItems: (items) => set({ marketplaceItems: items }), // Add action to set marketplace items\n  updateMarketplaceItem: (updatedItem) => set((state) => ({ // Add action to update a single marketplace item\n    marketplaceItems: state.marketplaceItems.map(item =>\n      item.id === updatedItem.id ? updatedItem : item\n    ),\n  })),\n  deleteMarketplaceItem: (itemId) => set((state) => ({ // Add action to delete a marketplace item\n    marketplaceItems: state.marketplaceItems.filter(item => item.id !== itemId),\n  })),\n\n  setPurchaseRecords: (records) => set({ purchaseRecords: records }), // Add action to set purchase records\n  addPurchaseRecord: (record) => set((state) => ({ // Add action to add a purchase record\n    purchaseRecords: [record, ...state.purchaseRecords], // Add new record to the beginning\n  })),\n}));\n", "import { createClient } from \"@supabase/supabase-js\";\nimport { redirect } from \"@remix-run/node\";\nimport { getSession, commitSession, destroySession } from \"~/lib/session.server\";\nimport type { UserProfile } from \"~/types/user\";\n\n// This function creates a Supabase client that can handle session cookies\n// on the server-side within Remix loaders/actions.\nexport function getSupabaseWithSessionAndHeaders(request: Request) {\n  const supabaseUrl = process.env.SUPABASE_URL;\n  const supabaseAnonKey = process.env.SUPABASE_ANON_KEY;\n\n  if (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error(\"Supabase URL and Anon Key must be provided in environment variables.\");\n  }\n\n  const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      persistSession: false, // Remix handles session persistence\n      autoRefreshToken: false,\n      detectSessionInUrl: false,\n    },\n  });\n\n  // Intercept Supabase requests to add/update session cookies\n  supabase.auth.onAuthStateChange(async (event, session) => {\n    const existingSession = await getSession(request.headers.get(\"Cookie\"));\n    if (session) {\n      existingSession.set(\"supabase:session\", session);\n    } else {\n      existingSession.unset(\"supabase:session\");\n    }\n  });\n\n  return { supabase, headers: new Headers() };\n}\n\nexport async function signIn(request: Request, { email, password }: { email: string; password: string }) {\n  const { supabase, headers } = getSupabaseWithSessionAndHeaders(request);\n\n  const { data, error } = await supabase.auth.signInWithPassword({ email, password });\n\n  if (error) {\n    console.error(\"Supabase signIn error:\", error);\n    return { error: error.message, headers };\n  }\n\n  if (data.session) {\n    const session = await getSession(request.headers.get(\"Cookie\"));\n    session.set(\"supabase:session\", data.session);\n    headers.append(\"Set-Cookie\", await commitSession(session));\n  }\n\n  return { data, headers };\n}\n\nexport async function signOut(request: Request) {\n  const { supabase, headers } = getSupabaseWithSessionAndHeaders(request);\n  const session = await getSession(request.headers.get(\"Cookie\"));\n\n  const { error } = await supabase.auth.signOut();\n\n  if (error) {\n    console.error(\"Supabase signOut error:\", error);\n    // Even if signOut fails on Supabase, we should still clear our local session\n  }\n\n  headers.append(\"Set-Cookie\", await destroySession(session));\n  return redirect(\"/login\", { headers });\n}\n\nexport async function getAuthSession(request: Request) {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const supabaseSession = session.get(\"supabase:session\");\n\n  if (!supabaseSession) {\n    return null;\n  }\n\n  // You might want to verify the session with Supabase here if needed,\n  // but for basic checks, the presence of the session in the cookie is enough.\n  return supabaseSession;\n}\n\nexport async function getUserProfile(request: Request): Promise<{ userProfile: UserProfile | null; headers: Headers }> {\n  const { supabase, headers } = getSupabaseWithSessionAndHeaders(request);\n  const session = await getAuthSession(request);\n\n  if (!session || !session.user) {\n    return { userProfile: null, headers };\n  }\n\n  const { data: profileData, error: profileError } = await supabase\n    .from('profiles')\n    .select('id, email, full_name, balance, role, created_at, group_id')\n    .eq('id', session.user.id)\n    .single();\n\n  if (profileError) {\n    console.error(\"Error fetching user profile:\", profileError);\n    // If profile not found or error, destroy session and redirect to login\n    headers.append(\"Set-Cookie\", await destroySession(await getSession(request.headers.get(\"Cookie\"))));\n    throw redirect(\"/login\", { headers });\n  }\n\n  return { userProfile: profileData as UserProfile, headers };\n}\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\n\n// This is a temporary secret for development.\n// In a production environment, you should use a strong, randomly generated secret\n// stored securely (e.g., in environment variables).\nconst sessionSecret = process.env.SESSION_SECRET || \"super-secret-dev-key\";\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [sessionSecret],\n    secure: process.env.NODE_ENV === \"production\",\n    maxAge: 60 * 60 * 24 * 7, // 1 week\n  },\n});\n\nexport const { getSession, commitSession, destroySession } = sessionStorage;\n", "import { createClient } from '@supabase/supabase-js';\n// Assuming you might generate types later, keep this import commented or adjust as needed\n// import type { Database } from '~/types/supabase';\n\n// Server-side environment variables\nconst serverSupabaseUrl = process.env.SUPABASE_URL;\nconst serverSupabaseAnonKey = process.env.SUPABASE_ANON_KEY;\n\n// Client-side environment variables (accessed via window.ENV)\n// Ensure window.ENV exists before accessing its properties\nconst clientSupabaseUrl = typeof window !== 'undefined' && window.ENV ? window.ENV.SUPABASE_URL : undefined;\nconst clientSupabaseAnonKey = typeof window !== 'undefined' && window.ENV ? window.ENV.SUPABASE_ANON_KEY : undefined;\n\n// Determine Supabase URL and Key based on environment (server or client)\nconst supabaseUrl = typeof document === 'undefined' ? serverSupabaseUrl : clientSupabaseUrl;\nconst supabaseAnonKey = typeof document === 'undefined' ? serverSupabaseAnonKey : clientSupabaseAnonKey;\n\n// Refined check: Throw error only on server if vars are missing during initialization\nif (typeof document === 'undefined') {\n  if (!supabaseUrl || !supabaseAnonKey) {\n    // This error will stop the server if env vars are not loaded correctly\n    throw new Error('[supabase.ts Server Init] Supabase URL and Anon Key must be provided in server environment variables.');\n  }\n} else {\n  // Client-side warning if ENV isn't immediately available (might happen before root loader script runs)\n  if (!supabaseUrl || !supabaseAnonKey) {\n     console.warn('[supabase.ts Client Init] Supabase URL/Key not immediately available. Ensure ENV is loaded via root loader script.');\n  }\n}\n\n\n// Create and export the Supabase client (for ANON operations)\n// Use Database generic if you have generated types: createClient<Database>(...)\n// Initialize with potentially undefined values on client, relying on ENV script\n// Add a check to ensure we don't pass undefined to createClient, especially on the server\nif (!supabaseUrl || !supabaseAnonKey) {\n  // This condition should ideally only be met temporarily on the client before ENV loads.\n  // If it happens on the server, the error above should have caught it.\n  console.error(\"[supabase.ts] CRITICAL: Attempting to initialize Supabase client with missing URL or Key. This should not happen on the server.\");\n  // Avoid creating a client that will definitely fail. You might return a dummy object\n  // or handle this case based on your app's needs, but throwing might be safer.\n  // For now, let it proceed but log the error. The subsequent Supabase calls will likely fail.\n}\n// Ensure we pass strings, even if they were potentially undefined earlier (though checks should prevent this on server)\nexport const supabase = createClient(supabaseUrl || '', supabaseAnonKey || '', {\n  auth: {\n    persistSession: true, // Ensure session is persisted\n    autoRefreshToken: true, // Automatically refresh tokens\n    detectSessionInUrl: true, // Detect session from URL (e.g., after magic link)\n  },\n});\n\n// Helper function to get ONLY the necessary client-side environment variables\n// This is called ONLY in the root loader on the server.\nexport function getBrowserEnvironment() {\n  // Ensure this runs server-side and reads from process.env\n  if (typeof window !== 'undefined') {\n     console.error(\"getBrowserEnvironment should only be called on the server!\");\n     return {}; // Or handle appropriately\n  }\n  return {\n    SUPABASE_URL: process.env.SUPABASE_URL,\n    SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY,\n    // Add other client-safe environment variables here if needed\n  };\n}\n\n// Declare the ENV type on the window object for TypeScript\n// Ensure this matches the structure returned by getBrowserEnvironment\ndeclare global {\n  interface Window {\n    ENV: {\n      SUPABASE_URL?: string; // Make optional as it might not be set immediately\n      SUPABASE_ANON_KEY?: string; // Make optional\n    };\n  }\n}\n\n// Initialize window.ENV if it doesn't exist (client-side safety)\nif (typeof window !== 'undefined' && typeof window.ENV === 'undefined') {\n  window.ENV = {};\n}\n", "import React, { useState, useMemo } from 'react';\nimport { ClientOnly } from '~/components/ClientOnly';\nimport { DateFilter } from '~/components/DateFilter'; // Reusing the basic date filter\nimport { GlobalSearch } from '~/components/GlobalSearch'; // Reusing the basic search\nimport { mockSecurityLogs, mockUsers } from '~/lib/mockData';\nimport { SearchIcon } from 'lucide-react'; // Import SearchIcon\n\n// Helper function to get user name from ID\nconst getUserName = (userId: string) => {\n  const user = mockUsers.find(u => u.id === userId);\n  return user ? user.fullName : userId; // Fallback to ID if user not found\n};\n\nexport default function SecurityLogPage() {\n  const [searchTerm, setSearchTerm] = useState('');\n  // Add state for date filtering if DateFilter component is enhanced later\n  // const [dateRange, setDateRange] = useState({ start: null, end: null });\n\n  const filteredLogs = useMemo(() => {\n    return mockSecurityLogs.filter(log => {\n      const lowerSearchTerm = searchTerm.toLowerCase();\n      const userName = getUserName(log.userId).toLowerCase();\n      // Basic search across relevant fields\n      return (\n        log.timestamp.toLowerCase().includes(lowerSearchTerm) ||\n        userName.includes(lowerSearchTerm) ||\n        log.action.toLowerCase().includes(lowerSearchTerm) ||\n        log.ipAddress.toLowerCase().includes(lowerSearchTerm) ||\n        log.details.toLowerCase().includes(lowerSearchTerm)\n      );\n      // Add date filtering logic here when DateFilter is implemented\n    }).sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()); // Sort descending by timestamp\n  }, [searchTerm /*, dateRange */]);\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  // Fallback for ClientOnly\n  const fallback = <div className=\"p-4\"><div className=\"h-12 animate-pulse rounded bg-muted\"></div><div className=\"mt-4 h-64 animate-pulse rounded bg-muted\"></div></div>;\n\n  return (\n    <div className=\"p-4 md:p-6\">\n      <h1 className=\"mb-4 text-2xl font-semibold\">Security Log</h1>\n      <ClientOnly fallback={fallback}>\n        {() => (\n          <>\n            <div className=\"mb-4 flex flex-col gap-4 md:flex-row md:items-center md:justify-between\">\n              {/* Custom Search Input for this page */}\n              <div className=\"relative flex-grow\">\n                <SearchIcon className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-gray-400\" />\n                <input\n                  type=\"search\"\n                  placeholder=\"Search logs (user, action, IP, details...)\"\n                  value={searchTerm}\n                  onChange={handleSearchChange}\n                  className=\"w-full rounded-md border bg-white py-2 pl-9 pr-3 text-sm shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500 dark:border-gray-700 dark:bg-gray-900\"\n                />\n              </div>\n              <DateFilter /> {/* Placeholder Date Filter */}\n            </div>\n\n            <div className=\"overflow-x-auto rounded-lg border bg-card text-card-foreground shadow-sm\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"px-4 py-3 text-left font-medium text-muted-foreground\">Timestamp</th>\n                    <th className=\"px-4 py-3 text-left font-medium text-muted-foreground\">User</th>\n                    <th className=\"px-4 py-3 text-left font-medium text-muted-foreground\">Action</th>\n                    <th className=\"px-4 py-3 text-left font-medium text-muted-foreground\">IP Address</th>\n                    <th className=\"px-4 py-3 text-left font-medium text-muted-foreground\">Details</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredLogs.length > 0 ? (\n                    filteredLogs.map((log) => (\n                      <tr key={log.id} className=\"border-b last:border-b-0 hover:bg-muted/50\">\n                        <td className=\"whitespace-nowrap px-4 py-3\">{log.timestamp}</td>\n                        <td className=\"px-4 py-3\">{getUserName(log.userId)}</td>\n                        <td className=\"px-4 py-3\">{log.action}</td>\n                        <td className=\"px-4 py-3\">{log.ipAddress}</td>\n                        <td className=\"px-4 py-3\">{log.details}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={5} className=\"py-6 text-center text-muted-foreground\">\n                        No matching logs found.\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n            {/* Add Pagination controls here if needed */}\n          </>\n        )}\n      </ClientOnly>\n    </div>\n  );\n}\n", "import { useState, useEffect } from \"react\";\n\ninterface ClientOnlyProps {\n  children: () => React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\n/**\n * Utility component to only render its children on the client side.\n * Useful for components that depend on browser APIs or cause hydration mismatches.\n */\nexport function ClientOnly({ children, fallback = null }: ClientOnlyProps) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return fallback;\n  }\n\n  return <>{children()}</>;\n}\n", "import React from 'react';\nimport { CalendarIcon } from 'lucide-react'; // Example icon\n\nexport function DateFilter() {\n  // Basic placeholder - implement actual date range selection later\n  return (\n    <div className=\"flex items-center space-x-2 rounded-md border bg-white p-2 text-sm shadow-sm dark:border-gray-700 dark:bg-gray-900\">\n      <CalendarIcon className=\"h-4 w-4 text-gray-500 dark:text-gray-400\" />\n      <span>Reporting Period:</span>\n      <select className=\"rounded border bg-gray-50 px-2 py-1 text-sm dark:border-gray-600 dark:bg-gray-800\">\n        <option>Current Term</option>\n        <option>Last Term</option>\n        <option>This Year</option>\n        <option>Custom Range...</option> {/* Needs date picker implementation */}\n      </select>\n    </div>\n  );\n}\n", "import type { User, Group, MarketplaceItem, PurchaseRecord, SecurityLog } from '~/types/admin';\n\n// Mock Users\nexport const mockUsers: User[] = [\n  { id: \"u101\", fullName: \"Alice Wonderland\", email: \"alice@example.com\", role: \"User\", groupId: \"g1\", groupName: \"Explorers\", balance: 1500, createdAt: \"2024-01-15\", status: \"active\" },\n  { id: \"u102\", fullName: \"Bob The Builder\", email: \"bob@example.com\", role: \"User\", groupId: \"g2\", groupName: \"Creators\", balance: 800, createdAt: \"2024-01-20\", status: \"active\" },\n  { id: \"u103\", fullName: \"Charlie Chaplin\", email: \"charlie@example.com\", role: \"Admin\", groupId: \"g1\", groupName: \"Explorers\", balance: 2500, createdAt: \"2024-02-01\", status: \"active\" },\n  { id: \"u104\", fullName: \"Diana Prince\", email: \"diana@example.com\", role: \"Super Admin\", groupId: \"g0\", groupName: \"System\", balance: 10000, createdAt: \"2024-01-01\", status: \"active\" },\n  { id: \"u105\", fullName: \"Evan Almighty\", email: \"evan@example.com\", role: \"User\", groupId: \"g2\", groupName: \"Creators\", balance: 300, createdAt: \"2024-03-10\", status: \"suspended\" },\n];\n\n// Mock Groups\nexport const mockGroups: Group[] = [\n  { id: \"g0\", name: \"System\", description: \"System administrators\" },\n  { id: \"g1\", name: \"Explorers\", description: \"Users who explore content\" },\n  { id: \"g2\", name: \"Creators\", description: \"Users who create content\" },\n];\n\n// Mock Marketplace Items\nexport const mockMarketplaceItems: MarketplaceItem[] = [\n  { id: \"item001\", name: \"Digital Badge - Explorer\", description: \"A cool badge for exploration achievements.\", price: 50, imageUrl: \"/icons/badge-explorer.png\", category: \"Digital Goods\", stock: -1, status: 'active' }, // Unlimited stock\n  { id: \"item002\", name: \"T-Shirt - Creator Logo\", description: \"High-quality cotton t-shirt with the Creator logo.\", price: 250, imageUrl: \"/images/tshirt-creator.jpg\", category: \"Merchandise\", stock: 50, status: 'active' },\n  { id: \"item003\", name: \"Sticker Pack - Assorted\", description: \"Pack of 5 assorted vinyl stickers.\", price: 75, imageUrl: \"/images/sticker-pack.jpg\", category: \"Merchandise\", stock: 100, status: 'active' },\n  { id: \"item004\", name: \"Exclusive Tutorial Access\", description: \"Unlock access to an exclusive video tutorial.\", price: 500, imageUrl: \"/icons/tutorial-access.png\", category: \"Digital Goods\", stock: -1, status: 'active' }, // Unlimited stock\n  { id: \"item005\", name: \"Limited Edition Poster\", description: \"Signed poster, only 10 available!\", price: 1000, imageUrl: \"/images/poster-limited.jpg\", category: \"Collectibles\", stock: 10, status: 'active' },\n  { id: \"item006\", name: \"Coffee Mug - Explorer\", description: \"Ceramic mug with the Explorer insignia.\", price: 150, imageUrl: \"/images/mug-explorer.jpg\", category: \"Merchandise\", stock: 3, status: 'active' }, // Low stock example\n  { id: \"item007\", name: \"Old Gadget\", description: \"An old, dusty gadget.\", price: 20, imageUrl: \"/images/old-gadget.jpg\", category: \"Collectibles\", stock: 1, status: 'inactive' }, // Inactive example\n];\n\n// Mock Purchase History - Added quantity, status, deliveryDate\nexport const mockPurchaseHistory: PurchaseRecord[] = [\n  { id: \"ph001\", itemId: \"item001\", itemName: \"Digital Badge - Explorer\", price: 50, quantity: 1, purchaseDate: \"2024-07-15T10:30:00Z\", userId: \"u101\", status: 'delivered', deliveryDate: \"2024-07-15T10:31:00Z\" }, // Digital goods delivered instantly\n  { id: \"ph002\", itemId: \"item003\", itemName: \"Sticker Pack - Assorted\", price: 75, quantity: 1, purchaseDate: \"2024-07-16T14:00:00Z\", userId: \"u102\", status: 'pending', deliveryDate: null },\n  { id: \"ph003\", itemId: \"item005\", itemName: \"Limited Edition Poster\", price: 1000, quantity: 1, purchaseDate: \"2024-07-18T09:15:00Z\", userId: \"u103\", status: 'pending', deliveryDate: null },\n  { id: \"ph004\", itemId: \"item002\", itemName: \"T-Shirt - Creator Logo\", price: 250, quantity: 1, purchaseDate: \"2024-07-19T11:00:00Z\", userId: \"u101\", status: 'delivered', deliveryDate: \"2024-07-21T15:00:00Z\" },\n  { id: \"ph005\", itemId: \"item006\", itemName: \"Coffee Mug - Explorer\", price: 150, quantity: 1, purchaseDate: \"2024-07-20T16:45:00Z\", userId: \"u104\", status: 'pending', deliveryDate: null },\n  { id: \"ph006\", itemId: \"item003\", itemName: \"Sticker Pack - Assorted\", price: 75, quantity: 1, purchaseDate: \"2024-07-21T08:20:00Z\", userId: \"u101\", status: 'pending', deliveryDate: null },\n];\n\n// --- NEW MOCK DATA FOR REPORTS ---\n\n// Mock ESSENCE Time Series Data\nexport const mockEssenceTimeSeries = [\n  { date: '2024-01', totalEssence: 5000 },\n  { date: '2024-02', totalEssence: 7500 },\n  { date: '2024-03', totalEssence: 9000 },\n  { date: '2024-04', totalEssence: 11200 },\n  { date: '2024-05', totalEssence: 13500 },\n  { date: '2024-06', totalEssence: 15100 },\n  { date: '2024-07', totalEssence: 16850 }, // Current total based on mockUsers sum + some extra\n];\n\n// Mock Reward vs Fine Summary\nexport const mockRewardFineSummary = [\n  { type: 'Rewards', amount: 3200 },\n  { type: 'Fines', amount: -450 }, // Fines are negative\n];\n\n// Mock Central Fine Account Activity\nexport const mockFineAccountActivity = [\n  { id: 'fa001', timestamp: '2024-07-10 09:15', userId: 'u102', amount: -50, reason: 'Late submission' },\n  { id: 'fa002', timestamp: '2024-07-12 14:30', userId: 'u105', amount: -100, reason: 'Policy violation' },\n  { id: 'fa003', timestamp: '2024-07-18 11:00', userId: 'u101', amount: -25, reason: 'Minor infraction' },\n  { id: 'fa004', timestamp: '2024-07-20 16:00', userId: 'u102', amount: -75, reason: 'Repeat late submission' },\n  { id: 'fa005', timestamp: '2024-07-22 08:45', userId: 'u105', amount: -200, reason: 'Serious violation' },\n];\n\n// Mock Central Fine Account Balance\nexport const mockCentralFineAccountBalance = 450; // Sum of the negative amounts above\n\n// Mock Security Logs\nexport const mockSecurityLogs: SecurityLog[] = [\n  {\n    id: \"sl001\",\n    timestamp: \"2024-07-25 10:00:00\",\n    userId: \"u101\",\n    action: \"User Login\",\n    ipAddress: \"192.168.1.10\",\n    details: \"Successful login from Alice Wonderland\",\n    category: \"authentication\",\n    severity: \"info\",\n  },\n  {\n    id: \"sl002\",\n    timestamp: \"2024-07-25 10:05:30\",\n    userId: \"u102\",\n    action: \"Transfer ESSENCE\",\n    ipAddress: \"192.168.1.11\",\n    details: \"Bob The Builder transferred 50 ESSENCE to Alice Wonderland\",\n    category: \"transfer\",\n    severity: \"info\",\n  },\n  {\n    id: \"sl003\",\n    timestamp: \"2024-07-25 10:10:15\",\n    userId: \"u105\",\n    action: \"Failed Login Attempt\",\n    ipAddress: \"203.0.113.45\",\n    details: \"Failed login attempt for user 'evan@example.com' (incorrect password)\",\n    category: \"authentication\",\n    severity: \"warning\",\n  },\n  {\n    id: \"sl004\",\n    timestamp: \"2024-07-25 10:15:00\",\n    userId: \"u103\",\n    action: \"Admin Action: User Role Change\",\n    ipAddress: \"192.168.1.12\",\n    details: \"Charlie Chaplin changed user 'u102' role to 'Admin'\",\n    category: \"admin\",\n    severity: \"info\",\n  },\n  {\n    id: \"sl005\",\n    timestamp: \"2024-07-25 10:20:40\",\n    userId: \"u101\",\n    action: \"Purchase Item\",\n    ipAddress: \"192.168.1.10\",\n    details: \"Alice Wonderland purchased 'Digital Badge - Explorer'\",\n    category: \"marketplace\",\n    severity: \"info\",\n  },\n  {\n    id: \"sl006\",\n    timestamp: \"2024-07-25 10:25:00\",\n    userId: \"u104\",\n    action: \"System Maintenance\",\n    ipAddress: \"127.0.0.1\",\n    details: \"Automated system backup initiated\",\n    category: \"system\",\n    severity: \"info\",\n  },\n  {\n    id: \"sl007\",\n    timestamp: \"2024-07-25 10:30:00\",\n    userId: \"u105\",\n    action: \"Account Suspension\",\n    ipAddress: \"192.168.1.13\",\n    details: \"Evan Almighty's account suspended due to policy violation\",\n    category: \"admin\",\n    severity: \"error\",\n  },\n  {\n    id: \"sl008\",\n    timestamp: \"2024-07-25 10:35:00\",\n    userId: \"u101\",\n    action: \"Transfer ESSENCE\",\n    ipAddress: \"192.168.1.10\",\n    details: \"Alice Wonderland transferred 100 ESSENCE to Bob The Builder\",\n    category: \"transfer\",\n    severity: \"info\",\n  },\n  {\n    id: \"sl009\",\n    timestamp: \"2024-07-25 10:40:00\",\n    userId: \"u102\",\n    action: \"User Logout\",\n    ipAddress: \"192.168.1.11\",\n    details: \"Bob The Builder logged out\",\n    category: \"authentication\",\n    severity: \"info\",\n  },\n  {\n    id: \"sl010\",\n    timestamp: \"2024-07-25 10:45:00\",\n    userId: \"u103\",\n    action: \"Failed Transfer Attempt\",\n    ipAddress: \"192.168.1.12\",\n    details: \"Charlie Chaplin attempted to transfer 5000 ESSENCE with insufficient funds\",\n    category: \"transfer\",\n    severity: \"warning\",\n  },\n];\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { Link } from \"@remix-run/react\";\nimport Papa from 'papaparse';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable'; // Import the autotable plugin\nimport { useStore } from '~/store/store'; // Import the Zustand store\nimport type { Transaction } from '~/store/types'; // Import Transaction type from store\n\n// Extend jsPDF interface for autotable\ndeclare module 'jspdf' {\n  interface jsPDF {\n    autoTable: (options: any) => jsPDF;\n  }\n}\n\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Life Economy - Transactions\" },\n    { name: \"description\", content: \"View your transaction history\" },\n  ];\n};\n\n// --- SVG Icons (Keep existing icons) ---\nconst DownloadIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\n    <polyline points=\"7 10 12 15 17 10\" />\n    <line x1=\"12\" x2=\"12\" y1=\"15\" y2=\"3\" />\n  </svg>\n);\n\nconst FileTextIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\" />\n    <polyline points=\"14 2 14 8 20 8\" />\n    <line x1=\"16\" x2=\"8\" y1=\"13\" y2=\"13\" />\n    <line x1=\"16\" x2=\"8\" y1=\"17\" y2=\"17\" />\n    <line x1=\"10\" x2=\"8\" y1=\"9\" y2=\"9\" />\n  </svg>\n);\n\nconst TableIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M12 3v18\" />\n    <rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" />\n    <path d=\"M3 9h18\" />\n    <path d=\"M3 15h18\" />\n  </svg>\n);\n\nconst SearchIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <path d=\"m21 21-4.3-4.3\" />\n  </svg>\n);\n\nconst CalendarIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M8 2v4\" />\n    <path d=\"M16 2v4\" />\n    <rect width=\"18\" height=\"18\" x=\"3\" y=\"4\" rx=\"2\" />\n    <path d=\"M3 10h18\" />\n  </svg>\n);\n\n// --- Remove Dummy Transaction Data ---\n// const dummyTransactions: Transaction[] = [ ... ]; // REMOVED\n\nconst ITEMS_PER_PAGE = 10; // Increased items per page\n\nexport default function Transactions() {\n  // --- Get transactions and user info from Zustand store ---\n  const { transactions: allTransactions, currentUser, users } = useStore((state) => ({\n    transactions: state.transactions,\n    currentUser: state.currentUser,\n    users: state.users, // Needed to potentially display user names if needed later\n  }));\n\n  // --- Filter transactions for the current user (or all for admin/superadmin) ---\n  // For now, let's assume we show transactions for the *current logged-in user*\n  // You might adjust this based on roles later (e.g., show all for admins)\n  const userTransactions = useMemo(() => {\n    if (!currentUser) return [];\n    // Filter transactions where the userId matches the currentUser's ID\n    // Also include system-level transactions if they don't have a specific userId\n    // Or adjust this logic based on how you assign userId to transactions\n    return allTransactions.filter(tx => tx.userId === currentUser.id || !tx.userId);\n  }, [allTransactions, currentUser]);\n\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [csvDownloadUrl, setCsvDownloadUrl] = useState<string | null>(null);\n  const [pdfDownloadUrl, setPdfDownloadUrl] = useState<string | null>(null);\n\n  // --- Cleanup Blob URLs on component unmount ---\n  useEffect(() => {\n    const currentCsvUrl = csvDownloadUrl;\n    const currentPdfUrl = pdfDownloadUrl;\n    return () => {\n      if (currentCsvUrl) {\n        console.log(\"[Cleanup] Revoking CSV URL:\", currentCsvUrl);\n        URL.revokeObjectURL(currentCsvUrl);\n      }\n      if (currentPdfUrl) {\n        console.log(\"[Cleanup] Revoking PDF URL:\", currentPdfUrl);\n        URL.revokeObjectURL(currentPdfUrl);\n      }\n    };\n  }, [csvDownloadUrl, pdfDownloadUrl]);\n\n\n  const formatCurrency = (amount: number | null) => {\n    if (amount === null || amount === undefined) return \"\";\n    const numAmount = Number(amount);\n    if (isNaN(numAmount)) return \"\";\n    return numAmount.toFixed(2);\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      return new Date(dateString).toLocaleString(); // More readable format\n    } catch (e) {\n      return dateString; // Fallback\n    }\n  };\n\n\n  const filteredTransactions = useMemo(() => {\n    let filtered = userTransactions; // Start with user-specific transactions\n\n    // Date Filtering\n    if (startDate) {\n      try {\n        const start = new Date(startDate);\n        start.setHours(0, 0, 0, 0);\n        if (!isNaN(start.getTime())) {\n          filtered = filtered.filter(tx => {\n            const txDate = new Date(tx.date);\n            return !isNaN(txDate.getTime()) && txDate >= start;\n          });\n        }\n      } catch (e) { console.error(\"Invalid start date:\", e); }\n    }\n    if (endDate) {\n       try {\n        const end = new Date(endDate);\n        end.setHours(23, 59, 59, 999);\n         if (!isNaN(end.getTime())) {\n          filtered = filtered.filter(tx => {\n             const txDate = new Date(tx.date);\n            return !isNaN(txDate.getTime()) && txDate <= end;\n          });\n        }\n      } catch (e) { console.error(\"Invalid end date:\", e); }\n    }\n\n    // Search Term Filtering (Narration)\n    if (searchTerm) {\n      const lowerCaseSearchTerm = searchTerm.toLowerCase();\n      filtered = filtered.filter(tx =>\n        tx.narration?.toLowerCase().includes(lowerCaseSearchTerm)\n      );\n    }\n\n    // Sort by date descending (newest first)\n    return filtered.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n  }, [userTransactions, startDate, endDate, searchTerm]);\n\n  // Effect to revoke URLs when filters change\n  useEffect(() => {\n    if (csvDownloadUrl) {\n      console.log(\"[Filter Change] Revoking old CSV URL:\", csvDownloadUrl);\n      URL.revokeObjectURL(csvDownloadUrl);\n      setCsvDownloadUrl(null);\n    }\n    if (pdfDownloadUrl) {\n      console.log(\"[Filter Change] Revoking old PDF URL:\", pdfDownloadUrl);\n      URL.revokeObjectURL(pdfDownloadUrl);\n      setPdfDownloadUrl(null);\n    }\n    // Reset to page 1 when filters change\n    setCurrentPage(1);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [startDate, endDate, searchTerm, userTransactions]); // Add userTransactions dependency\n\n\n  const totalPages = Math.ceil(filteredTransactions.length / ITEMS_PER_PAGE);\n\n  const paginatedTransactions = useMemo(() => {\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n    const endIndex = startIndex + ITEMS_PER_PAGE;\n    return filteredTransactions.slice(startIndex, endIndex);\n  }, [filteredTransactions, currentPage]);\n\n  const handlePreviousPage = () => {\n    setCurrentPage((prev) => Math.max(prev - 1, 1));\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prev) => Math.min(prev + 1, totalPages));\n  };\n\n  // --- Export Functions using Visible Link (Keep existing logic) ---\n  const handleExportCSV = useCallback(() => {\n    console.log(\"[Export CSV] Started.\");\n    if (filteredTransactions.length === 0) {\n      alert(\"No transactions to export.\");\n      console.log(\"[Export CSV] Aborted: No transactions.\");\n      return;\n    }\n    try {\n      if (csvDownloadUrl) {\n        console.log(\"[Export CSV] Revoking previous CSV URL:\", csvDownloadUrl);\n        URL.revokeObjectURL(csvDownloadUrl);\n      }\n      if (pdfDownloadUrl) {\n        console.log(\"[Export CSV] Revoking existing PDF URL:\", pdfDownloadUrl);\n        URL.revokeObjectURL(pdfDownloadUrl);\n        setPdfDownloadUrl(null);\n      }\n\n      console.log(`[Export CSV] Processing ${filteredTransactions.length} transactions.`);\n      const csvData = Papa.unparse(filteredTransactions.map(tx => ({\n        Date: formatDate(tx.date), // Use formatted date\n        Type: tx.type || 'N/A', // Add Type column\n        Narration: tx.narration,\n        Debit: formatCurrency(tx.debit),\n        Credit: formatCurrency(tx.credit),\n        Balance: formatCurrency(tx.balance),\n      })), { header: true });\n      console.log(\"[Export CSV] CSV data generated.\");\n\n      const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\n      console.log(\"[Export CSV] Blob created.\");\n      const url = URL.createObjectURL(blob);\n      console.log(\"[Export CSV] New Blob URL created:\", url);\n\n      setCsvDownloadUrl(url);\n      console.log(\"[Export CSV] CSV download URL set in state.\");\n\n    } catch (error) {\n        console.error(\"[Export CSV] Failed:\", error);\n        alert(\"An error occurred while exporting CSV data.\");\n        setCsvDownloadUrl(null);\n    } finally {\n        console.log(\"[Export CSV] Finished.\");\n    }\n  }, [filteredTransactions, csvDownloadUrl, pdfDownloadUrl]);\n\n  const handleExportPDF = useCallback(() => {\n    console.log(\"[Export PDF] Started.\");\n     if (filteredTransactions.length === 0) {\n      alert(\"No transactions to export.\");\n      console.log(\"[Export PDF] Aborted: No transactions.\");\n      return;\n    }\n    try {\n      if (pdfDownloadUrl) {\n        console.log(\"[Export PDF] Revoking previous PDF URL:\", pdfDownloadUrl);\n        URL.revokeObjectURL(pdfDownloadUrl);\n      }\n      if (csvDownloadUrl) {\n        console.log(\"[Export PDF] Revoking existing CSV URL:\", csvDownloadUrl);\n        URL.revokeObjectURL(csvDownloadUrl);\n        setCsvDownloadUrl(null);\n      }\n\n      console.log(`[Export PDF] Processing ${filteredTransactions.length} transactions.`);\n      console.log(\"[Export PDF] Creating jsPDF instance...\");\n      const doc = new jsPDF();\n      doc.text(\"Transaction History\", 14, 15);\n      console.log(\"[Export PDF] Generating PDF table using autoTable...\");\n      doc.autoTable({\n        head: [['Date', 'Type', 'Narration', 'Debit', 'Credit', 'Balance']], // Added Type\n        body: filteredTransactions.map(tx => [\n          formatDate(tx.date), // Use formatted date\n          tx.type || 'N/A',    // Add Type\n          tx.narration,\n          formatCurrency(tx.debit),\n          formatCurrency(tx.credit),\n          formatCurrency(tx.balance),\n        ]),\n        startY: 20,\n        headStyles: { fillColor: [22, 160, 133] },\n        styles: { fontSize: 8 },\n        columnStyles: {\n          0: { cellWidth: 30 }, // Date\n          1: { cellWidth: 20 }, // Type\n          2: { cellWidth: 'auto'}, // Narration\n          3: { halign: 'right', cellWidth: 20 }, // Debit\n          4: { halign: 'right', cellWidth: 20 }, // Credit\n          5: { halign: 'right', cellWidth: 25 }, // Balance\n        },\n      });\n      console.log(\"[Export PDF] autoTable finished.\");\n\n      console.log(\"[Export PDF] Generating PDF Blob...\");\n      const pdfBlob = doc.output('blob');\n      console.log(\"[Export PDF] Blob created.\");\n      const url = URL.createObjectURL(pdfBlob);\n      console.log(\"[Export PDF] New Blob URL created:\", url);\n\n      setPdfDownloadUrl(url);\n      console.log(\"[Export PDF] PDF download URL set in state.\");\n\n    } catch (error) {\n        console.error(\"[Export PDF] Failed:\", error);\n        alert(\"An error occurred while exporting PDF data.\");\n        setPdfDownloadUrl(null);\n    } finally {\n        console.log(\"[Export PDF] Finished.\");\n    }\n  }, [filteredTransactions, pdfDownloadUrl, csvDownloadUrl]);\n  // --- End of Visible Link Export Functions ---\n\n  const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n  const endIndex = Math.min(startIndex + ITEMS_PER_PAGE, filteredTransactions.length);\n\n\n  return (\n    <div className=\"container mx-auto p-4 md:p-6\">\n      <h1 className=\"text-2xl font-semibold mb-4\">Transaction History</h1>\n\n      {/* --- Filters and Export Section --- */}\n      <div className=\"mb-4 flex flex-wrap items-center gap-4\">\n        {/* Date Range Picker */}\n        <div className=\"flex items-center gap-2\">\n          <CalendarIcon className=\"h-5 w-5 text-gray-500 dark:text-gray-400\" />\n          <input\n            type=\"date\"\n            placeholder=\"Start Date\"\n            value={startDate}\n            onChange={(e) => {\n                setStartDate(e.target.value);\n                if (endDate && e.target.value > endDate) {\n                    setEndDate(\"\"); // Reset end date if start date is after it\n                }\n            }}\n            className=\"border rounded px-2 py-1 text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-gray-200\"\n            aria-label=\"Start Date\"\n          />\n          <span>-</span>\n          <input\n            type=\"date\"\n            placeholder=\"End Date\"\n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n            min={startDate || undefined} // Set min based on start date\n            className=\"border rounded px-2 py-1 text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-gray-200\"\n            aria-label=\"End Date\"\n          />\n        </div>\n\n        {/* Keyword Search */}\n        <div className=\"relative flex-grow max-w-xs\">\n          <SearchIcon className=\"absolute left-2 top-1/2 h-4 w-4 -translate-y-1/2 text-gray-500 dark:text-gray-400\" />\n          <input\n            type=\"search\"\n            placeholder=\"Search narration...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full rounded border bg-white py-1.5 pl-8 pr-2 text-sm shadow-sm dark:bg-gray-700 dark:border-gray-600 dark:text-gray-200\"\n            aria-label=\"Search transactions\"\n          />\n        </div>\n\n        {/* Export Buttons and Links */}\n        <div className=\"flex flex-col items-end gap-1 ml-auto\">\n           <div className=\"flex gap-2\">\n              <button\n                onClick={handleExportCSV}\n                disabled={filteredTransactions.length === 0}\n                className=\"inline-flex items-center gap-1 rounded-md bg-gray-200 px-3 py-1.5 text-sm font-medium text-gray-700 hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 dark:disabled:bg-gray-800 dark:disabled:text-gray-500\"\n                aria-label=\"Generate CSV Export Link\"\n              >\n                <FileTextIcon className=\"h-4 w-4\" />\n                Export CSV\n              </button>\n              <button\n                onClick={handleExportPDF}\n                disabled={filteredTransactions.length === 0}\n                className=\"inline-flex items-center gap-1 rounded-md bg-gray-200 px-3 py-1.5 text-sm font-medium text-gray-700 hover:bg-gray-300 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 dark:disabled:bg-gray-800 dark:disabled:text-gray-500\"\n                aria-label=\"Generate PDF Export Link\"\n              >\n                <DownloadIcon className=\"h-4 w-4\" />\n                Export PDF\n              </button>\n           </div>\n           {/* Visible Download Links */}\n           <div className=\"flex gap-4 text-sm h-5\"> {/* Added fixed height to prevent layout shift */}\n             {csvDownloadUrl && (\n               <a\n                 href={csvDownloadUrl}\n                 download=\"transactions.csv\"\n                 className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 underline\"\n               >\n                 Click to Download CSV\n               </a>\n             )}\n             {pdfDownloadUrl && (\n               <a\n                 href={pdfDownloadUrl}\n                 download=\"transactions.pdf\"\n                 className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 underline\"\n               >\n                 Click to Download PDF\n               </a>\n             )}\n           </div>\n        </div>\n      </div>\n\n      {/* --- Transactions Table --- */}\n      <div className=\"overflow-x-auto rounded-lg border dark:border-gray-700\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\n            <tr>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400\">Date</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400\">Type</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400\">Narration</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400\">Debit</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400\">Credit</th>\n              <th scope=\"col\" className=\"px-4 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500 dark:text-gray-400\">Balance</th>\n            </tr>\n          </thead>\n          <tbody className=\"divide-y divide-gray-200 bg-white dark:divide-gray-700 dark:bg-gray-900\">\n            {paginatedTransactions.length > 0 ? (\n              paginatedTransactions.map((tx) => (\n                <tr key={tx.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-800/50\">\n                  <td className=\"whitespace-nowrap px-4 py-3 text-sm text-gray-900 dark:text-gray-200\">{formatDate(tx.date)}</td>\n                  <td className=\"whitespace-nowrap px-4 py-3 text-sm text-gray-900 dark:text-gray-200\">{tx.type || 'N/A'}</td>\n                  <td className=\"whitespace-nowrap px-4 py-3 text-sm text-gray-900 dark:text-gray-200\">{tx.narration}</td>\n                  <td className={`whitespace-nowrap px-4 py-3 text-right text-sm ${tx.debit ? 'text-red-600 dark:text-red-400' : 'text-gray-500 dark:text-gray-400'}`}>{formatCurrency(tx.debit)}</td>\n                  <td className={`whitespace-nowrap px-4 py-3 text-right text-sm ${tx.credit ? 'text-green-600 dark:text-green-400' : 'text-gray-500 dark:text-gray-400'}`}>{formatCurrency(tx.credit)}</td>\n                  <td className=\"whitespace-nowrap px-4 py-3 text-right text-sm font-medium text-gray-900 dark:text-gray-200\">{formatCurrency(tx.balance)}</td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={6} className=\"px-4 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\n                  {userTransactions.length === 0 ? \"No transactions available for this user.\" : \"No transactions found matching your criteria.\"}\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* --- Pagination --- */}\n      {totalPages > 1 && (\n        <div className=\"mt-4 flex flex-wrap items-center justify-between gap-2\">\n          <span className=\"text-sm text-gray-700 dark:text-gray-400\">\n            {filteredTransactions.length > 0 ?\n              `Showing ${startIndex + 1} to ${endIndex} of ${filteredTransactions.length} results` :\n              'Showing 0 results'\n            }\n          </span>\n          <div className=\"flex gap-1\">\n            <button\n              onClick={handlePreviousPage}\n              disabled={currentPage === 1}\n              className=\"rounded border bg-white px-2 py-1 text-sm hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-gray-800 dark:border-gray-700 dark:text-gray-200 dark:hover:bg-gray-700 dark:disabled:bg-gray-900 dark:disabled:text-gray-500\"\n              aria-label=\"Go to previous page\"\n            >\n              Previous\n            </button>\n            <button\n              onClick={handleNextPage}\n              disabled={currentPage === totalPages || totalPages === 0}\n              className=\"rounded border bg-white px-2 py-1 text-sm hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed dark:bg-gray-800 dark:border-gray-700 dark:text-gray-200 dark:hover:bg-gray-700 dark:disabled:bg-gray-900 dark:disabled:text-gray-500\"\n              aria-label=\"Go to next page\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import type { MetaFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getUserProfile } from \"~/lib/auth.server\";\nimport { ManagementTabs } from \"~/components/management/ManagementTabs\";\nimport type { UserRole } from \"~/types/admin\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Life Economy - Management\" },\n    { name: \"description\", content: \"Manage users, groups, and system settings.\" },\n  ];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const { userProfile } = await getUserProfile(request);\n\n  if (!userProfile) {\n    throw redirect(\"/login\");\n  }\n\n  const allowedRoles: UserRole[] = ['Admin', 'Super Admin'];\n  if (!allowedRoles.includes(userProfile.role as UserRole)) {\n    // Redirect to dashboard or show an unauthorized message\n    throw redirect(\"/dashboard\");\n  }\n\n  return json({ userRole: userProfile.role });\n}\n\nexport default function ManagementPage() {\n  const { userRole } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"container mx-auto p-4 md:p-6\">\n      <h1 className=\"text-2xl font-semibold mb-4 text-gray-800 dark:text-gray-100\">Management</h1>\n      <ManagementTabs userRole={userRole as UserRole} />\n    </div>\n  );\n}\n", "import React, { useState } from 'react';\nimport { Tab } from '@headlessui/react';\nimport { CurrencyTab } from './CurrencyTab';\nimport { BehaviourTab } from './BehaviourTab';\nimport { EconomyTab } from './EconomyTab';\nimport { DollarSignIcon, ScaleIcon, TrendingUpIcon } from 'lucide-react';\nimport type { UserRole } from '~/types/admin';\n\ninterface ManagementTabsProps {\n  userRole: UserRole;\n}\n\nexport function ManagementTabs({ userRole }: ManagementTabsProps) {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  // Define the tabs with icons\n  const tabs = [\n    {\n      name: 'Currency',\n      icon: <DollarSignIcon className=\"h-5 w-5 mr-2\" />,\n      component: <CurrencyTab />,\n      roles: ['Super Admin'], // Only Super Admin can access Currency tab\n    },\n    {\n      name: 'Behaviour',\n      icon: <ScaleIcon className=\"h-5 w-5 mr-2\" />,\n      component: <BehaviourTab />,\n      roles: ['Admin', 'Super Admin'],\n    },\n    {\n      name: 'Economy',\n      icon: <TrendingUpIcon className=\"h-5 w-5 mr-2\" />,\n      component: <EconomyTab />,\n      roles: ['Admin', 'Super Admin'],\n    },\n  ];\n\n  // Filter tabs based on user role\n  const accessibleTabs = tabs.filter(tab => tab.roles.includes(userRole));\n\n  return (\n    <div className=\"w-full px-2 py-4 sm:px-0\">\n      <Tab.Group selectedIndex={selectedIndex} onChange={setSelectedIndex}>\n        <Tab.List className=\"flex space-x-1 rounded-xl bg-gray-100 p-1 dark:bg-gray-800\">\n          {accessibleTabs.map((tab) => (\n            <Tab\n              key={tab.name}\n              className={({ selected }) =>\n                `w-full flex items-center justify-center rounded-lg py-2.5 text-sm font-medium leading-5\n                ring-blue-500 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2\n                ${selected\n                  ? 'bg-white text-blue-700 shadow dark:bg-gray-700 dark:text-white'\n                  : 'text-gray-600 hover:bg-white/[0.12] hover:text-blue-700 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white'\n                }`\n              }\n            >\n              {tab.icon}\n              {tab.name}\n            </Tab>\n          ))}\n        </Tab.List>\n        <Tab.Panels className=\"mt-2\">\n          {accessibleTabs.map((tab, idx) => (\n            <Tab.Panel\n              key={idx}\n              className={`rounded-xl bg-white p-3 ring-white/60 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2 dark:bg-gray-900`}\n            >\n              {tab.component}\n            </Tab.Panel>\n          ))}\n        </Tab.Panels>\n      </Tab.Group>\n    </div>\n  );\n}\n", "import React, { useState, useEffect } from 'react';\nimport { DollarSignIcon, HistoryIcon, WalletIcon } from 'lucide-react';\nimport { useToast } from \"~/components/ui/use-toast\";\nimport { supabase } from '~/lib/supabase';\nimport { useUser } from '~/lib/auth';\nimport { useUserRole } from '~/hooks/useUserRole'; // Import the useUserRole hook\nimport { useStore } from '~/store/store'; // Import Zustand store\nimport type { Transaction } from '~/store/types'; // Import Transaction type\n\nexport function CurrencyTab() {\n  const { addToast } = useToast();\n  const user = useUser();\n  const userRole = useUserRole(); // Get the current user's role\n  const addTransaction = useStore((state) => state.addTransaction); // Get addTransaction from Zustand\n  const updateUserBalance = useStore((state) => state.updateUserBalance); // Get updateUserBalance from Zustand\n\n  const [totalEssence, setTotalEssence] = useState(1000000); // Example initial value\n  const [mintAmount, setMintAmount] = useState('');\n  const [mintReason, setMintReason] = useState('');\n  const [issuanceHistory, setIssuanceHistory] = useState<Transaction[]>([]); // Use Transaction type for history\n  const [userBalance, setUserBalance] = useState<number | null>(null);\n\n  // Set Supabase session explicitly when user changes\n  useEffect(() => {\n    if (user?.id && user.accessToken) {\n      // Set the session on the client-side Supabase instance\n      supabase.auth.setSession({\n        access_token: user.accessToken,\n        refresh_token: user.refreshToken,\n        expires_in: user.expiresIn,\n        token_type: 'Bearer',\n        user: user // Pass the full user object if needed by Supabase client\n      }).catch(error => {\n        console.error(\"Error setting Supabase session:\", error);\n      });\n    } else {\n      // Clear session if no user\n      supabase.auth.signOut().catch(error => {\n        console.error(\"Error clearing Supabase session:\", error);\n      });\n    }\n  }, [user]);\n\n\n  // Fetch user balance on component mount and when user changes\n  useEffect(() => {\n    const fetchUserBalance = async () => {\n      if (user?.id) {\n        const { data, error } = await supabase\n          .from('profiles')\n          .select('balance')\n          .eq('id', user.id)\n          .single();\n\n        if (error) {\n          console.error(\"Error fetching user balance:\", error);\n          addToast({\n            title: \"Error\",\n            description: \"Failed to fetch your current balance.\",\n            variant: \"destructive\",\n          });\n        } else if (data) {\n          setUserBalance(parseFloat(data.balance));\n        }\n      }\n    };\n\n    fetchUserBalance();\n  }, [user, addToast]);\n\n  // Simulate fetching total essence and issuance history (replace with actual DB calls)\n  useEffect(() => {\n    // In a real app, you'd fetch this from a central ledger or aggregate from transactions\n    // For now, we'll keep the dummy data for totalEssence and issuanceHistory\n    // You might fetch actual issuance history from a 'transactions' table filtered by type 'Minting'\n  }, []);\n\n  const handleMintCurrency = async () => {\n    console.log(\"DEBUG: Mint Currency button clicked!\"); // Added for debugging\n    console.log(\"DEBUG: mintAmount state:\", mintAmount); // New debug log\n    const amount = parseFloat(mintAmount);\n    console.log(\"DEBUG: Parsed amount:\", amount); // New debug log\n\n    console.log(\"DEBUG: User object:\", user); // New debug log\n    console.log(\"DEBUG: User ID:\", user?.id); // New debug log\n\n    if (isNaN(amount) || amount <= 0) {\n      addToast({\n        title: \"Minting Failed\",\n        description: \"Please enter a valid positive amount to mint.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (!user?.id) {\n      addToast({\n        title: \"Minting Failed\",\n        description: \"User not authenticated.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    try {\n      // 1. Update user's balance in the profiles table\n      const newBalance = (userBalance || 0) + amount;\n      const { error: updateError } = await supabase\n        .from('profiles')\n        .update({ balance: newBalance })\n        .eq('id', user.id);\n\n      if (updateError) {\n        throw updateError;\n      }\n\n      // 2. Add transaction to the transactions table\n      const transaction: Transaction = {\n        id: crypto.randomUUID(), // Generate a unique ID\n        user_id: user.id, // Changed from userId to user_id\n        created_at: new Date().toISOString(), // Changed from 'date' to 'created_at'\n        type: 'Minting',\n        narration: mintReason || 'ESSENCE minting',\n        debit: null,\n        credit: amount,\n        balance_after: newBalance,\n      };\n\n      // --- DEBUGGING RLS ISSUE ---\n      console.log(\"DEBUG: Attempting to insert transaction.\");\n      console.log(\"DEBUG: Authenticated user ID from useUser():\", user?.id);\n      console.log(\"DEBUG: Transaction object being inserted:\", transaction);\n      // --- END DEBUGGING ---\n\n      const { error: transactionError } = await supabase\n        .from('transactions')\n        .insert([transaction]);\n\n      if (transactionError) {\n        throw transactionError;\n      }\n\n      // 3. Update local state and Zustand store\n      setTotalEssence(prevTotal => prevTotal + amount);\n      setUserBalance(newBalance);\n      setIssuanceHistory(prevHistory => [transaction, ...prevHistory]); // Add to history\n      addTransaction(transaction); // Add to global Zustand transactions\n\n      updateUserBalance(user.id, newBalance); // Update user balance in Zustand\n\n      addToast({\n        title: \"Minting Successful\",\n        description: `Successfully minted ${amount.toLocaleString()} ESSENCE. Your new balance is ${newBalance.toLocaleString()}.`,\n        variant: \"default\",\n      });\n      setMintAmount('');\n      setMintReason('');\n\n    } catch (error: any) {\n      console.error(\"Error minting currency:\", error);\n      addToast({\n        title: \"Minting Failed\",\n        description: `An error occurred: ${error.message || error.toString()}`,\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // Restrict access to Super Admin\n  if (userRole !== 'Super Admin') {\n    return (\n      <div className=\"p-4 text-center text-red-500 dark:text-red-400\">\n        <h2 className=\"text-xl font-semibold mb-4\">Access Denied</h2>\n        <p>You do not have the necessary permissions to view this page.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-100\">Currency Management</h2>\n\n      {/* Cards Container */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n        {/* Total ESSENCE in Circulation Card */}\n        <div className=\"bg-blue-100 dark:bg-blue-900 p-4 rounded-lg shadow-md flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <DollarSignIcon className=\"h-8 w-8 text-blue-600 dark:text-blue-300 mr-3\" />\n            <div>\n              <p className=\"text-sm font-medium text-blue-700 dark:text-blue-200\">Total ESSENCE in Circulation</p>\n              <p className=\"text-2xl font-bold text-blue-800 dark:text-blue-100\">{totalEssence.toLocaleString()} ESSENCE</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Your Current Balance Card */}\n        <div className=\"bg-blue-100 dark:bg-blue-900 p-4 rounded-lg shadow-md flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <WalletIcon className=\"h-8 w-8 text-blue-600 dark:text-blue-300 mr-3\" />\n            <div>\n              <p className=\"text-sm font-medium text-blue-700 dark:text-blue-200\">Your Current Balance</p>\n              <p className=\"text-2xl font-bold text-blue-800 dark:text-blue-100\">\n                {userBalance !== null ? `${userBalance.toLocaleString()} ESSENCE` : 'Loading...'}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mint Currency Section */}\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Mint New ESSENCE</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"mintAmount\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Amount to Mint\n            </label>\n            <input\n              type=\"number\"\n              id=\"mintAmount\"\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              placeholder=\"e.g., 10000\"\n              value={mintAmount}\n              onChange={(e) => setMintAmount(e.target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"mintReason\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Reason (Optional)\n            </label>\n            <input\n              type=\"text\"\n              id=\"mintReason\"\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              placeholder=\"e.g., Community event rewards\"\n              value={mintReason}\n              onChange={(e) => setMintReason(e.target.value)}\n            />\n          </div>\n        </div>\n        <button\n          onClick={handleMintCurrency}\n          className=\"mt-6 w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:bg-blue-700 dark:hover:bg-blue-800\"\n        >\n          Mint Currency\n        </button>\n      </div>\n\n      {/* Issuance History Table */}\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100 flex items-center\">\n          <HistoryIcon className=\"h-5 w-5 mr-2\" />\n          Issuance History\n        </h3>\n        {issuanceHistory.length === 0 ? (\n          <p className=\"text-gray-500 dark:text-gray-400\">No issuance history found.</p>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Date/Time\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Amount\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Description\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Issued By\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700\">\n                {issuanceHistory.map((record) => (\n                  <tr key={record.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">\n                      {new Date(record.created_at).toLocaleString()}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n                      {record.credit?.toLocaleString()} ESSENCE\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n                      {record.narration}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n                      {user?.email || 'System'} {/* Display user email or 'System' */}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import * as React from \"react\"\n\nimport { ToastActionElement, ToastProps } from \"~/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype Action =\n  | {\n      type: typeof actionTypes.ADD_TOAST\n      toast: ToasterToast\n    }\n  | {\n      type: typeof actionTypes.UPDATE_TOAST\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: typeof actionTypes.DISMISS_TOAST\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: typeof actionTypes.REMOVE_TOAST\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case actionTypes.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case actionTypes.UPDATE_TOAST:\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case actionTypes.DISMISS_TOAST:\n      const { toastId } = action\n      // ! This is basically a hack. OPTIMIZE:\n      if (toastId) {\n        return {\n          ...state,\n          toasts: state.toasts.map((t) =>\n            t.id === toastId ? { ...t, open: false } : t\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          toasts: state.toasts.map((t) => ({ ...t, open: false })),\n        }\n      }\n\n    case actionTypes.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nfunction useToast() {\n  const [state, dispatch] = React.useReducer(reducer, { toasts: [] })\n\n  const addToast = React.useCallback((toast: ToasterToast) => {\n    dispatch({\n      type: actionTypes.ADD_TOAST,\n      toast: {\n        ...toast,\n        id: genId(),\n        open: true,\n        onOpenChange: (open) => {\n          if (!open) {\n            dispatch({ type: actionTypes.DISMISS_TOAST, toastId: toast.id })\n          }\n        },\n      },\n    })\n  }, [dispatch])\n\n  const updateToast = React.useCallback((toast: Partial<ToasterToast>) => {\n    dispatch({ type: actionTypes.UPDATE_TOAST, toast })\n  }, [dispatch])\n\n  const dismissToast = React.useCallback((toastId?: ToasterToast[\"id\"]) => {\n    dispatch({ type: actionTypes.DISMISS_TOAST, toastId })\n  }, [dispatch])\n\n  const removeToast = React.useCallback((toastId?: ToasterToast[\"id\"]) => {\n    dispatch({ type: actionTypes.REMOVE_TOAST, toastId })\n  }, [dispatch])\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if (state.toasts.length > 0) {\n        dispatch({ type: actionTypes.REMOVE_TOAST, toastId: state.toasts[0].id })\n      }\n    }, TOAST_REMOVE_DELAY)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [state.toasts])\n\n  return {\n    toasts: state.toasts,\n    addToast,\n    updateToast,\n    dismissToast,\n    removeToast,\n  }\n}\n\nexport { useToast, reducer, actionTypes }\n", "import { useEffect, useState } from 'react';\nimport { useMatches } from '@remix-run/react';\nimport type { UserProfile } from '~/types/user';\nimport { useStore } from '~/store/store'; // Import Zustand store\n\n// Define a type for the user object that includes accessToken and refreshToken\ninterface AuthenticatedUser extends UserProfile {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: number;\n}\n\nexport function useUser(): AuthenticatedUser | null {\n  const matches = useMatches();\n  const [user, setUser] = useState<AuthenticatedUser | null>(null);\n  const setCurrentUser = useStore((state) => state.setCurrentUser);\n\n  useEffect(() => {\n    console.log(\"DEBUG: useUser useEffect triggered.\"); // New debug log\n    const rootMatch = matches.find((match) => match.id === 'root');\n    if (rootMatch && rootMatch.data && typeof rootMatch.data === 'object' && 'userProfile' in rootMatch.data) {\n      const userProfile = rootMatch.data.userProfile as UserProfile | null;\n      const session = rootMatch.data.session as any; // Access the session data\n\n      console.log(\"DEBUG: rootMatch.data:\", rootMatch.data); // New debug log\n      console.log(\"DEBUG: userProfile from rootMatch:\", userProfile); // New debug log\n      console.log(\"DEBUG: session from rootMatch:\", session); // New debug log\n\n      if (userProfile && session?.access_token && session?.refresh_token && session?.expires_in) {\n        const authenticatedUser: AuthenticatedUser = {\n          ...userProfile,\n          accessToken: session.access_token,\n          refreshToken: session.refresh_token,\n          expiresIn: session.expires_in,\n        };\n        setUser(authenticatedUser);\n        setCurrentUser(authenticatedUser); // Update Zustand store\n        console.log(\"DEBUG: Authenticated user set:\", authenticatedUser); // New debug log\n      } else {\n        setUser(null);\n        setCurrentUser(null); // Clear user in Zustand store\n        console.log(\"DEBUG: User profile or session data incomplete/missing. User set to null.\"); // New debug log\n      }\n    } else {\n      console.log(\"DEBUG: rootMatch not found or data missing.\"); // New debug log\n      setUser(null);\n      setCurrentUser(null);\n    }\n  }, [matches, setCurrentUser]);\n\n  return user;\n}\n", "/**\n * MOCK Hook: Simulates fetching the current user's role.\n * Replace this with actual authentication/authorization logic later.\n */\nexport function useUserRole(): 'Super Admin' | 'Admin' | 'User' | null {\n  // TODO: Replace with real role fetching logic\n  // For now, hardcode to 'User' for development/testing purposes.\n  // Change this to 'Admin' or 'Super Admin' to test access control.\n  return 'Super Admin'; // Keep as 'User' as per last update\n}\n", "import React, { useState, useMemo } from 'react';\nimport { useToast } from \"~/components/ui/use-toast\";\nimport { ToggleGroup, ToggleGroupItem } from \"~/components/ui/toggle-group\";\nimport { Input } from \"~/components/ui/input\";\nimport { Button } from \"~/components/ui/button\";\nimport { Label } from \"~/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue, SelectGroup, SelectLabel } from \"~/components/ui/select\";\nimport { HistoryIcon } from 'lucide-react';\nimport { cn } from '~/lib/utils';\n\nexport function BehaviourTab() {\n  const { addToast } = useToast();\n  const [mode, setMode] = useState<'reward' | 'fine'>('reward');\n  const [targetType, setTargetType] = useState<'user' | 'group'>('user');\n  const [targetId, setTargetId] = useState('');\n  const [amount, setAmount] = useState('');\n  const [reason, setReason] = useState('');\n  const [userSearchTerm, setUserSearchTerm] = useState('');\n  const [groupSearchTerm, setGroupSearchTerm] = useState('');\n\n  // Dummy data for users and groups\n  const users = useMemo(() => [\n    { id: 'user1', name: 'Alice Smith' },\n    { id: 'user2', name: 'Bob Johnson' },\n    { id: 'user3', name: 'Charlie Brown' },\n    { id: 'user4', name: 'David Lee' },\n    { id: 'user5', name: 'Eve Davis' },\n    { id: 'user6', name: 'Frank White' },\n    { id: 'user7', name: 'Grace Taylor' },\n    { id: 'user8', name: 'Henry Clark' },\n    { id: 'user9', name: 'Ivy Hall' },\n    { id: 'user10', name: 'Jack King' },\n  ], []);\n\n  const groups = useMemo(() => [\n    { id: 'group1', name: 'Developers' },\n    { id: 'group2', name: 'Designers' },\n    { id: 'group3', name: 'Marketing' },\n    { id: 'group4', name: 'Sales' },\n    { id: 'group5', name: 'Support' },\n  ], []);\n\n  const [history, setHistory] = useState([\n    { id: 1, date: '2023-10-26 10:00', type: 'reward', target: 'Alice Smith', amount: 100, reason: 'Excellent work', issuedBy: 'AdminUser' },\n    { id: 2, date: '2023-10-27 14:30', type: 'fine', target: 'Bob Johnson', amount: 50, reason: 'Late submission', issuedBy: 'AdminUser' },\n  ]);\n\n  const filteredUsers = useMemo(() => {\n    return users.filter(user =>\n      user.name.toLowerCase().includes(userSearchTerm.toLowerCase())\n    );\n  }, [users, userSearchTerm]);\n\n  const filteredGroups = useMemo(() => {\n    return groups.filter(group =>\n      group.name.toLowerCase().includes(groupSearchTerm.toLowerCase())\n    );\n  }, [groups, groupSearchTerm]);\n\n  const handleSubmit = () => {\n    const parsedAmount = parseFloat(amount);\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\n      addToast({\n        title: \"Action Failed\",\n        description: \"Please enter a valid positive amount.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (!targetId) {\n      addToast({\n        title: \"Action Failed\",\n        description: `Please select a ${targetType}.`,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const targetName = targetType === 'user'\n      ? users.find(u => u.id === targetId)?.name\n      : groups.find(g => g.id === targetId)?.name;\n\n    setHistory(prev => [\n      ...prev,\n      {\n        id: prev.length + 1,\n        date: new Date().toLocaleString(),\n        type: mode,\n        target: targetName || 'Unknown',\n        amount: parsedAmount,\n        reason: reason || 'No reason provided',\n        issuedBy: 'Current User (Simulated)',\n      }\n    ]);\n\n    addToast({\n      title: `${mode === 'reward' ? 'Reward' : 'Fine'} Successful`,\n      description: `${parsedAmount} ESSENCE ${mode === 'reward' ? 'rewarded to' : 'fined from'} ${targetName}.`,\n      variant: \"default\",\n    });\n\n    setAmount('');\n    setReason('');\n    setTargetId('');\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-100\">Behaviour Management</h2>\n\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">\n          {mode === 'reward' ? 'Reward' : 'Fine'} Users/Groups\n        </h3>\n\n        <div className=\"mb-4\">\n          <Label htmlFor=\"mode-toggle\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Select Mode\n          </Label>\n          <ToggleGroup\n            type=\"single\"\n            value={mode}\n            onValueChange={(value: 'reward' | 'fine') => value && setMode(value)}\n            className=\"flex\"\n          >\n            <ToggleGroupItem\n              value=\"reward\"\n              aria-label=\"Toggle reward\"\n              className={cn(\n                \"flex-1\",\n                mode === 'reward' && \"data-[state=on]:bg-green-500 data-[state=on]:text-white\"\n              )}\n            >\n              Reward\n            </ToggleGroupItem>\n            <ToggleGroupItem\n              value=\"fine\"\n              aria-label=\"Toggle fine\"\n              className={cn(\n                \"flex-1\",\n                mode === 'fine' && \"data-[state=on]:bg-red-500 data-[state=on]:text-white\"\n              )}\n            >\n              Fine\n            </ToggleGroupItem>\n          </ToggleGroup>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n          <div>\n            <Label htmlFor=\"target-type\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Target Type\n            </Label>\n            <Select value={targetType} onValueChange={(value: 'user' | 'group') => {\n              setTargetType(value);\n              setTargetId(''); // Reset targetId when type changes\n            }}>\n              <SelectTrigger className=\"w-full mt-1\">\n                <SelectValue placeholder=\"Select target type\" />\n              </SelectTrigger>\n              <SelectContent className=\"z-50\">\n                <SelectItem value=\"user\">User</SelectItem>\n                <SelectItem value=\"group\">Group</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          <div>\n            <Label htmlFor=\"target-select\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Select {targetType === 'user' ? 'User' : 'Group'}\n            </Label>\n            <Select value={targetId} onValueChange={setTargetId}>\n              <SelectTrigger className=\"w-full mt-1\">\n                <SelectValue placeholder={`Select ${targetType}`} />\n              </SelectTrigger>\n              <SelectContent className=\"z-50\">\n                {targetType === 'user' ? (\n                  <SelectGroup>\n                    <SelectLabel>\n                      <Input\n                        placeholder=\"Search users...\"\n                        value={userSearchTerm}\n                        onChange={(e) => setUserSearchTerm(e.target.value)}\n                        className=\"mb-2\"\n                        onClick={(e) => e.stopPropagation()} // Prevent closing select on input click\n                      />\n                    </SelectLabel>\n                    {filteredUsers.length > 0 ? (\n                      filteredUsers.map(u => <SelectItem key={u.id} value={u.id}>{u.name}</SelectItem>)\n                    ) : (\n                      <SelectItem value=\"no-user\" disabled>No users found</SelectItem>\n                    )}\n                  </SelectGroup>\n                ) : (\n                  <SelectGroup>\n                    <SelectLabel>\n                      <Input\n                        placeholder=\"Search groups...\"\n                        value={groupSearchTerm}\n                        onChange={(e) => setGroupSearchTerm(e.target.value)}\n                        className=\"mb-2\"\n                        onClick={(e) => e.stopPropagation()} // Prevent closing select on input click\n                      />\n                    </SelectLabel>\n                    {filteredGroups.length > 0 ? (\n                      filteredGroups.map(g => <SelectItem key={g.id} value={g.id}>{g.name}</SelectItem>)\n                    ) : (\n                      <SelectItem value=\"no-group\" disabled>No groups found</SelectItem>\n                    )}\n                  </SelectGroup>\n                )}\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n          <div>\n            <Label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Amount (ESSENCE)\n            </Label>\n            <Input\n              type=\"number\"\n              id=\"amount\"\n              placeholder=\"e.g., 100\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n              className=\"mt-1\"\n            />\n          </div>\n          <div>\n            <Label htmlFor=\"reason\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Reason (Optional)\n            </Label>\n            <Input\n              type=\"text\"\n              id=\"reason\"\n              placeholder=\"e.g., Project completion bonus\"\n              value={reason}\n              onChange={(e) => setReason(e.target.value)}\n              className=\"mt-1\"\n            />\n          </div>\n        </div>\n\n        <Button\n          onClick={handleSubmit}\n          className={cn(\n            \"w-full mt-4\",\n            mode === 'reward' ? 'bg-green-600 hover:bg-green-700 text-white' : 'bg-red-600 hover:bg-red-700 text-white'\n          )}\n        >\n          {mode === 'reward' ? 'Reward' : 'Fine'} {targetType === 'user' ? 'User' : 'Group'}\n        </Button>\n      </div>\n\n      {/* History Table */}\n      <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md\">\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100 flex items-center\">\n          <HistoryIcon className=\"h-5 w-5 mr-2\" />\n          Behaviour History\n        </h3>\n        {history.length === 0 ? (\n          <p className=\"text-gray-500 dark:text-gray-400\">No behaviour history found.</p>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Date/Time\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Type\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Target\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Amount\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Reason\n                  </th>\n                  <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">\n                    Issued By\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-800 dark:divide-gray-700\">\n                {history.map((record) => (\n                  <tr key={record.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">\n                      {record.date}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300 capitalize\">\n                      {record.type}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n                      {record.target}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n                      {record.amount.toLocaleString()} ESSENCE\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n                      {record.reason}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">\n                      {record.issuedBy}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst toggleGroupVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline: \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-9 px-3\",\n        sm: \"h-8 px-2\",\n        lg: \"h-10 px-3\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleGroupVariants>\n>(\n  {\n    variant: \"default\",\n    size: \"default\",\n  }\n)\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleGroupVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupContext.Provider value={{ variant, size }}>\n    <ToggleGroupPrimitive.Root\n      className={cn(\"flex items-center justify-center gap-1\", className)}\n      {...props}\n      ref={ref}\n    >\n      {children}\n    </ToggleGroupPrimitive.Root>\n  </ToggleGroupContext.Provider>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleGroupVariants>\n>(({ className, children, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleGroupVariants({\n          variant: context.variant,\n          size: context.size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem, toggleGroupVariants }\n", "import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n", "import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n", "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n", "import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n", "import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-gray-100 dark:bg-gray-700 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n}\n", "import React, { useState } from 'react';\nimport { Tab } from '@headlessui/react';\nimport { PlusCircleIcon, MinusCircleIcon, UserPlusIcon, UserMinusIcon } from 'lucide-react';\nimport { AddActivityTab } from './economy/AddActivityTab';\nimport { AddExpenseTab } from './economy/AddExpenseTab';\nimport { AssignActivityTab } from './economy/AssignActivityTab';\nimport { AssignExpenseTab } from './economy/AssignExpenseTab';\n\nexport function EconomyTab() {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const subTabs = [\n    {\n      name: 'Add Activity',\n      icon: <PlusCircleIcon className=\"h-5 w-5 mr-2\" />,\n      component: <AddActivityTab />,\n    },\n    {\n      name: 'Add Expense',\n      icon: <MinusCircleIcon className=\"h-5 w-5 mr-2\" />,\n      component: <AddExpenseTab />,\n    },\n    {\n      name: 'Assign Activity',\n      icon: <UserPlusIcon className=\"h-5 w-5 mr-2\" />,\n      component: <AssignActivityTab />,\n    },\n    {\n      name: 'Assign Expense',\n      icon: <UserMinusIcon className=\"h-5 w-5 mr-2\" />,\n      component: <AssignExpenseTab />,\n    },\n  ];\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-100\">Economy Settings</h2>\n      <p className=\"text-gray-700 dark:text-gray-300 mb-6\">\n        Manage activities, expenses, and their assignments within the system's economy.\n      </p>\n\n      <Tab.Group selectedIndex={selectedIndex} onChange={setSelectedIndex}>\n        <Tab.List className=\"flex space-x-1 rounded-xl bg-gray-100 p-1 dark:bg-gray-800 mb-4\">\n          {subTabs.map((tab) => (\n            <Tab\n              key={tab.name}\n              className={({ selected }) =>\n                `w-full flex items-center justify-center rounded-lg py-2.5 text-sm font-medium leading-5\n                ring-blue-500 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2\n                ${selected\n                  ? 'bg-white text-blue-700 shadow dark:bg-gray-700 dark:text-white'\n                  : 'text-gray-600 hover:bg-white/[0.12] hover:text-blue-700 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white'\n                }`\n              }\n            >\n              {tab.icon}\n              {tab.name}\n            </Tab>\n          ))}\n        </Tab.List>\n        <Tab.Panels className=\"mt-2\">\n          {subTabs.map((tab, idx) => (\n            <Tab.Panel\n              key={idx}\n              className={`rounded-xl bg-white p-3 ring-white/60 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2 dark:bg-gray-900`}\n            >\n              {tab.component}\n            </Tab.Panel>\n          ))}\n        </Tab.Panels>\n      </Tab.Group>\n    </div>\n  );\n}\n", "import React, { useState } from 'react';\nimport { Form } from '@remix-run/react';\nimport { Input } from '~/components/ui/input';\nimport { Label } from '~/components/ui/label';\nimport { Button } from '~/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '~/components/ui/select';\nimport { useToast } from '~/components/ui/use-toast';\n\ninterface Activity {\n  id: string;\n  name: string;\n  description: string;\n  pay: number;\n  frequency: string;\n  slotsAvailable: number;\n  createdDate: string;\n}\n\nexport function AddActivityTab() {\n  const { addToast } = useToast();\n  const [activities, setActivities] = useState<Activity[]>([]);\n  const [activityName, setActivityName] = useState('');\n  const [description, setDescription] = useState('');\n  const [pay, setPay] = useState('');\n  const [paymentFrequency, setPaymentFrequency] = useState('');\n  const [slotsAvailable, setSlotsAvailable] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const newActivity: Activity = {\n      id: Date.now().toString(),\n      name: activityName,\n      description: description,\n      pay: parseFloat(pay),\n      frequency: paymentFrequency,\n      slotsAvailable: parseInt(slotsAvailable),\n      createdDate: new Date().toLocaleDateString(),\n    };\n    setActivities([...activities, newActivity]);\n    addToast({\n      title: 'Activity Created',\n      description: `Activity '${activityName}' created successfully.`,\n      variant: 'success',\n    });\n    // Clear form\n    setActivityName('');\n    setDescription('');\n    setPay('');\n    setPaymentFrequency('');\n    setSlotsAvailable('');\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Add New Activity</h3>\n      <p className=\"text-gray-700 dark:text-gray-300 mb-6\">\n        Define new activities that users can participate in to earn ESSENCE.\n      </p>\n\n      <Form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\n        <div>\n          <Label htmlFor=\"activityName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Activity Name</Label>\n          <Input\n            id=\"activityName\"\n            name=\"activityName\"\n            type=\"text\"\n            value={activityName}\n            onChange={(e) => setActivityName(e.target.value)}\n            required\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Description</Label>\n          <Input\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"pay\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Pay (ESSENCE)</Label>\n          <Input\n            id=\"pay\"\n            name=\"pay\"\n            type=\"number\"\n            value={pay}\n            onChange={(e) => setPay(e.target.value)}\n            required\n            min=\"0\"\n            step=\"0.01\"\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"paymentFrequency\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Payment Frequency</Label>\n          <Select onValueChange={setPaymentFrequency} value={paymentFrequency} required>\n            <SelectTrigger className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\">\n              <SelectValue placeholder=\"Select frequency\" />\n            </SelectTrigger>\n            <SelectContent className=\"dark:bg-gray-800 dark:border-gray-600\">\n              <SelectItem value=\"Daily\">Daily</SelectItem>\n              <SelectItem value=\"Weekly\">Weekly</SelectItem>\n              <SelectItem value=\"Monthly\">Monthly</SelectItem>\n              <SelectItem value=\"One-time\">One-time</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n        <div>\n          <Label htmlFor=\"slotsAvailable\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Slots Available</Label>\n          <Input\n            id=\"slotsAvailable\"\n            name=\"slotsAvailable\"\n            type=\"number\"\n            value={slotsAvailable}\n            onChange={(e) => setSlotsAvailable(e.target.value)}\n            required\n            min=\"0\"\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n          />\n        </div>\n        <div className=\"md:col-span-2 flex justify-end\">\n          <Button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\">\n            Add Activity\n          </Button>\n        </div>\n      </Form>\n\n      <h4 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Existing Activities</h4>\n      <div className=\"mb-4 flex space-x-2\">\n        <Input placeholder=\"Search activities...\" className=\"flex-grow dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" />\n        {/* Add filter dropdowns here if needed */}\n      </div>\n      <div className=\"overflow-x-auto rounded-md shadow-sm\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Activity Name</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Description</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Pay</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Frequency</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Slots Available</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Created Date</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700\">\n            {activities.length === 0 ? (\n              <tr>\n                <td colSpan={6} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center dark:text-gray-400\">\n                  No activities created yet.\n                </td>\n              </tr>\n            ) : (\n              activities.map((activity) => (\n                <tr key={activity.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">{activity.name}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{activity.description}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{activity.pay}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{activity.frequency}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{activity.slotsAvailable}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{activity.createdDate}</td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n", "import React, { useState } from 'react';\nimport { Form } from '@remix-run/react';\nimport { Input } from '~/components/ui/input';\nimport { Label } from '~/components/ui/label';\nimport { Button } from '~/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '~/components/ui/select';\nimport { useToast } from '~/components/ui/use-toast';\n\ninterface Expense {\n  id: string;\n  name: string;\n  description: string;\n  cost: number;\n  frequency: string;\n  createdDate: string;\n}\n\nexport function AddExpenseTab() {\n  const { addToast } = useToast();\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [expenseName, setExpenseName] = useState('');\n  const [description, setDescription] = useState('');\n  const [cost, setCost] = useState('');\n  const [expenseFrequency, setExpenseFrequency] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const newExpense: Expense = {\n      id: Date.now().toString(),\n      name: expenseName,\n      description: description,\n      cost: parseFloat(cost),\n      frequency: expenseFrequency,\n      createdDate: new Date().toLocaleDateString(),\n    };\n    setExpenses([...expenses, newExpense]);\n    addToast({\n      title: 'Expense Added',\n      description: `Expense '${expenseName}' added successfully.`,\n      variant: 'success',\n    });\n    // Clear form\n    setExpenseName('');\n    setDescription('');\n    setCost('');\n    setExpenseFrequency('');\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Add New Expense</h3>\n      <p className=\"text-gray-700 dark:text-gray-300 mb-6\">\n        Define new expenses that can be deducted from users\u2019 balances.\n      </p>\n\n      <Form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\n        <div>\n          <Label htmlFor=\"expenseName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Expense Name</Label>\n          <Input\n            id=\"expenseName\"\n            name=\"expenseName\"\n            type=\"text\"\n            value={expenseName}\n            onChange={(e) => setExpenseName(e.target.value)}\n            required\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Description</Label>\n          <Input\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"cost\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Cost (ESSENCE)</Label>\n          <Input\n            id=\"cost\"\n            name=\"cost\"\n            type=\"number\"\n            value={cost}\n            onChange={(e) => setCost(e.target.value)}\n            required\n            min=\"0\"\n            step=\"0.01\"\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"expenseFrequency\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Expense Frequency</Label>\n          <Select onValueChange={setExpenseFrequency} value={expenseFrequency} required>\n            <SelectTrigger className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\">\n              <SelectValue placeholder=\"Select frequency\" />\n            </SelectTrigger>\n            <SelectContent className=\"dark:bg-gray-800 dark:border-gray-600\">\n              <SelectItem value=\"One-time\">One-time</SelectItem>\n              <SelectItem value=\"Daily\">Daily</SelectItem>\n              <SelectItem value=\"Weekly\">Weekly</SelectItem>\n              <SelectItem value=\"Monthly\">Monthly</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n        <div className=\"md:col-span-2 flex justify-end\">\n          <Button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\">\n            Add Expense\n          </Button>\n        </div>\n      </Form>\n\n      <h4 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Existing Expenses</h4>\n      <div className=\"mb-4 flex space-x-2\">\n        <Input placeholder=\"Search expenses...\" className=\"flex-grow dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" />\n        {/* Add filter dropdowns here if needed */}\n      </div>\n      <div className=\"overflow-x-auto rounded-md shadow-sm\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Expense Name</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Description</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Cost</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Frequency</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Created Date</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700\">\n            {expenses.length === 0 ? (\n              <tr>\n                <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center dark:text-gray-400\">\n                  No expenses added yet.\n                </td>\n              </tr>\n            ) : (\n              expenses.map((expense) => (\n                <tr key={expense.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">{expense.name}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{expense.description}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{expense.cost}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{expense.frequency}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{expense.createdDate}</td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n", "import React, { useState } from 'react';\nimport { Form } from '@remix-run/react';\nimport { Label } from '~/components/ui/label';\nimport { Button } from '~/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '~/components/ui/select';\nimport { ToggleGroup, ToggleGroupItem } from '~/components/ui/toggle-group';\nimport { Input } from '~/components/ui/input';\nimport { useToast } from '~/components/ui/use-toast';\n\ninterface AssignedActivity {\n  id: string;\n  assigneeName: string;\n  assigneeType: 'User' | 'Group';\n  activityName: string;\n  assignedDate: string;\n  assignedBy: string; // Placeholder for current admin/super admin\n}\n\nexport function AssignActivityTab() {\n  const { addToast } = useToast();\n  const [assignTo, setAssignTo] = useState<'User' | 'Group'>('User');\n  const [selectedAssignee, setSelectedAssignee] = useState('');\n  const [selectedActivity, setSelectedActivity] = useState('');\n  const [assignedActivities, setAssignedActivities] = useState<AssignedActivity[]>([]);\n  const [assigneeSearchTerm, setAssigneeSearchTerm] = useState('');\n  const [activitySearchTerm, setActivitySearchTerm] = useState('');\n\n  // Dummy data for selectors\n  const users = [\n    { id: 'user1', name: 'Alice Smith' },\n    { id: 'user2', name: 'Bob Johnson' },\n    { id: 'user3', name: 'Charlie Brown' },\n    { id: 'user4', name: 'David Lee' },\n    { id: 'user5', name: 'Eve Davis' },\n  ];\n  const groups = [\n    { id: 'group1', name: 'Developers' },\n    { id: 'group2', name: 'Designers' },\n    { id: 'group3', name: 'Marketing' },\n    { id: 'group4', name: 'Sales' },\n    { id: 'group5', name: 'HR' },\n  ];\n  const activities = [\n    { id: 'act1', name: 'Daily Code Review' },\n    { id: 'act2', name: 'Weekly Standup' },\n    { id: 'act3', name: 'Client Meeting' },\n    { id: 'act4', name: 'Project Planning' },\n    { id: 'act5', name: 'Bug Fixing Session' },\n  ];\n\n  const filteredAssignees = (assignTo === 'User' ? users : groups).filter(item =>\n    item.name.toLowerCase().includes(assigneeSearchTerm.toLowerCase())\n  );\n\n  const filteredActivities = activities.filter(activity =>\n    activity.name.toLowerCase().includes(activitySearchTerm.toLowerCase())\n  );\n\n  const handleAssign = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const assignee = assignTo === 'User' ? users.find(u => u.id === selectedAssignee) : groups.find(g => g.id === selectedAssignee);\n    const activity = activities.find(a => a.id === selectedActivity);\n\n    if (!assignee || !activity) {\n      addToast({\n        title: 'Assignment Failed',\n        description: 'Please select a valid assignee and activity.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const newAssignment: AssignedActivity = {\n      id: Date.now().toString(),\n      assigneeName: assignee.name,\n      assigneeType: assignTo,\n      activityName: activity.name,\n      assignedDate: new Date().toLocaleDateString(),\n      assignedBy: 'Admin User', // This should come from authenticated user context\n    };\n    setAssignedActivities([...assignedActivities, newAssignment]);\n    addToast({\n      title: 'Activity Assigned',\n      description: `Activity '${activity.name}' assigned to ${assignee.name}.`,\n      variant: 'success',\n    });\n    // Clear form\n    setSelectedAssignee('');\n    setSelectedActivity('');\n    setAssigneeSearchTerm('');\n    setActivitySearchTerm('');\n  };\n\n  const handleUnassign = (id: string) => {\n    setAssignedActivities(assignedActivities.filter(assignment => assignment.id !== id));\n    addToast({\n      title: 'Assignment Removed',\n      description: 'Activity assignment removed successfully.',\n      variant: 'success',\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Assign Activity</h3>\n      <p className=\"text-gray-700 dark:text-gray-300 mb-6\">\n        Assign specific activities to users or groups.\n      </p>\n\n      <Form onSubmit={handleAssign} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\n        <div className=\"md:col-span-2\">\n          <Label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Assign To</Label>\n          <ToggleGroup type=\"single\" value={assignTo} onValueChange={(value: 'User' | 'Group') => {\n            setAssignTo(value);\n            setSelectedAssignee(''); // Clear selected assignee when type changes\n            setAssigneeSearchTerm(''); // Clear search term\n          }} className=\"w-full\">\n            <ToggleGroupItem value=\"User\" className=\"flex-1 dark:bg-gray-700 dark:text-gray-100 dark:hover:bg-gray-600 data-[state=on]:bg-blue-500 data-[state=on]:text-white dark:data-[state=on]:bg-blue-600\">User</ToggleGroupItem>\n            <ToggleGroupItem value=\"Group\" className=\"flex-1 dark:bg-gray-700 dark:text-gray-100 dark:hover:bg-gray-600 data-[state=on]:bg-blue-500 data-[state=on]:text-white dark:data-[state=on]:bg-blue-600\">Group</ToggleGroupItem>\n          </ToggleGroup>\n        </div>\n\n        <div>\n          <Label htmlFor=\"assigneeSelector\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">{assignTo} Selector</Label>\n          <Select onValueChange={setSelectedAssignee} value={selectedAssignee} required>\n            <SelectTrigger id=\"assigneeSelector\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\">\n              <SelectValue placeholder={`Select ${assignTo.toLowerCase()}`} />\n            </SelectTrigger>\n            <SelectContent className=\"dark:bg-gray-800 dark:border-gray-600\">\n              <Input\n                placeholder={`Search ${assignTo.toLowerCase()}s...`}\n                className=\"mb-2 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n                value={assigneeSearchTerm}\n                onChange={(e) => setAssigneeSearchTerm(e.target.value)}\n                onClick={(e) => e.stopPropagation()} // Prevent closing select when clicking input\n              />\n              {filteredAssignees.length === 0 ? (\n                <SelectItem value=\"no-results\" disabled>No results found</SelectItem>\n              ) : (\n                filteredAssignees.map((item) => (\n                  <SelectItem key={item.id} value={item.id}>{item.name}</SelectItem>\n                ))\n              )}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div>\n          <Label htmlFor=\"activitySelector\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Activity Selector</Label>\n          <Select onValueChange={setSelectedActivity} value={selectedActivity} required>\n            <SelectTrigger id=\"activitySelector\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\">\n              <SelectValue placeholder=\"Select activity\" />\n            </SelectTrigger>\n            <SelectContent className=\"dark:bg-gray-800 dark:border-gray-600\">\n              <Input\n                placeholder=\"Search activities...\"\n                className=\"mb-2 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n                value={activitySearchTerm}\n                onChange={(e) => setActivitySearchTerm(e.target.value)}\n                onClick={(e) => e.stopPropagation()} // Prevent closing select when clicking input\n              />\n              {filteredActivities.length === 0 ? (\n                <SelectItem value=\"no-results\" disabled>No results found</SelectItem>\n              ) : (\n                filteredActivities.map((activity) => (\n                  <SelectItem key={activity.id} value={activity.id}>{activity.name}</SelectItem>\n                ))\n              )}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"md:col-span-2 flex justify-end\">\n          <Button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\">\n            Assign Activity\n          </Button>\n        </div>\n      </Form>\n\n      <h4 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Current Activity Assignments</h4>\n      <div className=\"mb-4 flex space-x-2\">\n        <Input placeholder=\"Search assignments...\" className=\"flex-grow dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" />\n        {/* Add filter dropdowns here if needed */}\n      </div>\n      <div className=\"overflow-x-auto rounded-md shadow-sm\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">User/Group Name</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Activity Name</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Assigned Date</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Assigned By</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Actions</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700\">\n            {assignedActivities.length === 0 ? (\n              <tr>\n                <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center dark:text-gray-400\">\n                  No activities assigned yet.\n                </td>\n              </tr>\n            ) : (\n              assignedActivities.map((assignment) => (\n                <tr key={assignment.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">{assignment.assigneeName} ({assignment.assigneeType})</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{assignment.activityName}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{assignment.assignedDate}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{assignment.assignedBy}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <Button\n                      variant=\"destructive\"\n                      size=\"sm\"\n                      onClick={() => handleUnassign(assignment.id)}\n                      className=\"bg-red-600 hover:bg-red-700 text-white\"\n                    >\n                      Unassign\n                    </Button>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n", "import React, { useState } from 'react';\nimport { Form } from '@remix-run/react';\nimport { Label } from '~/components/ui/label';\nimport { Button } from '~/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '~/components/ui/select';\nimport { ToggleGroup, ToggleGroupItem } from '~/components/ui/toggle-group';\nimport { Input } from '~/components/ui/input';\nimport { useToast } from '~/components/ui/use-toast';\n\ninterface AssignedExpense {\n  id: string;\n  assigneeName: string;\n  assigneeType: 'User' | 'Group';\n  expenseName: string;\n  assignedDate: string;\n  assignedBy: string; // Placeholder for current admin/super admin\n}\n\nexport function AssignExpenseTab() {\n  const { addToast } = useToast();\n  const [assignTo, setAssignTo] = useState<'User' | 'Group'>('User');\n  const [selectedAssignee, setSelectedAssignee] = useState('');\n  const [selectedExpense, setSelectedExpense] = useState('');\n  const [assignedExpenses, setAssignedExpenses] = useState<AssignedExpense[]>([]);\n  const [assigneeSearchTerm, setAssigneeSearchTerm] = useState('');\n  const [expenseSearchTerm, setExpenseSearchTerm] = useState('');\n\n  // Dummy data for selectors\n  const users = [\n    { id: 'user1', name: 'Alice Smith' },\n    { id: 'user2', name: 'Bob Johnson' },\n    { id: 'user3', name: 'Charlie Brown' },\n    { id: 'user4', name: 'David Lee' },\n    { id: 'user5', name: 'Eve Davis' },\n  ];\n  const groups = [\n    { id: 'group1', name: 'Developers' },\n    { id: 'group2', name: 'Designers' },\n    { id: 'group3', name: 'Marketing' },\n    { id: 'group4', name: 'Sales' },\n    { id: 'group5', name: 'HR' },\n  ];\n  const expenses = [\n    { id: 'exp1', name: 'Monthly Rent' },\n    { id: 'exp2', name: 'Software Subscription' },\n    { id: 'exp3', name: 'Team Lunch' },\n    { id: 'exp4', name: 'Office Supplies' },\n    { id: 'exp5', name: 'Travel Expenses' },\n  ];\n\n  const filteredAssignees = (assignTo === 'User' ? users : groups).filter(item =>\n    item.name.toLowerCase().includes(assigneeSearchTerm.toLowerCase())\n  );\n\n  const filteredExpenses = expenses.filter(expense =>\n    expense.name.toLowerCase().includes(expenseSearchTerm.toLowerCase())\n  );\n\n  const handleAssign = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const assignee = assignTo === 'User' ? users.find(u => u.id === selectedAssignee) : groups.find(g => g.id === selectedAssignee);\n    const expense = expenses.find(e => e.id === selectedExpense);\n\n    if (!assignee || !expense) {\n      addToast({\n        title: 'Assignment Failed',\n        description: 'Please select a valid assignee and expense.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const newAssignment: AssignedExpense = {\n      id: Date.now().toString(),\n      assigneeName: assignee.name,\n      assigneeType: assignTo,\n      expenseName: expense.name,\n      assignedDate: new Date().toLocaleDateString(),\n      assignedBy: 'Admin User', // This should come from authenticated user context\n    };\n    setAssignedExpenses([...assignedExpenses, newAssignment]);\n    addToast({\n      title: 'Expense Assigned',\n      description: `Expense '${expense.name}' assigned to ${assignee.name}.`,\n      variant: 'success',\n    });\n    // Clear form\n    setSelectedAssignee('');\n    setSelectedExpense('');\n    setAssigneeSearchTerm('');\n    setExpenseSearchTerm('');\n  };\n\n  const handleUnassign = (id: string) => {\n    setAssignedExpenses(assignedExpenses.filter(assignment => assignment.id !== id));\n    addToast({\n      title: 'Assignment Removed',\n      description: 'Expense assignment removed successfully.',\n      variant: 'success',\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Assign Expense</h3>\n      <p className=\"text-gray-700 dark:text-gray-300 mb-6\">\n        Assign specific expenses to users or groups.\n      </p>\n\n      <Form onSubmit={handleAssign} className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\n        <div className=\"md:col-span-2\">\n          <Label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Assign To</Label>\n          <ToggleGroup type=\"single\" value={assignTo} onValueChange={(value: 'User' | 'Group') => {\n            setAssignTo(value);\n            setSelectedAssignee(''); // Clear selected assignee when type changes\n            setAssigneeSearchTerm(''); // Clear search term\n          }} className=\"w-full\">\n            <ToggleGroupItem value=\"User\" className=\"flex-1 dark:bg-gray-700 dark:text-gray-100 dark:hover:bg-gray-600 data-[state=on]:bg-blue-500 data-[state=on]:text-white dark:data-[state=on]:bg-blue-600\">User</ToggleGroupItem>\n            <ToggleGroupItem value=\"Group\" className=\"flex-1 dark:bg-gray-700 dark:text-gray-100 dark:hover:bg-gray-600 data-[state=on]:bg-blue-500 data-[state=on]:text-white dark:data-[state=on]:bg-blue-600\">Group</ToggleGroupItem>\n          </ToggleGroup>\n        </div>\n\n        <div>\n          <Label htmlFor=\"assigneeSelector\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">{assignTo} Selector</Label>\n          <Select onValueChange={setSelectedAssignee} value={selectedAssignee} required>\n            <SelectTrigger id=\"assigneeSelector\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\">\n              <SelectValue placeholder={`Select ${assignTo.toLowerCase()}`} />\n            </SelectTrigger>\n            <SelectContent className=\"dark:bg-gray-800 dark:border-gray-600\">\n              <Input\n                placeholder={`Search ${assignTo.toLowerCase()}s...`}\n                className=\"mb-2 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n                value={assigneeSearchTerm}\n                onChange={(e) => setAssigneeSearchTerm(e.target.value)}\n                onClick={(e) => e.stopPropagation()} // Prevent closing select when clicking input\n              />\n              {filteredAssignees.length === 0 ? (\n                <SelectItem value=\"no-results\" disabled>No results found</SelectItem>\n              ) : (\n                filteredAssignees.map((item) => (\n                  <SelectItem key={item.id} value={item.id}>{item.name}</SelectItem>\n                ))\n              )}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div>\n          <Label htmlFor=\"expenseSelector\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Expense Selector</Label>\n          <Select onValueChange={setSelectedExpense} value={selectedExpense} required>\n            <SelectTrigger id=\"expenseSelector\" className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\">\n              <SelectValue placeholder=\"Select expense\" />\n            </SelectTrigger>\n            <SelectContent className=\"dark:bg-gray-800 dark:border-gray-600\">\n              <Input\n                placeholder=\"Search expenses...\"\n                className=\"mb-2 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\"\n                value={expenseSearchTerm}\n                onChange={(e) => setExpenseSearchTerm(e.target.value)}\n                onClick={(e) => e.stopPropagation()} // Prevent closing select when clicking input\n              />\n              {filteredExpenses.length === 0 ? (\n                <SelectItem value=\"no-results\" disabled>No results found</SelectItem>\n              ) : (\n                filteredExpenses.map((expense) => (\n                  <SelectItem key={expense.id} value={expense.id}>{expense.name}</SelectItem>\n                ))\n              )}\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"md:col-span-2 flex justify-end\">\n          <Button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\">\n            Assign Expense\n          </Button>\n        </div>\n      </Form>\n\n      <h4 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Current Expense Assignments</h4>\n      <div className=\"mb-4 flex space-x-2\">\n        <Input placeholder=\"Search assignments...\" className=\"flex-grow dark:bg-gray-700 dark:border-gray-600 dark:text-gray-100\" />\n        {/* Add filter dropdowns here if needed */}\n      </div>\n      <div className=\"overflow-x-auto rounded-md shadow-sm\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">User/Group Name</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Expense Name</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Assigned Date</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Assigned By</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-300\">Actions</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700\">\n            {assignedExpenses.length === 0 ? (\n              <tr>\n                <td colSpan={5} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center dark:text-gray-400\">\n                  No expenses assigned yet.\n                </td>\n              </tr>\n            ) : (\n              assignedExpenses.map((assignment) => (\n                <tr key={assignment.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100\">{assignment.assigneeName} ({assignment.assigneeType})</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{assignment.expenseName}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{assignment.assignedDate}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\">{assignment.assignedBy}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <Button\n                      variant=\"destructive\"\n                      size=\"sm\"\n                      onClick={() => handleUnassign(assignment.id)}\n                      className=\"bg-red-600 hover:bg-red-700 text-white\"\n                    >\n                      Unassign\n                    </Button>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { useStore } from \"~/store/store\";\nimport { useEffect } from \"react\";\nimport { UserDashboard } from \"~/components/dashboard/UserDashboard\";\nimport { AdminDashboard } from \"~/components/dashboard/AdminDashboard\";\nimport { getAuthSession, getUserProfile } from \"~/lib/auth.server\";\nimport type { UserProfile } from \"~/types/user\";\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  console.log(\"[Loader - dashboard] Dashboard route loader executed.\");\n  const headers = new Headers();\n  let userProfile: UserProfile | null = null;\n\n  try {\n    const session = await getAuthSession(request);\n    if (!session) {\n      console.log(\"[Loader - dashboard] No Supabase session found. Redirecting to /login.\");\n      throw redirect(\"/login\", { headers });\n    }\n\n    const { userProfile: fetchedProfile, headers: profileHeaders } = await getUserProfile(request);\n    userProfile = fetchedProfile;\n    profileHeaders.forEach((value, key) => headers.append(key, value));\n\n    if (!userProfile) {\n      console.log(\"[Loader - dashboard] User profile not found for session. Redirecting to /login.\");\n      throw redirect(\"/login\", { headers });\n    }\n\n    console.log(\"[Loader - dashboard] UserProfile fetched:\", userProfile.id, \"Role:\", userProfile.role);\n\n  } catch (err: any) {\n    if (err instanceof Response && err.status === 302) {\n      throw err; // Re-throw redirect responses\n    }\n    console.error(\"[Loader - dashboard] Error fetching user profile:\", err);\n    throw redirect(\"/login\", { headers }); // Redirect on any other error\n  }\n\n  return json({ userProfile }, { headers });\n}\n\nexport default function Dashboard() {\n  const { userProfile } = useLoaderData<typeof loader>();\n  const zustandSetCurrentUser = useStore((state) => state.setCurrentUser);\n  const currentUser = useStore((state) => state.currentUser); // Keep this to read current state\n\n  useEffect(() => {\n    if (userProfile) {\n      // Check if currentUser in Zustand is different from userProfile from loader\n      // This prevents infinite updates if the data is already consistent\n      const isZustandConsistent =\n        currentUser &&\n        currentUser.id === userProfile.id &&\n        currentUser.email === (userProfile.email || '') &&\n        currentUser.fullName === (userProfile.full_name || 'User') &&\n        currentUser.balance === (userProfile.balance ?? 0) &&\n        currentUser.role === (userProfile.role || 'User') &&\n        (userProfile.created_at ? currentUser.createdAt === new Date(userProfile.created_at).toISOString().split('T')[0] : !currentUser.createdAt) &&\n        currentUser.groupId === (userProfile.group_id || currentUser.groupId || 'group_placeholder_id') &&\n        currentUser.groupName === (userProfile.group_name || currentUser.groupName || 'Group Placeholder') &&\n        currentUser.avatarUrl === (userProfile.avatar_url || currentUser.avatarUrl || undefined);\n\n      if (!isZustandConsistent) {\n        zustandSetCurrentUser({\n          id: userProfile.id,\n          email: userProfile.email || '',\n          fullName: userProfile.full_name || 'User',\n          balance: userProfile.balance ?? 0,\n          role: userProfile.role || 'User',\n          createdAt: userProfile.created_at ? new Date(userProfile.created_at).toISOString().split('T')[0] : (currentUser?.createdAt || new Date().toISOString().split('T')[0]),\n          status: currentUser?.status || 'active', // Preserve existing status if not provided by profile\n          groupId: userProfile.group_id || currentUser?.groupId || 'group_placeholder_id',\n          groupName: userProfile.group_name || currentUser?.groupName || 'Group Placeholder',\n          avatarUrl: userProfile.avatar_url || currentUser?.avatarUrl || undefined,\n        });\n        console.log(\"[Dashboard Component] Updated currentUser in Zustand from loader data.\");\n      } else {\n        console.log(\"[Dashboard Component] Zustand currentUser is consistent with loader data.\");\n      }\n    }\n  }, [userProfile, zustandSetCurrentUser]); // Removed currentUser from dependencies\n\n  if (!currentUser) {\n    return (\n      <div className=\"flex min-h-screen flex-col items-center justify-center bg-gray-100 p-4 dark:bg-gray-950\">\n        <div className=\"w-full max-w-md rounded-lg bg-white p-8 shadow-lg dark:bg-gray-900 text-center\">\n          <h1 className=\"mb-4 text-2xl font-bold text-gray-900 dark:text-white\">Access Denied</h1>\n          <p className=\"text-gray-700 dark:text-gray-300\">You must be logged in to view the dashboard.</p>\n          <a href=\"/login\" className=\"mt-4 inline-block px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\">Go to Login</a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4 dark:bg-gray-950 md:p-6\">\n      <h1 className=\"mb-6 text-3xl font-bold text-gray-900 dark:text-white\">\n        {currentUser.role === 'Super Admin' || currentUser.role === 'Admin' ? 'Admin Dashboard' : 'User Dashboard'}\n      </h1>\n      {currentUser.role === 'Super Admin' || currentUser.role === 'Admin' ? (\n        <AdminDashboard />\n      ) : (\n        <UserDashboard currentUser={currentUser} />\n      )}\n    </div>\n  );\n}\n", "import React from 'react';\nimport type { User } from '~/types/admin';\n\ninterface UserDashboardProps {\n  currentUser: User;\n}\n\nexport function UserDashboard({ currentUser }: UserDashboardProps) {\n  return (\n    <div className=\"rounded-lg bg-white p-6 shadow-md dark:bg-gray-900\">\n      <h2 className=\"mb-4 text-2xl font-semibold text-gray-900 dark:text-white\">Your Dashboard</h2>\n      <p className=\"text-gray-700 dark:text-gray-300\">\n        Welcome, <span className=\"font-medium\">{currentUser.fullName || currentUser.email}</span>!\n      </p>\n      <p className=\"text-gray-700 dark:text-gray-300\">\n        Your current balance is: <span className=\"font-medium\">${currentUser.balance.toFixed(2)}</span>\n      </p>\n      <p className=\"mt-4 text-gray-700 dark:text-gray-300\">\n        This is your personal dashboard. More features will be added here soon.\n      </p>\n    </div>\n  );\n}\n", "import React from 'react';\n\nexport function AdminDashboard() {\n  return (\n    <div className=\"rounded-lg bg-white p-6 shadow-md dark:bg-gray-900\">\n      <h2 className=\"mb-4 text-2xl font-semibold text-gray-900 dark:text-white\">Admin Overview</h2>\n      <p className=\"text-gray-700 dark:text-gray-300\">\n        Welcome to the Admin Dashboard. Here you can manage users, activities, and system settings.\n      </p>\n      <p className=\"mt-4 text-gray-700 dark:text-gray-300\">\n        This section is under development.\n      </p>\n    </div>\n  );\n}\n", "import { useState, useEffect } from \"react\";\nimport type { MetaFunction, LoaderFunctionArgs, ActionFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, useRouteError, isRouteErrorResponse, Form, useActionData } from \"@remix-run/react\";\nimport { getAuthSession, getUserProfile, getSupabaseWithSessionAndHeaders } from \"~/lib/auth.server\";\nimport type { UserProfile } from \"~/types/user\";\nimport { ChangePasswordModal } from \"~/components/settings/ChangePasswordModal\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Life Economy - Account Settings\" },\n    { name: \"description\", content: \"Manage your account settings and preferences.\" },\n  ];\n};\n\n// Loader updated to securely fetch user profile\nexport async function loader({ request }: LoaderFunctionArgs) {\n  console.log(\"[Server Loader - settings] Attempting to fetch user profile for settings page.\");\n  try {\n    const { userProfile, headers } = await getUserProfile(request);\n\n    if (!userProfile) {\n      console.warn(\"[Server Loader - settings] No user profile found for authenticated session.\");\n      throw new Response(\"User profile not found.\", { status: 404 });\n    }\n\n    console.log(\"[Server Loader - settings] User profile fetched successfully:\", userProfile.id);\n    return json({ userProfile }, { headers });\n  } catch (err: any) {\n    console.error(\"[Server Loader - settings] Error caught during profile fetch:\", err);\n    if (err instanceof Response) {\n      throw err; // Re-throw Response objects directly (e.g., redirects, 404s)\n    }\n    throw new Response(err.message || \"An unknown error occurred fetching profile\", { status: 500 });\n  }\n}\n\n// Action function for password change\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const password = formData.get(\"password\") as string;\n  const confirmPassword = formData.get(\"confirmPassword\") as string;\n  const intent = formData.get(\"intent\"); // To differentiate actions if needed\n\n  console.log(`[Server Action - settings] Received password change request.`);\n\n  if (intent === \"changePassword\") {\n    if (!password || !confirmPassword) {\n      return json({ success: false, error: \"Password fields cannot be empty.\" }, { status: 400 });\n    }\n    if (password !== confirmPassword) {\n      return json({ success: false, error: \"Passwords do not match.\" }, { status: 400 });\n    }\n    if (password.length < 6) {\n      return json({ success: false, error: \"Password must be at least 6 characters long.\" }, { status: 400 });\n    }\n\n    try {\n      const { supabase, headers } = await getSupabaseWithSessionAndHeaders({ request });\n\n      console.log(`[Server Action - settings] Attempting to update password for current user.`);\n      const { data, error } = await supabase.auth.updateUser({ password: password });\n\n      if (error) {\n        console.error(\"[Server Action - settings] Supabase auth error updating password:\", error);\n        return json({ success: false, error: error.message || \"Failed to update password.\" }, { status: 500 });\n      }\n\n      console.log(\"[Server Action - settings] Password updated successfully for user:\", data?.user?.id);\n      return json({ success: true, message: \"Password updated successfully!\" }, { headers });\n\n    } catch (err: any) {\n      console.error(\"[Server Action - settings] Unexpected error during password update:\", err);\n      return json({ success: false, error: err.message || \"An unexpected error occurred.\" }, { status: 500 });\n    }\n  }\n\n  // Handle other intents or unknown intents\n  return json({ success: false, error: \"Invalid action intent.\" }, { status: 400 });\n}\n\n// --- AccountSettings Component ---\nexport default function AccountSettings() {\n  const { userProfile } = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\n  const [theme, setTheme] = useState<'light' | 'dark'>(() => {\n    if (typeof window !== 'undefined') {\n      return (localStorage.getItem('theme') as 'light' | 'dark') || 'light';\n    }\n    return 'light';\n  });\n\n  // Apply theme class to HTML element\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const root = window.document.documentElement;\n      root.classList.remove('light', 'dark');\n      root.classList.add(theme);\n      localStorage.setItem('theme', theme);\n    }\n  }, [theme]);\n\n  // Handle password update success/error from actionData\n  useEffect(() => {\n    if (actionData?.success) {\n      // Password modal will handle its own success message and auto-close\n      // No need to explicitly close it here, it's handled by ChangePasswordModal's useEffect\n    }\n  }, [actionData]);\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  if (!userProfile) {\n    return (\n      <div className=\"mx-auto max-w-4xl space-y-8 text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100\">Account Settings</h1>\n        <p className=\"text-gray-700 dark:text-gray-300\">Could not load user profile information.</p>\n      </div>\n    );\n  }\n\n  const memberSince = userProfile.created_at\n    ? new Date(userProfile.created_at).toLocaleDateString()\n    : \"N/A\";\n\n  return (\n    <div className=\"mx-auto max-w-4xl space-y-8 p-4 md:p-6\">\n      <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100\">Account Settings</h1>\n\n      {/* Profile Information Section */}\n      <div className=\"rounded-lg border bg-white p-6 shadow-sm dark:border-gray-800 dark:bg-gray-950\">\n        <h2 className=\"mb-1 text-xl font-semibold text-gray-900 dark:text-gray-100\">Profile Information</h2>\n        <p className=\"mb-6 text-sm text-gray-500 dark:text-gray-400\">\n          Your account details and preferences\n        </p>\n        <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n          <div>\n            <label className=\"mb-1 block text-xs font-medium text-gray-500 dark:text-gray-400\">\n              User ID\n            </label>\n            <p className=\"text-sm text-gray-900 dark:text-gray-100\">{userProfile.id || 'N/A'}</p>\n          </div>\n          <div>\n            <label className=\"mb-1 block text-xs font-medium text-gray-500 dark:text-gray-400\">\n              Name\n            </label>\n            <p className=\"text-sm text-gray-900 dark:text-gray-100\">{userProfile.full_name || 'N/A'}</p>\n          </div>\n          <div>\n            <label className=\"mb-1 block text-xs font-medium text-gray-500 dark:text-gray-400\">\n              Email\n            </label>\n            <p className=\"text-sm text-gray-900 dark:text-gray-100\">{userProfile.email || 'N/A'}</p>\n          </div>\n          <div>\n            <label className=\"mb-1 block text-xs font-medium text-gray-500 dark:text-gray-400\">\n              Member Since\n            </label>\n            <p className=\"text-sm text-gray-900 dark:text-gray-100\">{memberSince}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Security Section */}\n      <div className=\"rounded-lg border bg-white p-6 shadow-sm dark:border-gray-800 dark:bg-gray-950\">\n        <h2 className=\"mb-1 text-xl font-semibold text-gray-900 dark:text-gray-100\">Security</h2>\n        <p className=\"mb-6 text-sm text-gray-500 dark:text-gray-400\">\n          Manage your password and security settings\n        </p>\n        <div className=\"space-y-4\">\n          <div>\n            <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">Password</h3>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Update your account password.\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => setIsPasswordModalOpen(true)}\n              className=\"mt-2 text-sm font-medium text-blue-600 hover:underline dark:text-blue-400\"\n            >\n              Change password\n            </button>\n          </div>\n          <hr className=\"dark:border-gray-700\" />\n          <div>\n            <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">Two-Factor Authentication</h3>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Add an extra layer of security to your account\n            </p>\n            <button className=\"mt-2 text-sm font-medium text-blue-600 hover:underline dark:text-blue-400\">\n              Enable two-factor authentication {/* Still inactive */}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Appearance Section */}\n      <div className=\"rounded-lg border bg-white p-6 shadow-sm dark:border-gray-800 dark:bg-gray-950\">\n        <h2 className=\"mb-1 text-xl font-semibold text-gray-900 dark:text-gray-100\">Appearance</h2>\n        <p className=\"mb-6 text-sm text-gray-500 dark:text-gray-400\">\n          Customize the look and feel of the application.\n        </p>\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">Dark Mode</h3>\n          <label htmlFor=\"theme-toggle\" className=\"relative inline-flex cursor-pointer items-center\">\n            <input\n              type=\"checkbox\"\n              id=\"theme-toggle\"\n              className=\"peer sr-only\"\n              checked={theme === 'dark'}\n              onChange={toggleTheme}\n            />\n            <div className=\"peer h-6 w-11 rounded-full bg-gray-200 after:absolute after:left-[2px] after:top-[2px] after:h-5 after:w-5 after:rounded-full after:border after:border-gray-300 after:bg-white after:transition-all after:content-[''] peer-checked:bg-blue-600 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:border-gray-600 dark:bg-gray-700 dark:peer-focus:ring-blue-800\"></div>\n            <span className=\"ml-3 text-sm font-medium text-gray-900 dark:text-gray-300\">\n              {theme === 'dark' ? 'On' : 'Off'}\n            </span>\n          </label>\n        </div>\n      </div>\n\n      {/* Render the imported modal component */}\n      <ChangePasswordModal\n        isOpen={isPasswordModalOpen}\n        setIsOpen={setIsPasswordModalOpen}\n        // userId is no longer needed as the action updates the current session user\n      />\n    </div>\n  );\n}\n\n// Error Boundary remains the same - it catches errors thrown by the loader\nexport function ErrorBoundary() {\n  const error = useRouteError();\n  console.error(\"Settings Route Error Boundary caught error:\", error);\n\n  let errorMessage = \"An unexpected error occurred loading settings.\";\n  let errorStatus = 500;\n  let errorDetails = \"\"; // For potential extra info\n\n  if (isRouteErrorResponse(error)) {\n    errorMessage = error.data?.message || error.data || error.statusText || \"Error\";\n    errorStatus = error.status;\n  } else if (error instanceof Error) {\n    errorMessage = error.message;\n    errorDetails = error.stack || \"\";\n  } else if (typeof error === 'string') {\n    errorMessage = error;\n  }\n\n  return (\n     <div className=\"mx-auto max-w-4xl space-y-4 rounded-lg border border-red-300 bg-red-50 p-6 text-center shadow-sm dark:border-red-700 dark:bg-red-950\">\n       <h1 className=\"text-2xl font-bold text-red-700 dark:text-red-300\">Account Settings Error</h1>\n       <p className=\"text-red-600 dark:text-red-400\">Status: {errorStatus}</p>\n       <p className=\"text-red-600 dark:text-red-400\">{errorMessage}</p>\n       {errorDetails && (\n         <pre className=\"mt-2 overflow-auto whitespace-pre-wrap rounded bg-red-100 p-2 text-left text-xs text-red-800 dark:bg-red-900/50 dark:text-red-200\">\n           <code>{errorDetails}</code>\n         </pre>\n       )}\n       <p className=\"text-sm text-gray-600 dark:text-gray-400\">Please try refreshing the page or contact support if the problem persists.</p>\n     </div>\n  );\n}\n", "import { useState, Fragment, useEffect } from \"react\";\nimport { useActionData, Form } from \"@remix-run/react\";\nimport { Dialog, Transition } from '@headlessui/react';\nimport type { action as settingsAction } from '~/routes/settings'; // Import action type\n\n// Define the props type, userId is no longer needed\ninterface ChangePasswordModalProps {\n  isOpen: boolean;\n  setIsOpen: (open: boolean) => void;\n}\n\nexport function ChangePasswordModal({ isOpen, setIsOpen }: ChangePasswordModalProps) {\n  // Use the imported action type for useActionData\n  const actionData = useActionData<typeof settingsAction>();\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  // Function to close the modal and reset state\n  const closeModal = () => {\n    setIsOpen(false);\n    setShowSuccess(false);\n  };\n\n  // Use useEffect to handle the success message display and auto-close\n  useEffect(() => {\n    // Check if actionData exists and if it's from the password change intent\n    if (actionData && 'intent' in actionData && actionData.intent === 'changePassword') {\n      if (actionData.success) {\n        setShowSuccess(true);\n        const timer = setTimeout(() => {\n          closeModal();\n        }, 2500);\n        return () => clearTimeout(timer);\n      } else if (actionData.error) {\n        setShowSuccess(false); // Ensure success is false if there's an error\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- closeModal includes setIsOpen\n  }, [actionData]); // Removed setIsOpen from deps as closeModal covers it\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-10\" onClose={closeModal}>\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/25 dark:bg-black/50\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all dark:bg-gray-800\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-gray-100\"\n                >\n                  Change Password\n                </Dialog.Title>\n\n                {/* Success Message Area */}\n                {showSuccess && actionData?.success && (\n                  <div className=\"mt-4 rounded border border-green-400 bg-green-100 p-3 text-sm text-green-700 dark:border-green-600 dark:bg-green-900/30 dark:text-green-300\">\n                    {actionData.message}\n                  </div>\n                )}\n\n                {/* Error Message Area - Only show if not showing success */}\n                {!showSuccess && actionData?.error && (\n                  <div className=\"mt-4 rounded border border-red-400 bg-red-100 p-3 text-sm text-red-700 dark:border-red-600 dark:bg-red-900/30 dark:text-red-300\">\n                    {actionData.error}\n                  </div>\n                )}\n\n                {/* Form Area - Hide if success message is shown */}\n                {!showSuccess && (\n                  // IMPORTANT: The Form needs to point to the settings route action\n                  <Form method=\"post\" action=\"/settings\" className=\"mt-4 space-y-4\">\n                    {/* Add a hidden input to identify the action intent */}\n                    <input type=\"hidden\" name=\"intent\" value=\"changePassword\" />\n\n                    <div>\n                      <label\n                        htmlFor=\"password\"\n                        className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                      >\n                        New Password\n                      </label>\n                      <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        required\n                        minLength={6}\n                        className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white sm:text-sm\"\n                      />\n                       <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">Minimum 6 characters</p>\n                    </div>\n                    <div>\n                      <label\n                        htmlFor=\"confirmPassword\"\n                        className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n                      >\n                        Confirm New Password\n                      </label>\n                      <input\n                        type=\"password\"\n                        id=\"confirmPassword\"\n                        name=\"confirmPassword\"\n                        required\n                        minLength={6}\n                        className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white sm:text-sm\"\n                      />\n                    </div>\n\n                    <div className=\"mt-6 flex justify-end space-x-3\">\n                      <button\n                        type=\"button\"\n                        className=\"inline-flex justify-center rounded-md border border-transparent bg-gray-200 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-300 focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-2 dark:bg-gray-600 dark:text-gray-100 dark:hover:bg-gray-500\"\n                        onClick={closeModal}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        type=\"submit\"\n                        className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\n                      >\n                        Update Password\n                      </button>\n                    </div>\n                  </Form>\n                )}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n", "// app/routes/transfer.tsx\nimport type { MetaFunction, ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigation, useLoaderData } from \"@remix-run/react\";\nimport { useState, useEffect } from \"react\";\nimport { supabase } from \"~/lib/supabase\";\nimport { useStore } from \"~/store/store\";\nimport { DashboardCard } from \"~/components/DashboardCard\";\nimport { UserCombobox } from \"~/components/UserCombobox\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Transfer ESSENCE\" }, { name: \"description\", content: \"Send ESSENCE to others\" }];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const url = new URL(request.url);\n  const currentUserId = url.searchParams.get(\"userId\");\n\n  if (!currentUserId) return json([]);\n\n  const { data, error } = await supabase\n    .from(\"transactions\")\n    .select(\"*\")\n    .eq(\"user_id\", currentUserId)\n    .eq(\"type\", \"Transfer Out\")\n    .order(\"date\", { ascending: false })\n    .limit(5);\n\n  return json(data || []);\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const amount = Number(formData.get(\"amount\"));\n  const note = formData.get(\"note\")?.toString();\n  const recipientId = formData.get(\"recipient\")?.toString();\n  const senderId = formData.get(\"senderId\")?.toString();\n\n  if (!amount || amount <= 0) {\n    return json({ error: \"Enter a valid amount\" }, { status: 400 });\n  }\n  if (!recipientId) {\n    return json({ error: \"Please select a recipient\" }, { status: 400 });\n  }\n  if (!senderId) {\n    return json({ error: \"Sender ID is missing\" }, { status: 400 });\n  }\n\n  const { data: sender, error: senderError } = await supabase\n    .from(\"profiles\")\n    .select(\"id, balance, full_name\")\n    .eq(\"id\", senderId)\n    .single();\n\n  const { data: recipient, error: recipientError } = await supabase\n    .from(\"profiles\")\n    .select(\"id, balance, full_name\")\n    .eq(\"id\", recipientId)\n    .single();\n\n  if (senderError || !sender) return json({ error: \"Sender not found\" }, { status: 404 });\n  if (recipientError || !recipient) return json({ error: \"Recipient not found\" }, { status: 404 });\n\n  if (sender.balance < amount) return json({ error: \"Insufficient balance\" }, { status: 400 });\n\n  const senderNewBalance = sender.balance - amount;\n  const recipientNewBalance = recipient.balance + amount;\n\n  const { error: updateSender } = await supabase\n    .from(\"profiles\")\n    .update({ balance: senderNewBalance })\n    .eq(\"id\", senderId);\n\n  if (updateSender) return json({ error: \"Failed to update sender balance\" }, { status: 500 });\n\n  const { error: updateRecipient } = await supabase\n    .from(\"profiles\")\n    .update({ balance: recipientNewBalance })\n    .eq(\"id\", recipientId);\n\n  if (updateRecipient) return json({ error: \"Failed to update recipient balance\" }, { status: 500 });\n\n  const { data: txn, error: txnErr } = await supabase\n    .from(\"transactions\")\n    .insert({\n      user_id: senderId,\n      type: \"Transfer Out\",\n      narration: `Transfer to ${recipient.full_name}${note ? ` - ${note}` : \"\"}`,\n      debit: amount,\n      credit: null,\n      balance: senderNewBalance,\n    })\n    .select()\n    .single();\n\n  await supabase.from(\"transactions\").insert({\n    user_id: recipientId,\n    type: \"Transfer In\",\n    narration: `Transfer from ${sender.full_name}${note ? ` - ${note}` : \"\"}`,\n    debit: null,\n    credit: amount,\n    balance: recipientNewBalance,\n  });\n\n  if (txnErr || !txn) return json({ error: \"Transfer saved but transaction not logged.\" }, { status: 500 });\n\n  return json({\n    success: true,\n    message: `Sent ${amount} ESSENCE to ${recipient.full_name}`,\n  });\n}\n\nexport default function TransferRoute() {\n  const navigation = useNavigation();\n  const actionData = useActionData<typeof action>();\n  const isSubmitting = navigation.state === \"submitting\";\n  const transfers = useLoaderData<typeof loader>() as any[];\n\n  const {\n    currentUser,\n    users,\n  } = useStore((state) => ({\n    currentUser: state.currentUser,\n    users: state.users,\n  }));\n\n  const [recipient, setRecipient] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4 space-y-8\">\n      <h1 className=\"text-2xl font-bold\">Transfer ESSENCE</h1>\n\n      {currentUser && (\n        <DashboardCard\n          title=\"Your Balance\"\n          value={`${currentUser.balance.toLocaleString()} ESSENCE`}\n        />\n      )}\n\n      <Form method=\"post\" className=\"space-y-4\">\n        <input type=\"hidden\" name=\"senderId\" value={currentUser?.id} />\n        <div>\n          <label className=\"block font-medium\">Recipient</label>\n          <UserCombobox\n            users={users.filter(u => u.id !== currentUser?.id)}\n            selectedUserId={recipient}\n            onChange={setRecipient}\n          />\n          <input type=\"hidden\" name=\"recipient\" value={recipient} />\n        </div>\n\n        <div>\n          <label className=\"block font-medium\">Amount</label>\n          <input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            required\n            className=\"w-full p-2 border rounded\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block font-medium\">Note (optional)</label>\n          <textarea\n            name=\"note\"\n            value={note}\n            onChange={(e) => setNote(e.target.value)}\n            rows={3}\n            className=\"w-full p-2 border rounded\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isSubmitting || !recipient}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n        >\n          {isSubmitting ? \"Transferring...\" : \"Send\"}\n        </button>\n\n        {actionData?.error && (\n          <p className=\"text-red-600 mt-2\">{actionData.error}</p>\n        )}\n        {actionData?.success && (\n          <p className=\"text-green-600 mt-2\">{actionData.message}</p>\n        )}\n      </Form>\n\n      <div>\n        <h2 className=\"text-lg font-semibold mt-8\">Recent Transfers</h2>\n        <ul className=\"mt-4 space-y-2\">\n          {transfers.map((t) => (\n            <li key={t.id} className=\"p-3 border rounded shadow-sm\">\n              <div className=\"text-sm text-gray-600\">{t.narration}</div>\n              <div className=\"text-right font-semibold text-red-600\">\n                -{t.debit} ESSENCE\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n", "import React from 'react';\nimport { cn } from '~/lib/utils';\n\ninterface DashboardCardProps {\n  title: string;\n  value: string | number;\n  icon: React.ReactNode;\n  description?: string;\n  className?: string;\n}\n\nexport function DashboardCard({ title, value, icon, description, className }: DashboardCardProps) {\n  return (\n    <div className={cn(\"rounded-lg border bg-white p-4 shadow-sm dark:border-gray-700 dark:bg-gray-900\", className)}>\n      <div className=\"flex items-center justify-between\">\n        <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">{title}</p>\n        {icon}\n      </div>\n      <div className=\"mt-2\">\n        <p className=\"text-2xl font-semibold\">{value}</p>\n        {description && (\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">{description}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import * as React from \"react\";\nimport { Check, ChevronsUpDown } from \"lucide-react\";\n\nimport { cn } from \"~/lib/utils\";\nimport { Button } from \"~/components/ui/button\"; // Assuming you have a Button component\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n} from \"~/components/ui/command\"; // Assuming you have Command components\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"~/components/ui/popover\"; // Assuming you have Popover components\nimport type { User } from \"~/types/admin\"; // Assuming your User type is here\n\ninterface UserComboboxProps {\n  users: User[];\n  selectedUserId: string;\n  onSelectUser: (userId: string) => void;\n  disabled?: boolean;\n}\n\nexport function UserCombobox({\n  users,\n  selectedUserId,\n  onSelectUser,\n  disabled,\n}: UserComboboxProps) {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(selectedUserId);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n  // Find the selected user object based on selectedUserId prop\n  const selectedUser = React.useMemo(() => {\n    return users.find((user) => user.id === selectedUserId);\n  }, [users, selectedUserId]);\n\n  // Update internal value when selectedUserId prop changes\n  React.useEffect(() => {\n    setValue(selectedUserId);\n  }, [selectedUserId]);\n\n  // Filter users based on search term\n  const filteredUsers = React.useMemo(() => {\n    if (!searchTerm) {\n      return users;\n    }\n    const lowerCaseSearchTerm = searchTerm.toLowerCase();\n    return users.filter(user =>\n      user.fullName.toLowerCase().includes(lowerCaseSearchTerm) ||\n      user.id.toLowerCase().includes(lowerCaseSearchTerm)\n    );\n  }, [users, searchTerm]);\n\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className={cn(\n            \"w-full justify-between\",\n            !value && \"text-muted-foreground\"\n          )}\n          disabled={disabled}\n        >\n          {selectedUser\n            ? selectedUser.fullName\n            : \"Select recipient...\"}\n          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[--radix-popper-anchor-width] p-0\">\n        <Command>\n          <CommandInput\n            placeholder=\"Search user...\"\n            value={searchTerm}\n            onValueChange={setSearchTerm} // Use onValueChange to update searchTerm\n          />\n          {/* Use filteredUsers for the list */}\n          <CommandEmpty>{searchTerm ? \"No user found.\" : \"No users available.\"}</CommandEmpty>\n          <CommandGroup>\n            {filteredUsers.map((user) => (\n              <CommandItem\n                key={user.id}\n                value={user.fullName} // Use full name for command search matching\n                onSelect={() => {\n                  onSelectUser(user.id); // Call the prop function with the user ID\n                  setValue(user.id); // Update internal value\n                  setOpen(false); // Close the popover\n                  setSearchTerm(\"\"); // Clear search term on select\n                }}\n              >\n                <Check\n                  className={cn(\n                    \"mr-2 h-4 w-4\",\n                    value === user.id ? \"opacity-100\" : \"opacity-0\"\n                  )}\n                />\n                {user.fullName} ({user.id})\n              </CommandItem>\n            ))}\n          </CommandGroup>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n", "import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"~/lib/utils\"\nimport { Dialog, DialogContent } from \"~/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]]:px-4 [&_[cmdk-input]]:h-11 [&_[cmdk-item]]:px-4 [&_[cmdk-item]]:py-2 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n", "import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n", "import type { MetaFunction } from \"@remix-run/node\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Life Economy - Reports\" },\n    { name: \"description\", content: \"View various system reports and analytics.\" },\n  ];\n};\n\nexport default function ReportsPage() {\n  return (\n    <div className=\"container mx-auto p-4 md:p-6\">\n      <h1 className=\"text-2xl font-semibold mb-4\">Reports</h1>\n      <p className=\"text-gray-700 dark:text-gray-300\">\n        This page will display various system reports and analytics.\n      </p>\n      <p className=\"mt-4 text-gray-500 dark:text-gray-400\">\n        (Content for Reports will be implemented here.)\n      </p>\n    </div>\n  );\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\"; // Import redirect\nimport { useStore } from \"~/store/store\";\nimport { useEffect } from \"react\";\nimport { getAuthSession } from \"~/lib/auth.server\"; // Import getAuthSession\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  console.log(\"[Loader - _index] Index route loader executed.\");\n  const headers = new Headers();\n  const session = await getAuthSession(request);\n\n  // If a session exists, redirect to the dashboard\n  if (session) {\n    console.log(\"[Loader - _index] Session found, redirecting to /dashboard.\");\n    throw redirect(\"/dashboard\", { headers });\n  }\n\n  // Otherwise, return an empty object for the welcome page\n  return json({});\n}\n\nexport default function Index() {\n  const currentUser = useStore((state) => state.currentUser);\n\n  useEffect(() => {\n    console.log(\"[Index Component] Current user from Zustand:\", currentUser);\n  }, [currentUser]);\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center bg-gray-100 p-4 dark:bg-gray-950\">\n      <div className=\"w-full max-w-2xl rounded-lg bg-white p-8 shadow-lg dark:bg-gray-900\">\n        <h1 className=\"mb-6 text-center text-4xl font-bold text-gray-900 dark:text-white\">\n          Welcome to Life Economy!\n        </h1>\n        {currentUser ? (\n          <div className=\"text-center text-lg text-gray-700 dark:text-gray-300\">\n            <p>You are logged in as <span className=\"font-semibold\">{currentUser.fullName || currentUser.email}</span>.</p>\n            <p>Your current balance is: <span className=\"font-semibold\">${currentUser.balance.toFixed(2)}</span></p>\n            <p className=\"mt-4\">Explore the features and manage your life's economy.</p>\n          </div>\n        ) : (\n          <div className=\"text-center text-lg text-gray-700 dark:text-gray-300\">\n            <p>Please sign in to access your dashboard and manage your economy.</p>\n            <p className=\"mt-4\">\n              <a\n                href=\"/login\"\n                className=\"inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:bg-indigo-500 dark:hover:bg-indigo-600 dark:focus:ring-offset-gray-900\"\n              >\n                Sign In\n              </a>\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunctionArgs } from \"@remix-run/node\";\nimport { signOut } from \"~/lib/auth.server\";\n\nexport async function action({ request }: ActionFunctionArgs) {\n  return signOut(request);\n}\n\n// Adding a default export to help Remix HMR\nexport default function LogoutRoute() {\n  return null;\n}\n", "import { useState, useMemo, useEffect, useCallback, useRef } from \"react\";\nimport { useNavigation, useActionData, Form, useLoaderData } from \"@remix-run/react\";\nimport { json, unstable_parseMultipartFormData, unstable_createMemoryUploadHandler } from \"@remix-run/node\";\nimport type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { useUserRole } from \"~/hooks/useUserRole\";\nimport { cn } from \"~/lib/utils\";\nimport { useStore } from \"~/store/store\";\nimport type { MarketplaceItem, PurchaseRecord, PurchaseRecordWithBuyerDetails } from \"~/types/market\";\nimport { ProductGrid } from \"~/components/market/ProductGrid\";\nimport { SearchBar } from \"~/components/market/SearchBar\";\nimport { FilterSortPanel } from \"~/components/market/FilterSortPanel\";\nimport { ProductDetailModal } from \"~/components/market/ProductDetailModal\";\nimport { InventoryTable } from \"~/components/market/setup/InventoryTable\";\nimport { AddProductForm } from \"~/components/market/setup/AddProductForm\";\nimport { EditProductModal } from \"~/components/market/setup/EditProductModal\";\nimport { DeleteConfirmationModal } from \"~/components/market/setup/DeleteConfirmationModal\";\nimport { SalesLogTable } from \"~/components/market/SalesLogTable\";\nimport { supabase } from \"~/lib/supabase\"; // Regular client for most operations\nimport supabaseAdmin from \"~/lib/supabase-admin\"; // Admin client\n\nconst MARKET_IMAGES_BUCKET = 'product-images';\nconst DEFAULT_PLACEHOLDER_IMAGE_URL = \"https://zkpgphfdmdzmmsneuzal.supabase.co/storage/v1/object/public/product-images/placeholder.png\";\n\nfunction mapDbItemToMarketplaceItem(dbItem: any): MarketplaceItem {\n  if (!dbItem) return dbItem;\n  const { image_url, ...rest } = dbItem;\n  return {\n    ...rest,\n    imageUrl: image_url,\n  };\n}\n\nfunction mapDbPurchaseRecordToApp(dbRecord: any): PurchaseRecordWithBuyerDetails | null {\n  if (!dbRecord) return null;\n\n  let mappedProfiles: { fullName: string } | null = null;\n  // Check if profiles exists and has full_name directly (single object)\n  if (dbRecord.profiles && typeof dbRecord.profiles === 'object' && 'full_name' in dbRecord.profiles && !Array.isArray(dbRecord.profiles)) {\n    mappedProfiles = { fullName: dbRecord.profiles.full_name };\n  } \n  // Check if profiles is an array and the first element has full_name (array of objects)\n  else if (Array.isArray(dbRecord.profiles) && dbRecord.profiles.length > 0 && dbRecord.profiles[0] && typeof dbRecord.profiles[0] === 'object' && 'full_name' in dbRecord.profiles[0]) {\n    mappedProfiles = { fullName: dbRecord.profiles[0].full_name };\n  }\n  // If profiles is explicitly null or not in the expected shape, mappedProfiles remains null.\n\n  const {\n    item_id,\n    item_name_snapshot,\n    purchase_date,\n    user_id,\n    delivery_date,\n    total_price, \n    price_per_item_snapshot, \n    quantity,\n    profiles, \n    ...rest\n  } = dbRecord;\n\n  return {\n    ...rest, \n    itemId: item_id,\n    itemName: item_name_snapshot,\n    price: total_price, \n    pricePerItemSnapshot: price_per_item_snapshot, \n    quantity: quantity,\n    purchaseDate: purchase_date,\n    userId: user_id,\n    deliveryDate: delivery_date,\n    profiles: mappedProfiles, \n  };\n}\n\n\n// --- Loader Function ---\nexport async function loader({ request }: LoaderFunctionArgs) {\n  console.log(\"[Loader - market] Fetching market data...\");\n\n  // Fetch marketplace items using regular supabase client (RLS applies if any)\n  const { data: marketplaceDbItems, error: itemsError } = await supabase\n    .from('marketplace_items')\n    .select('*')\n    .order('name', { ascending: true });\n\n  if (itemsError) {\n    console.error(\"[Loader - market] Error fetching marketplace items:\", itemsError);\n  }\n\n  const marketplaceAppItems: MarketplaceItem[] = marketplaceDbItems\n    ? marketplaceDbItems.map(mapDbItemToMarketplaceItem)\n    : [];\n\n  // Fetch purchase records using supabaseAdmin to bypass RLS for this test\n  console.log(\"[Loader - market] Attempting to fetch purchase records using supabaseAdmin (bypassing RLS)...\");\n  const { data: purchaseRecordsDb, error: purchasesError } = await supabaseAdmin // USE ADMIN CLIENT\n    .from('purchase_records')\n    .select(`*`) // Still using simplified query for now\n    // .select(`\n    //   *,\n    //   profiles ( \n    //     full_name\n    //   )\n    // `)\n    .order('purchase_date', { ascending: false });\n\n  if (purchasesError) {\n    console.error(\"[Loader - market] Error fetching purchase records with supabaseAdmin:\", purchasesError);\n  } else {\n    console.log(\"[Loader - market] Successfully fetched purchase records with supabaseAdmin (raw):\", purchaseRecordsDb?.length);\n  }\n  \n  const finalPurchaseRecords: PurchaseRecordWithBuyerDetails[] = (purchaseRecordsDb || [])\n    .map(mapDbPurchaseRecordToApp) \n    .filter(Boolean) as PurchaseRecordWithBuyerDetails[];\n  \n  console.log(\"[Loader - market] Fetched items:\", marketplaceAppItems?.length);\n  console.log(\"[Loader - market] Processed purchase records for app (from admin client):\", finalPurchaseRecords?.length);\n\n  return json({\n    marketplaceItems: marketplaceAppItems,\n    purchaseRecords: finalPurchaseRecords,\n  });\n}\n// --- End Loader Function ---\n\n\n// --- Action Function ---\nexport async function action({ request }: ActionFunctionArgs) {\n  console.log(\"[Action - market] Received request\");\n\n  let formData: FormData;\n  const contentType = request.headers.get(\"Content-Type\");\n\n  if (contentType?.includes(\"multipart/form-data\")) {\n    console.log(\"[Action - market] Parsing as multipart/form-data\");\n    const uploadHandler = unstable_createMemoryUploadHandler({\n      maxPartSize: 5 * 1024 * 1024, \n    });\n    formData = await unstable_parseMultipartFormData(request, uploadHandler);\n  } else {\n    console.log(\"[Action - market] Parsing as application/x-www-form-urlencoded\");\n    formData = await request.formData();\n  }\n  \n  const intent = formData.get(\"intent\") as string;\n\n  console.log(\"[Action - market] Intent:\", intent);\n\n  // All actions use supabaseAdmin for database modifications, so this part remains largely unchanged.\n  switch (intent) {\n    case \"addMarketplaceItem\": {\n      try {\n        const name = formData.get(\"name\") as string;\n        const description = formData.get(\"description\") as string || \"\";\n        const priceStr = formData.get(\"price\") as string;\n        const stockStr = formData.get(\"stock\") as string;\n        const isUnlimitedStock = formData.get(\"isUnlimitedStock\") === \"on\";\n        const category = formData.get(\"category\") as string;\n        const status = formData.get(\"status\") as 'active' | 'inactive';\n        const imageFile = formData.get(\"productImage\") as File | null;\n\n        if (!name || !priceStr || (!stockStr && !isUnlimitedStock) || !category || !status) {\n          return json({ success: false, error: \"Missing required fields.\", intent }, { status: 400 });\n        }\n\n        const price = parseFloat(priceStr);\n        const stock = isUnlimitedStock ? -1 : parseInt(stockStr, 10);\n\n        if (isNaN(price) || (!isUnlimitedStock && isNaN(stock))) {\n          return json({ success: false, error: \"Invalid number format for price or stock.\", intent }, { status: 400 });\n        }\n\n        let uploadedImageUrl = DEFAULT_PLACEHOLDER_IMAGE_URL; \n        if (imageFile && imageFile.size > 0) {\n          const fileName = `${Date.now()}-${imageFile.name}`;\n          if (!supabaseAdmin || !supabaseAdmin.storage) {\n            console.error(\"[Action - market] supabaseAdmin or supabaseAdmin.storage is undefined before image upload.\");\n            return json({ success: false, error: \"Server configuration error for image upload.\", intent }, { status: 500 });\n          }\n          const { data: uploadData, error: uploadError } = await supabaseAdmin.storage\n            .from(MARKET_IMAGES_BUCKET)\n            .upload(fileName, imageFile, {\n              contentType: imageFile.type,\n              upsert: true,\n            });\n\n          if (uploadError) {\n            console.error(\"[Action - market] Image upload error:\", uploadError);\n            return json({ success: false, error: `Image upload failed: ${uploadError.message}`, intent }, { status: 500 });\n          }\n          if (uploadData?.path) {\n             const { data: publicUrlData } = supabaseAdmin.storage.from(MARKET_IMAGES_BUCKET).getPublicUrl(uploadData.path);\n             uploadedImageUrl = publicUrlData?.publicUrl || DEFAULT_PLACEHOLDER_IMAGE_URL;\n          }\n        }\n\n        const newItemDataForDb = {\n          name,\n          description,\n          price,\n          stock,\n          category,\n          status,\n          image_url: uploadedImageUrl, \n        };\n        \n        if (!supabaseAdmin || !supabaseAdmin.from) {\n            console.error(\"[Action - market] supabaseAdmin or supabaseAdmin.from is undefined before DB insert.\");\n            return json({ success: false, error: \"Server configuration error for database operation.\", intent }, { status: 500 });\n        }\n        const { data: insertedDbItem, error: insertError } = await supabaseAdmin\n          .from('marketplace_items')\n          .insert(newItemDataForDb)\n          .select()\n          .single();\n\n        if (insertError) {\n          console.error(\"[Action - market] Error inserting item:\", insertError);\n          if (uploadedImageUrl !== DEFAULT_PLACEHOLDER_IMAGE_URL && imageFile) { \n            const pathToDelete = uploadedImageUrl.substring(uploadedImageUrl.lastIndexOf('/') + 1);\n            await supabaseAdmin.storage.from(MARKET_IMAGES_BUCKET).remove([pathToDelete]);\n          }\n          return json({ success: false, error: `Database insert failed: ${insertError.message}`, intent }, { status: 500 });\n        }\n        \n        const insertedAppItem = mapDbItemToMarketplaceItem(insertedDbItem);\n        console.log(\"[Action - market] Product added successfully:\", insertedAppItem);\n        return json({ success: true, message: \"Product added successfully.\", intent, item: insertedAppItem });\n\n      } catch (error: any) {\n        console.error(\"[Action - market] Add item general error:\", error);\n        if (error.message.includes(\"supabaseAdmin\") || (error.message.includes(\"undefined\") && error.message.includes(\"storage\")) || (error.message.includes(\"undefined\") && error.message.includes(\"from\"))) {\n            console.error(\"[Action - market] Error likely related to supabaseAdmin client being undefined or not fully initialized at the time of use.\");\n        }\n        return json({ success: false, error: error.message || \"An unexpected error occurred.\", intent }, { status: 500 });\n      }\n    }\n    case \"editMarketplaceItem\": {\n      try {\n        const productId = formData.get(\"productId\") as string;\n        if (!productId) {\n          return json({ success: false, error: \"Missing product ID for edit.\", intent }, { status: 400 });\n        }\n\n        const name = formData.get(\"name\") as string;\n        const description = formData.get(\"description\") as string || \"\";\n        const priceStr = formData.get(\"price\") as string;\n        const stockStr = formData.get(\"stock\") as string;\n        const isUnlimitedStock = formData.get(\"isUnlimitedStock\") === \"on\";\n        const category = formData.get(\"category\") as string;\n        const status = formData.get(\"status\") as 'active' | 'inactive';\n        const currentImageUrl = formData.get(\"currentImageUrl\") as string || DEFAULT_PLACEHOLDER_IMAGE_URL; \n        const imageFile = formData.get(\"productImage\") as File | null;\n        \n        if (!name || !priceStr || (!stockStr && !isUnlimitedStock) || !category || !status) {\n           return json({ success: false, error: \"Missing required fields for edit.\", intent }, { status: 400 });\n        }\n\n        const price = parseFloat(priceStr);\n        const stock = isUnlimitedStock ? -1 : parseInt(stockStr, 10);\n\n        if (isNaN(price) || (!isUnlimitedStock && isNaN(stock))) {\n           return json({ success: false, error: \"Invalid number format for price or stock.\", intent }, { status: 400 });\n        }\n\n        let newUploadedImageUrl = currentImageUrl; \n        let oldImageKeyToDelete: string | null = null;\n\n        if (imageFile && imageFile.size > 0) {\n          if (!supabaseAdmin || !supabaseAdmin.storage) {\n            console.error(\"[Action - market] supabaseAdmin or supabaseAdmin.storage is undefined before image upload (edit).\");\n            return json({ success: false, error: \"Server configuration error for image upload.\", intent }, { status: 500 });\n          }\n          const fileName = `${Date.now()}-${imageFile.name}`;\n          const { data: uploadData, error: uploadError } = await supabaseAdmin.storage\n            .from(MARKET_IMAGES_BUCKET)\n            .upload(fileName, imageFile, {\n              contentType: imageFile.type,\n              upsert: true,\n            });\n\n          if (uploadError) {\n            console.error(\"[Action - market] Edit - Image upload error:\", uploadError);\n            return json({ success: false, error: `Image upload failed: ${uploadError.message}`, intent }, { status: 500 });\n          }\n          if (uploadData?.path) {\n            const { data: publicUrlData } = supabaseAdmin.storage.from(MARKET_IMAGES_BUCKET).getPublicUrl(uploadData.path);\n            newUploadedImageUrl = publicUrlData?.publicUrl || currentImageUrl; \n            if (currentImageUrl && currentImageUrl !== DEFAULT_PLACEHOLDER_IMAGE_URL && currentImageUrl !== newUploadedImageUrl) {\n                oldImageKeyToDelete = currentImageUrl.substring(currentImageUrl.lastIndexOf('/') + 1);\n            }\n          }\n        }\n\n        const updatedProductDataForDb = {\n          name,\n          description,\n          price,\n          stock,\n          category,\n          status,\n          image_url: newUploadedImageUrl, \n        };\n\n        if (!supabaseAdmin || !supabaseAdmin.from) {\n            console.error(\"[Action - market] supabaseAdmin or supabaseAdmin.from is undefined before DB update (edit).\");\n            return json({ success: false, error: \"Server configuration error for database operation.\", intent }, { status: 500 });\n        }\n        const { data: updatedDbItem, error: updateError } = await supabaseAdmin\n          .from('marketplace_items')\n          .update(updatedProductDataForDb)\n          .eq('id', productId)\n          .select()\n          .single();\n\n        if (updateError) {\n          console.error(\"[Action - market] Error updating item:\", updateError);\n          if (newUploadedImageUrl !== currentImageUrl && imageFile) { \n             const pathToDelete = newUploadedImageUrl.substring(newUploadedImageUrl.lastIndexOf('/') + 1);\n             if (newUploadedImageUrl !== DEFAULT_PLACEHOLDER_IMAGE_URL) {\n                await supabaseAdmin.storage.from(MARKET_IMAGES_BUCKET).remove([pathToDelete]);\n             }\n          }\n          return json({ success: false, error: `Database update failed: ${updateError.message}`, intent }, { status: 500 });\n        }\n\n        if (oldImageKeyToDelete) { \n            const { error: deleteOldImageError } = await supabaseAdmin.storage.from(MARKET_IMAGES_BUCKET).remove([oldImageKeyToDelete]);\n            if (deleteOldImageError) {\n                console.warn(`[Action - market] Failed to delete old image ${oldImageKeyToDelete}:`, deleteOldImageError.message);\n            }\n        }\n        \n        const updatedAppItem = mapDbItemToMarketplaceItem(updatedDbItem);\n        console.log(\"[Action - market] Product updated successfully:\", updatedAppItem);\n        return json({ success: true, message: `Product ${name} updated successfully.`, intent, item: updatedAppItem });\n\n      } catch (error: any) {\n        console.error(\"[Action - market] Edit item general error:\", error);\n        if (error.message.includes(\"supabaseAdmin\") || (error.message.includes(\"undefined\") && error.message.includes(\"storage\")) || (error.message.includes(\"undefined\") && error.message.includes(\"from\"))) {\n            console.error(\"[Action - market] Error likely related to supabaseAdmin client being undefined or not fully initialized at the time of use (edit).\");\n        }\n        return json({ success: false, error: error.message || \"An unexpected error occurred.\", intent }, { status: 500 });\n      }\n    }\n    case \"deleteMarketplaceItem\": {\n      try {\n        const productId = formData.get(\"productId\") as string;\n        const imageUrlToDelete = formData.get(\"imageUrl\") as string | null; \n\n        if (!productId) {\n          return json({ success: false, error: \"Missing product ID for deletion.\", intent }, { status: 400 });\n        }\n\n        if (!supabaseAdmin || !supabaseAdmin.from || !supabaseAdmin.storage) {\n            console.error(\"[Action - market] supabaseAdmin client is not fully available for delete operation.\");\n            return json({ success: false, error: \"Server configuration error for delete operation.\", intent }, { status: 500 });\n        }\n\n        const { error: deleteDbError } = await supabaseAdmin\n          .from('marketplace_items')\n          .delete()\n          .match({ id: productId });\n\n        if (deleteDbError) {\n          console.error(\"[Action - market] Error deleting item from DB:\", deleteDbError);\n          return json({ success: false, error: `Database deletion failed: ${deleteDbError.message}`, intent }, { status: 500 });\n        }\n\n        if (imageUrlToDelete && imageUrlToDelete !== DEFAULT_PLACEHOLDER_IMAGE_URL) {\n          const imageKey = imageUrlToDelete.substring(imageUrlToDelete.lastIndexOf('/') + 1);\n          const { error: deleteStorageError } = await supabaseAdmin.storage\n            .from(MARKET_IMAGES_BUCKET)\n            .remove([imageKey]);\n          \n          if (deleteStorageError) {\n            console.warn(`[Action - market] Product DB record deleted, but failed to delete image ${imageKey} from storage:`, deleteStorageError.message);\n          } else {\n            console.log(`[Action - market] Image ${imageKey} deleted from storage.`);\n          }\n        }\n        \n        console.log(`[Action - market] Product ID: ${productId} deleted successfully.`);\n        return json({ success: true, message: `Product deleted successfully.`, intent, productId });\n\n      } catch (error: any) {\n        console.error(\"[Action - market] Delete item general error:\", error);\n         if (error.message.includes(\"supabaseAdmin\") || (error.message.includes(\"undefined\") && error.message.includes(\"storage\")) || (error.message.includes(\"undefined\") && error.message.includes(\"from\"))) {\n            console.error(\"[Action - market] Error likely related to supabaseAdmin client being undefined or not fully initialized at the time of use (delete).\");\n        }\n        return json({ success: false, error: error.message || \"An unexpected error occurred.\", intent }, { status: 500 });\n      }\n    }\n    case \"purchaseItem\": {\n      try {\n        const itemId = formData.get(\"itemId\") as string;\n        const quantityStr = formData.get(\"quantity\") as string;\n        const userId = formData.get(\"userId\") as string; \n\n        console.log(`[Action - purchaseItem] Attempting purchase for userId: ${userId}, itemId: ${itemId}, quantity: ${quantityStr}`);\n\n        if (!itemId || !quantityStr || !userId) {\n          return json({ success: false, error: \"Missing item ID, quantity, or user ID.\", intent }, { status: 400 });\n        }\n\n        const quantity = parseInt(quantityStr, 10);\n        if (isNaN(quantity) || quantity <= 0) {\n          return json({ success: false, error: \"Invalid quantity.\", intent }, { status: 400 });\n        }\n        \n        if (!supabaseAdmin || !supabaseAdmin.from) {\n            console.error(\"[Action - market] supabaseAdmin or supabaseAdmin.from is undefined before purchase operation. Check .env for SUPABASE_SERVICE_KEY.\");\n            return json({ success: false, error: \"Server configuration error for purchase operation. Admin client may not be initialized.\", intent }, { status: 500 });\n        }\n\n        const { data: itemDb, error: itemError } = await supabaseAdmin\n          .from('marketplace_items')\n          .select('*') \n          .eq('id', itemId)\n          .single();\n\n        if (itemError || !itemDb) {\n          console.error(\"[Action - purchaseItem] Error fetching item:\", itemError);\n          return json({ success: false, error: \"Item not found or error fetching item.\", intent }, { status: 404 });\n        }\n        const itemApp = mapDbItemToMarketplaceItem(itemDb); \n\n        if (itemApp.status !== 'active') {\n            return json({ success: false, error: \"This item is currently not available for purchase.\", intent }, { status: 400 });\n        }\n\n        if (itemApp.stock !== -1 && itemApp.stock < quantity) {\n          return json({ success: false, error: `Insufficient stock. Only ${itemApp.stock} available.`, intent }, { status: 400 });\n        }\n\n        const { data: userProfile, error: profileError } = await supabaseAdmin\n          .from('profiles') \n          .select('id, balance') \n          .eq('id', userId)\n          .single();\n\n        if (profileError) {\n          console.error(`[Action - purchaseItem] Supabase error fetching user profile for ID '${userId}'. Error:`, profileError);\n          return json({ success: false, error: `Error fetching user profile: ${profileError.message}. This could be due to incorrect admin credentials, network issues, or an invalid User ID format.`, intent }, { status: 500 });\n        }\n        if (!userProfile) {\n          console.error(`[Action - purchaseItem] User profile not found for ID: ${userId}. Ensure this user exists in the 'profiles' table and the ID is a valid UUID.`);\n          return json({ success: false, error: `User profile not found for ID: ${userId}. Please ensure the user exists in the database and the ID is a valid UUID.`, intent }, { status: 404 });\n        }\n\n        const currentPricePerItem = itemApp.price; \n        const calculatedTotalPrice = currentPricePerItem * quantity; \n\n        if (userProfile.balance < calculatedTotalPrice) {\n          return json({ success: false, error: \"Insufficient ESSENCE balance.\", intent }, { status: 400 });\n        }\n        \n        const newBalance = userProfile.balance - calculatedTotalPrice;\n        const { error: balanceUpdateError } = await supabaseAdmin\n          .from('profiles')\n          .update({ balance: newBalance })\n          .eq('id', userId);\n\n        if (balanceUpdateError) {\n          console.error(\"[Action - purchaseItem] Error updating user balance:\", balanceUpdateError);\n          return json({ success: false, error: \"Failed to update user balance. Purchase not completed.\", intent }, { status: 500 });\n        }\n\n        let updatedItemStock = itemApp.stock;\n        if (itemApp.stock !== -1) {\n          const newStock = itemApp.stock - quantity;\n          updatedItemStock = newStock;\n          const { error: stockUpdateError } = await supabaseAdmin \n            .from('marketplace_items')\n            .update({ stock: newStock }) \n            .eq('id', itemId);\n\n          if (stockUpdateError) {\n            console.error(\"[Action - purchaseItem] Error updating item stock:\", stockUpdateError);\n            await supabaseAdmin.from('profiles').update({ balance: userProfile.balance }).eq('id', userId); \n            return json({ success: false, error: \"Failed to update item stock. Purchase cancelled and balance restored.\", intent }, { status: 500 });\n          }\n        }\n\n        const purchaseTimestamp = new Date().toISOString();\n        const initialStatus: 'pending' | 'delivered' = itemApp.category === 'Digital Goods' ? 'delivered' : 'pending';\n        const initialDeliveryDate = initialStatus === 'delivered' ? purchaseTimestamp : null;\n\n        const newPurchaseRecordDataForDb = {\n          item_id: itemApp.id,\n          item_name_snapshot: itemApp.name,\n          price_per_item_snapshot: currentPricePerItem, \n          total_price: calculatedTotalPrice,           \n          quantity: quantity,\n          purchase_date: purchaseTimestamp,\n          user_id: userId,\n          status: initialStatus,\n          delivery_date: initialDeliveryDate,\n        };\n        \n        // When creating a purchase record, try to fetch related profile name using supabaseAdmin\n        const { data: createdPurchaseRecordDb, error: purchaseRecordError } = await supabaseAdmin\n          .from('purchase_records')\n          .insert(newPurchaseRecordDataForDb)\n          .select(`*, profiles (full_name)`) // Attempt to join here with admin client\n          .single();\n\n        if (purchaseRecordError || !createdPurchaseRecordDb) {\n          console.error(\"[Action - purchaseItem] Error creating purchase record:\", purchaseRecordError);\n          // Attempt to revert changes if purchase record creation fails\n          await supabaseAdmin.from('profiles').update({ balance: userProfile.balance }).eq('id', userId); \n          if (itemApp.stock !== -1) { \n            await supabaseAdmin.from('marketplace_items').update({ stock: itemApp.stock }).eq('id', itemId);\n          }\n          // Check if the error is the \"relation public.users does not exist\"\n          if (purchaseRecordError?.message.includes(\"relation \\\"public.users\\\" does not exist\")) {\n             console.error(\"[Action - purchaseItem] CRITICAL: 'public.users' error even with supabaseAdmin during purchase record creation join. This points to a fundamental issue with the 'profiles' join, possibly a view definition.\");\n             return json({ success: false, error: `Failed to record purchase due to a database relation issue (public.users). Transaction cancelled.`, intent }, { status: 500 });\n          }\n          return json({ success: false, error: `Failed to record purchase: ${purchaseRecordError?.message || 'Unknown error'}. Transaction cancelled and changes reverted.`, intent }, { status: 500 });\n        }\n        \n        const createdPurchaseRecordApp = mapDbPurchaseRecordToApp(createdPurchaseRecordDb);\n\n        console.log(`[Action - purchaseItem] User ${userId} purchased ${quantity}x ${itemApp.name} (ID: ${itemId}) for ${calculatedTotalPrice} ESSENCE.`);\n        return json({\n          success: true,\n          message: `Successfully purchased ${quantity}x ${itemApp.name}!`,\n          intent,\n          finalBalance: newBalance, \n          userId: userId,\n          updatedItem: { ...itemApp, stock: updatedItemStock },\n          purchaseRecord: createdPurchaseRecordApp, \n        });\n\n      } catch (error: any)\n       {\n        console.error(\"[Action - purchaseItem] General error:\", error);\n        if (error.message.includes(\"supabaseAdmin\") || (error.message.includes(\"undefined\") && error.message.includes(\"from\"))) {\n            console.error(\"[Action - market] Error likely related to supabaseAdmin client being undefined or not fully initialized at the time of use (purchase).\");\n        }\n        return json({ success: false, error: error.message || \"An unexpected error occurred during purchase.\", intent }, { status: 500 });\n      }\n    }\n    default: {\n      console.warn(`[Action - market] Unhandled intent: ${intent}`);\n      return json({ success: false, error: `Unhandled intent: ${intent}`, intent }, { status: 400 });\n    }\n  }\n}\n// --- End Action Function ---\n\n// --- Shop Tab Content (Moved to top level) ---\nfunction ShopContent() {\n  const allItems = useStore((state) => state.marketplaceItems);\n  const activeItems = useMemo(() => allItems.filter(item => item.status === 'active'), [allItems]);\n  const [selectedItem, setSelectedItem] = useState<MarketplaceItem | null>(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filterCategory, setFilterCategory] = useState(\"all\");\n  const [sortBy, setSortBy] = useState(\"default\");\n\n  const handleSelectItem = useCallback((item: MarketplaceItem) => {\n    setSelectedItem(item);\n  }, []); \n\n  const handleCloseModal = useCallback(() => {\n    setSelectedItem(null);\n  }, []); \n\n  const categories = useMemo(() => {\n    const uniqueCategories = new Set(activeItems.map(item => item.category));\n    return Array.from(uniqueCategories);\n  }, [activeItems]);\n\n  const displayedItems = useMemo(() => {\n    let items = [...activeItems];\n    if (searchTerm) {\n      const lowerCaseSearchTerm = searchTerm.toLowerCase();\n      items = items.filter(item =>\n        item.name.toLowerCase().includes(lowerCaseSearchTerm) ||\n        (item.description && item.description.toLowerCase().includes(lowerCaseSearchTerm))\n      );\n    }\n    if (filterCategory !== \"all\") {\n      items = items.filter(item => item.category === filterCategory);\n    }\n    switch (sortBy) {\n      case \"price-asc\": items.sort((a, b) => a.price - b.price); break;\n      case \"price-desc\": items.sort((a, b) => b.price - a.price); break;\n      case \"name-asc\": items.sort((a, b) => a.name.localeCompare(b.name)); break;\n      case \"name-desc\": items.sort((a, b) => b.name.localeCompare(a.name)); break;\n      default: break;\n    }\n    return items;\n  }, [activeItems, searchTerm, filterCategory, sortBy]);\n\n  return (\n    <div className=\"space-y-4 p-4\">\n      <div className=\"flex flex-col gap-4 md:flex-row\">\n        <SearchBar searchTerm={searchTerm} onSearchChange={setSearchTerm} />\n        <FilterSortPanel\n          categories={categories}\n          selectedCategory={filterCategory}\n          onCategoryChange={setFilterCategory}\n          sortBy={sortBy}\n          onSortChange={setSortBy}\n        />\n      </div>\n      <div className=\"flex-1\">\n         <ProductGrid items={displayedItems} onSelectItem={handleSelectItem} />\n      </div>\n      <ProductDetailModal item={selectedItem} onClose={handleCloseModal} />\n    </div>\n  );\n}\n// --- End Shop Tab Content ---\n\n// --- Setup Tab Content (Moved to top level) ---\nfunction SetupContent() {\n  const navigation = useNavigation();\n  const actionData = useActionData<typeof action>(); \n  const { marketplaceItems } = useStore((state) => ({\n    marketplaceItems: state.marketplaceItems,\n  }));\n\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingProduct, setEditingProduct] = useState<MarketplaceItem | null>(null);\n  const [deletingProduct, setDeletingProduct] = useState<MarketplaceItem | null>(null);\n  \n  const processedActionRef = useRef<string | null>(null);\n\n  useEffect(() => {\n    const actionKey = actionData ? `${actionData.intent}-${(actionData as any).message || (actionData as any).error}-${(actionData as any).productId || (actionData as any).item?.id}` : null;\n\n    if (actionData?.success && actionKey && processedActionRef.current !== actionKey) {\n      if (actionData.intent === 'addMarketplaceItem') {\n        console.log(\"[SetupContent Effect] Action 'addMarketplaceItem' successful. Closing form.\");\n        setShowAddForm(false); \n      } else if (actionData.intent === 'deleteMarketplaceItem') {\n        console.log(\"[SetupContent Effect] Action 'deleteMarketplaceItem' successful. Closing modal.\");\n        setDeletingProduct(null); \n      } else if (actionData.intent === 'editMarketplaceItem') {\n        console.log(\"[SetupContent Effect] Action 'editMarketplaceItem' successful. Closing modal.\");\n        setEditingProduct(null); \n      }\n      processedActionRef.current = actionKey;\n    } else if (!actionData?.success && actionData?.error && actionKey && processedActionRef.current !== actionKey) {\n      processedActionRef.current = actionKey;\n    }\n\n  }, [actionData]);\n\n\n  const categories = useMemo(() => {\n    const uniqueCategories = new Set(marketplaceItems.map(item => item.category));\n    return Array.from(uniqueCategories);\n  }, [marketplaceItems]);\n\n  const handleCancelAddForm = useCallback(() => setShowAddForm(false), []); \n\n  return (\n    <div className=\"p-4 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-xl font-semibold\">Inventory Management</h2>\n        {!showAddForm && (\n           <button\n            onClick={() => setShowAddForm(true)}\n            className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 text-sm font-medium\"\n          >\n            + Add New Product\n          </button>\n        )}\n      </div>\n\n      {showAddForm && (\n        <AddProductForm\n          onCancel={handleCancelAddForm}\n          categories={categories}\n          navigation={navigation}\n          actionData={actionData}\n        />\n      )}\n\n      <InventoryTable\n        items={marketplaceItems} \n        onEdit={(item) => setEditingProduct(item)}\n        onDelete={(item) => setDeletingProduct(item)}\n      />\n\n      <EditProductModal\n        isOpen={!!editingProduct}\n        onClose={() => setEditingProduct(null)}\n        product={editingProduct}\n        categories={categories}\n        navigation={navigation}\n        actionData={actionData}\n      />\n\n      <DeleteConfirmationModal\n        isOpen={!!deletingProduct}\n        onClose={() => setDeletingProduct(null)}\n        product={deletingProduct}\n        navigation={navigation}\n        defaultPlaceholderImageUrl={DEFAULT_PLACEHOLDER_IMAGE_URL} \n      />\n    </div>\n  );\n}\n// --- End Setup Tab Content ---\n\n// --- Sales Log Tab Content (Moved to top level) ---\ninterface SalesContentProps {\n  purchaseRecords: PurchaseRecordWithBuyerDetails[];\n}\n\nfunction SalesContent({ purchaseRecords }: SalesContentProps) {\n  // console.log(\"[SalesContent] Received purchaseRecords, count:\", purchaseRecords.length); // For debugging\n  return (\n    <div className=\"p-4 space-y-6\">\n       <h2 className=\"text-xl font-semibold\">Sales Log</h2>\n       <SalesLogTable records={purchaseRecords} />\n    </div>\n  );\n}\n// --- End Sales Log Tab Content ---\n\n\nexport default function Marketplace() {\n  const { marketplaceItems: loaderMarketplaceItems, purchaseRecords: loaderPurchaseRecords } = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const { \n    setMarketplaceItems, \n    updateMarketplaceItem, \n    setPurchaseRecords,\n    addPurchaseRecord, \n    setCurrentUser, \n    currentUser, \n  } = useStore(state => ({\n    setMarketplaceItems: state.setMarketplaceItems,\n    updateMarketplaceItem: state.updateMarketplaceItem,\n    setPurchaseRecords: state.setPurchaseRecords,\n    addPurchaseRecord: state.addPurchaseRecord, \n    setCurrentUser: state.setCurrentUser,\n    currentUser: state.currentUser, \n  }));\n\n  const processedActionDataKeyRef = useRef<string | null>(null);\n\n  useEffect(() => {\n    console.log(\"[Marketplace Route] Loader data received. Syncing ALL items/records to Zustand.\");\n    console.log(\"[Marketplace Route] Loader marketplaceItems count:\", loaderMarketplaceItems?.length);\n    console.log(\"[Marketplace Route] Loader purchaseRecords count:\", loaderPurchaseRecords?.length);\n    setMarketplaceItems(loaderMarketplaceItems); \n    setPurchaseRecords(loaderPurchaseRecords);\n  }, [loaderMarketplaceItems, loaderPurchaseRecords, setMarketplaceItems, setPurchaseRecords]);\n\n  useEffect(() => {\n    if (!actionData) {\n      return;\n    }\n    \n    const currentActionKey = `${actionData.intent}-${actionData.success}-${(actionData as any).message || (actionData as any).error}-${(actionData as any).userId || ''}-${(actionData as any).finalBalance || ''}-${(actionData as any).updatedItem?.id || ''}-${(actionData as any).purchaseRecord?.id || ''}`;\n\n    if (processedActionDataKeyRef.current === currentActionKey) {\n        console.log(\"[Marketplace Route Effect] Action data already processed, skipping:\", currentActionKey);\n        return; \n    }\n    \n    console.log(\"[Marketplace Route Effect] Processing actionData:\", actionData);\n    processedActionDataKeyRef.current = currentActionKey;\n\n    if (actionData.intent === 'purchaseItem' && actionData.success) {\n      console.log(\"[Marketplace Route Effect] Purchase successful. Processing action data for purchase:\", actionData);\n      \n      if (actionData.finalBalance !== undefined && actionData.userId && currentUser && currentUser.id === actionData.userId) {\n        if (currentUser.balance !== actionData.finalBalance) {\n          console.log(`[Marketplace Route Effect] Updating balance for user ${actionData.userId} from ${currentUser.balance} to ${actionData.finalBalance}`);\n          setCurrentUser({ ...currentUser, balance: actionData.finalBalance });\n        }\n      }\n      if (actionData.updatedItem) {\n        console.log(`[Marketplace Route Effect] Updating marketplace item ID: ${(actionData.updatedItem as MarketplaceItem).id}`);\n        updateMarketplaceItem(actionData.updatedItem as MarketplaceItem); \n      }\n      if (actionData.purchaseRecord) {\n        console.log(`[Marketplace Route Effect] Adding new purchase record ID: ${(actionData.purchaseRecord as PurchaseRecordWithBuyerDetails).id} to store.`);\n        addPurchaseRecord(actionData.purchaseRecord as PurchaseRecordWithBuyerDetails);\n      }\n    } else if (actionData.success) {\n        console.log(`[Marketplace Route Effect] Successful action '${actionData.intent}', but not 'purchaseItem'. Item:`, (actionData as any).item);\n    } else if (!actionData.success && actionData.error) {\n        console.warn(\"[Marketplace Route Effect] Action failed:\", actionData.error, \"Intent:\", actionData.intent);\n    }\n\n  }, [actionData, setCurrentUser, updateMarketplaceItem, addPurchaseRecord, currentUser]);\n\n\n  const userRole = useUserRole();\n  const isSuperAdmin = userRole === 'Super Admin';\n  type ActiveMarketTab = 'shop' | 'setup' | 'sales';\n  const [activeTab, setActiveTab] = useState<ActiveMarketTab>('shop');\n\n  const storePurchaseRecords = useStore((state) => state.purchaseRecords);\n\n\n  const tabClasses = (tabName: ActiveMarketTab) =>\n    cn(\n      \"px-4 py-2 font-medium text-sm rounded-md cursor-pointer\",\n      activeTab === tabName\n        ? \"bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-100\"\n        : \"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n    );\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-2xl font-bold\">Marketplace</h1>\n\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\n        <nav className=\"-mb-px flex space-x-4\" aria-label=\"Tabs\">\n          <button\n            className={tabClasses('shop')}\n            onClick={() => setActiveTab('shop')}\n            aria-current={activeTab === 'shop' ? 'page' : undefined}\n          >\n            Shop\n          </button>\n          {isSuperAdmin && (\n            <>\n              <button\n                className={tabClasses('setup')}\n                onClick={() => setActiveTab('setup')}\n                aria-current={activeTab === 'setup' ? 'page' : undefined}\n              >\n                Set-up\n              </button>\n              <button\n                className={tabClasses('sales')}\n                onClick={() => setActiveTab('sales')}\n                aria-current={activeTab === 'sales' ? 'page' : undefined}\n              >\n                Sales Log\n              </button>\n            </>\n          )}\n        </nav>\n      </div>\n\n      <div>\n        {activeTab === 'shop' && <ShopContent />}\n        {isSuperAdmin && activeTab === 'setup' && <SetupContent />}\n        {isSuperAdmin && activeTab === 'sales' && <SalesContent purchaseRecords={storePurchaseRecords} />}\n      </div>\n    </div>\n  );\n}\n", "import type { MarketplaceItem } from \"~/types/market\";\nimport { ShoppingCartIcon } from 'lucide-react'; // Or another relevant icon\n\ninterface MarketplaceItemCardProps {\n  item: MarketplaceItem;\n  onViewDetails: (item: MarketplaceItem) => void; // Callback when card is clicked\n  // Add onAddToCart or onBuyNow later if needed directly on card\n}\n\nexport function MarketplaceItemCard({ item, onViewDetails }: MarketplaceItemCardProps) {\n  const { name, description, price, imageUrl, stock } = item;\n  const isAvailable = stock === -1 || stock > 0; // Check if item is in stock or unlimited\n\n  return (\n    <div\n      className=\"group cursor-pointer overflow-hidden rounded-lg border bg-white shadow-sm transition-shadow duration-200 hover:shadow-md dark:border-gray-700 dark:bg-gray-800\"\n      onClick={() => onViewDetails(item)}\n    >\n      <img\n        src={imageUrl}\n        alt={name}\n        className=\"h-40 w-full object-cover transition-transform duration-300 group-hover:scale-105\"\n      />\n      <div className=\"p-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{name}</h3>\n        <p className=\"mt-1 line-clamp-2 text-sm text-gray-600 dark:text-gray-400\">{description}</p>\n        <div className=\"mt-3 flex items-center justify-between\">\n          <span className=\"text-base font-bold text-indigo-600 dark:text-indigo-400\">\n            {price} <span className=\"text-xs font-normal\">ESSENCE</span>\n          </span>\n          {stock !== -1 && ( // Display stock only if it's tracked\n             <span className={`text-xs font-medium ${isAvailable ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>\n               {isAvailable ? `${stock} in stock` : 'Out of stock'}\n             </span>\n          )}\n           {stock === -1 && ( // Indicate unlimited items\n             <span className=\"text-xs font-medium text-blue-600 dark:text-blue-400\">\n               Unlimited\n             </span>\n          )}\n        </div>\n         {/* Optional: Add a quick buy/add-to-cart button here if desired */}\n         {/* <button className=\"mt-3 w-full ...\">Buy Now</button> */}\n      </div>\n    </div>\n  );\n}\n", "import type { MarketplaceItem } from \"~/types/market\";\nimport { MarketplaceItemCard } from \"./MarketplaceItemCard\";\n\ninterface ProductGridProps {\n  items: MarketplaceItem[];\n  onSelectItem: (item: MarketplaceItem) => void; // Callback when an item card is clicked\n}\n\nexport function ProductGrid({ items, onSelectItem }: ProductGridProps) {\n  if (!items || items.length === 0) {\n    return <p className=\"text-center text-gray-500 dark:text-gray-400\">No items found.</p>;\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n      {items.map((item) => (\n        <MarketplaceItemCard key={item.id} item={item} onViewDetails={onSelectItem} />\n      ))}\n    </div>\n  );\n}\n", "import { Search } from 'lucide-react';\n\ninterface SearchBarProps {\n  searchTerm: string;\n  onSearchChange: (term: string) => void;\n}\n\nexport function SearchBar({ searchTerm, onSearchChange }: SearchBarProps) {\n  return (\n    <div className=\"relative flex-1\">\n      <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-gray-400\" />\n      <input\n        type=\"text\"\n        placeholder=\"Search items...\"\n        value={searchTerm}\n        onChange={(e) => onSearchChange(e.target.value)}\n        className=\"w-full rounded-md border border-gray-300 bg-white py-2 pl-10 pr-4 text-sm shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-indigo-400 dark:focus:ring-indigo-400\"\n      />\n    </div>\n  );\n}\n", "import type { MarketplaceItem } from \"~/types/market\";\n\ninterface FilterSortPanelProps {\n  categories: string[];\n  selectedCategory: string;\n  onCategoryChange: (category: string) => void;\n  sortBy: string;\n  onSortChange: (sortOption: string) => void;\n}\n\nexport function FilterSortPanel({\n  categories,\n  selectedCategory,\n  onCategoryChange,\n  sortBy,\n  onSortChange,\n}: FilterSortPanelProps) {\n  const sortOptions = [\n    { value: \"default\", label: \"Default\" },\n    { value: \"price-asc\", label: \"Price: Low to High\" },\n    { value: \"price-desc\", label: \"Price: High to Low\" },\n    { value: \"name-asc\", label: \"Name: A to Z\" },\n    { value: \"name-desc\", label: \"Name: Z to A\" },\n  ];\n\n  return (\n    <div className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-end flex-1\">\n      {/* Category Filter */}\n      <div className=\"flex-1 sm:flex-none\">\n        <label htmlFor=\"category-filter\" className=\"sr-only\">Filter by category</label>\n        <select\n          id=\"category-filter\"\n          value={selectedCategory}\n          onChange={(e) => onCategoryChange(e.target.value)}\n          className=\"w-full rounded-md border border-gray-300 bg-white py-2 px-3 text-sm shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-indigo-400 dark:focus:ring-indigo-400\"\n        >\n          <option value=\"all\">All Categories</option>\n          {categories.map((category) => (\n            <option key={category} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Sort By */}\n      <div className=\"flex-1 sm:flex-none\">\n         <label htmlFor=\"sort-by\" className=\"sr-only\">Sort by</label>\n        <select\n          id=\"sort-by\"\n          value={sortBy}\n          onChange={(e) => onSortChange(e.target.value)}\n          className=\"w-full rounded-md border border-gray-300 bg-white py-2 px-3 text-sm shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:focus:border-indigo-400 dark:focus:ring-indigo-400\"\n        >\n          {sortOptions.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n}\n", "import { useState, useEffect } from 'react';\nimport { Form, useNavigation, useActionData } from '@remix-run/react';\nimport type { Navigation } from '@remix-run/router';\nimport type { MarketplaceItem } from \"~/types/market\";\nimport { useStore } from \"~/store/store\";\nimport { X, Minus, Plus } from 'lucide-react';\nimport type { action as marketAction } from '~/routes/market'; // Import action type\n\ninterface ProductDetailModalProps {\n  item: MarketplaceItem | null;\n  onClose: () => void;\n}\n\nexport function ProductDetailModal({ item, onClose }: ProductDetailModalProps) {\n  const navigation = useNavigation();\n  const actionData = useActionData<typeof marketAction>();\n\n  const { currentUser } = useStore((state) => ({\n    currentUser: state.currentUser,\n  }));\n\n  const [quantity, setQuantity] = useState(1);\n  const [feedbackMessage, setFeedbackMessage] = useState<{ type: 'success' | 'error'; message: string } | null>(null);\n\n  useEffect(() => {\n    if (item) {\n      setQuantity(1);\n      setFeedbackMessage(null); \n    }\n  }, [item]);\n\n  useEffect(() => {\n    if (actionData && actionData.intent === 'purchaseItem') {\n      if (actionData.success) {\n        setFeedbackMessage({ type: 'success', message: actionData.message || 'Purchase successful!' });\n        const timer = setTimeout(() => {\n          onClose(); // Modal closes, parent (Marketplace route) useEffect handles Zustand update\n        }, 1500); \n        return () => clearTimeout(timer);\n      } else {\n        setFeedbackMessage({ type: 'error', message: actionData.error || 'Purchase failed. Please try again.' });\n      }\n    }\n  }, [actionData, onClose]);\n\n\n  if (!item) return null;\n\n  const { id: itemId, name, description, price, imageUrl, category, stock } = item;\n  const isUnlimitedStock = stock === -1;\n  \n  // Reflect stock changes from a successful purchase action immediately in the modal\n  const currentItemStock = (actionData?.intent === 'purchaseItem' && actionData.success && actionData.updatedItem?.id === itemId)\n                            ? actionData.updatedItem.stock \n                            : stock;\n\n  const maxQuantity = isUnlimitedStock ? Infinity : currentItemStock;\n  const totalPrice = price * quantity;\n  const isStockAvailableForQuantity = isUnlimitedStock || currentItemStock >= quantity;\n  \n  // Reflect balance changes from a successful purchase action immediately\n  const currentUserBalance = (actionData?.intent === 'purchaseItem' && actionData.success && actionData.finalBalance !== undefined && currentUser?.id === actionData.userId)\n                              ? actionData.finalBalance\n                              : currentUser?.balance;\n  \n  const canAfford = currentUserBalance !== undefined && currentUserBalance >= totalPrice;\n  // Ensure item is actually in stock (currentItemStock > 0 or unlimited)\n  const canPurchase = isStockAvailableForQuantity && canAfford && (isUnlimitedStock || currentItemStock > 0);\n\n  const isSubmitting = navigation.state === 'submitting' && navigation.formData?.get('intent') === 'purchaseItem';\n\n  const handleQuantityChange = (newQuantity: number) => {\n    const validQuantity = Math.max(1, Math.min(newQuantity, maxQuantity === Infinity ? 999 : maxQuantity));\n    setQuantity(validQuantity);\n    setFeedbackMessage(null); \n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/60 p-4 backdrop-blur-sm\">\n      <div className=\"relative w-full max-w-lg rounded-lg bg-white p-6 shadow-xl dark:bg-gray-800\">\n        <button\n          onClick={onClose}\n          className=\"absolute top-3 right-3 rounded-full p-1 text-gray-500 hover:bg-gray-200 hover:text-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-100\"\n          aria-label=\"Close modal\"\n        >\n          <X size={20} />\n        </button>\n\n        <Form method=\"post\" action=\"/market\" className=\"flex flex-col gap-6 md:flex-row\">\n          <input type=\"hidden\" name=\"intent\" value=\"purchaseItem\" />\n          <input type=\"hidden\" name=\"itemId\" value={itemId} />\n          {currentUser && <input type=\"hidden\" name=\"userId\" value={currentUser.id} />}\n          \n          <div className=\"flex-shrink-0 md:w-1/3\">\n            <img\n              src={imageUrl}\n              alt={name}\n              className=\"h-auto w-full rounded-md object-cover\"\n            />\n          </div>\n\n          <div className=\"flex flex-col justify-between md:w-2/3\">\n            <div>\n              <h2 className=\"mb-2 text-2xl font-semibold text-gray-900 dark:text-gray-100\">{name}</h2>\n              <p className=\"mb-4 text-sm text-gray-600 dark:text-gray-400\">{description}</p>\n              <div className=\"mb-4 space-y-1 text-sm\">\n                <p><span className=\"font-medium text-gray-700 dark:text-gray-300\">Category:</span> {category}</p>\n                <p>\n                  <span className=\"font-medium text-gray-700 dark:text-gray-300\">Availability:</span>\n                  {isUnlimitedStock ? (\n                    <span className=\"ml-1 text-blue-600 dark:text-blue-400\">Unlimited</span>\n                  ) : (\n                    <span className={`ml-1 ${currentItemStock > 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>\n                      {currentItemStock > 0 ? `${currentItemStock} in stock` : 'Out of stock'}\n                    </span>\n                  )}\n                </p>\n                 <p>\n                  <span className=\"font-medium text-gray-700 dark:text-gray-300\">Your Balance:</span>\n                  <span className=\"ml-1\">{currentUserBalance ?? 'N/A'} ESSENCE</span>\n                 </p>\n              </div>\n\n              <div className=\"mt-4\">\n                <label htmlFor=\"quantity-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Quantity</label>\n                <div className=\"flex items-center\">\n                  <button\n                    type=\"button\"\n                    onClick={() => handleQuantityChange(quantity - 1)}\n                    disabled={quantity <= 1 || isSubmitting}\n                    className=\"rounded-l-md border border-r-0 border-gray-300 p-2 text-gray-600 hover:bg-gray-100 disabled:opacity-50 dark:border-gray-600 dark:text-gray-400 dark:hover:bg-gray-700\"\n                    aria-label=\"Decrease quantity\"\n                  >\n                    <Minus size={16} />\n                  </button>\n                  <input\n                    type=\"number\"\n                    id=\"quantity-input\"\n                    name=\"quantity\" \n                    value={quantity}\n                    onChange={(e) => handleQuantityChange(parseInt(e.target.value, 10) || 1)}\n                    min=\"1\"\n                    max={isUnlimitedStock ? undefined : currentItemStock} // Max based on current stock\n                    readOnly={isSubmitting}\n                    className=\"w-16 border-y border-gray-300 p-2 text-center text-sm dark:border-gray-600 dark:bg-gray-700 dark:text-white\"\n                    aria-label=\"Quantity\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => handleQuantityChange(quantity + 1)}\n                    disabled={!isStockAvailableForQuantity || quantity >= maxQuantity || isSubmitting || (!isUnlimitedStock && currentItemStock === 0)}\n                    className=\"rounded-r-md border border-l-0 border-gray-300 p-2 text-gray-600 hover:bg-gray-100 disabled:opacity-50 dark:border-gray-600 dark:text-gray-400 dark:hover:bg-gray-700\"\n                    aria-label=\"Increase quantity\"\n                  >\n                    <Plus size={16} />\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {feedbackMessage && (\n              <div className={`mt-4 text-sm ${feedbackMessage.type === 'success' ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>\n                {feedbackMessage.message}\n              </div>\n            )}\n\n            <div className=\"mt-4 flex items-center justify-between border-t pt-4 dark:border-gray-700\">\n              <span className=\"text-xl font-bold text-indigo-600 dark:text-indigo-400\">\n                {totalPrice} <span className=\"text-sm font-normal\">ESSENCE</span>\n              </span>\n              <button\n                type=\"submit\"\n                disabled={!canPurchase || isSubmitting}\n                className={`rounded-md px-4 py-2 text-sm font-medium transition-colors ${\n                  canPurchase\n                    ? 'bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800'\n                    : 'cursor-not-allowed bg-gray-300 text-gray-500 dark:bg-gray-600 dark:text-gray-400'\n                }`}\n              >\n                {isSubmitting\n                  ? 'Processing...'\n                  : (!isUnlimitedStock && currentItemStock === 0)\n                  ? 'Out of Stock'\n                  : !isStockAvailableForQuantity\n                  ? 'Insufficient Stock'\n                  : !canAfford\n                  ? 'Insufficient Funds'\n                  : `Buy ${quantity}`}\n              </button>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import React, { useState, useMemo } from 'react';\nimport type { MarketplaceItem } from '~/types/market';\nimport { cn } from '~/lib/utils';\n\n// Icons (Simple placeholders, replace with actual icons if available)\nconst EditIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" /></svg>;\nconst DeleteIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" /></svg>;\nconst SortAscIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" /></svg>;\nconst SortDescIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 ml-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" /></svg>;\n\ninterface InventoryTableProps {\n  items: MarketplaceItem[];\n  onEdit: (item: MarketplaceItem) => void;\n  onDelete: (item: MarketplaceItem) => void;\n}\n\ntype SortKey = 'name' | 'price' | 'stock' | 'status' | 'category';\ntype SortDirection = 'asc' | 'desc';\n\nexport function InventoryTable({ items, onEdit, onDelete }: InventoryTableProps) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('all');\n  const [filterStatus, setFilterStatus] = useState<'all' | 'active' | 'inactive'>('all');\n  const [sortKey, setSortKey] = useState<SortKey>('name');\n  const [sortDirection, setSortDirection] = useState<SortDirection>('asc');\n\n  const categories = useMemo(() => {\n    const uniqueCategories = new Set(items.map(item => item.category));\n    return ['all', ...Array.from(uniqueCategories)];\n  }, [items]);\n\n  const filteredAndSortedItems = useMemo(() => {\n    let processedItems = [...items];\n\n    // Filter by search term (name or description)\n    if (searchTerm) {\n      const lowerCaseSearchTerm = searchTerm.toLowerCase();\n      processedItems = processedItems.filter(item =>\n        item.name.toLowerCase().includes(lowerCaseSearchTerm) ||\n        item.description.toLowerCase().includes(lowerCaseSearchTerm)\n      );\n    }\n\n    // Filter by category\n    if (filterCategory !== 'all') {\n      processedItems = processedItems.filter(item => item.category === filterCategory);\n    }\n\n    // Filter by status\n    if (filterStatus !== 'all') {\n      processedItems = processedItems.filter(item => item.status === filterStatus);\n    }\n\n    // Sort\n    processedItems.sort((a, b) => {\n      let valA = a[sortKey];\n      let valB = b[sortKey];\n\n      // Handle unlimited stock (-1) - always sort it high/low depending on direction?\n      // Or treat it as a very large number for sorting purposes? Let's treat as highest.\n      if (sortKey === 'stock') {\n        valA = valA === -1 ? Infinity : valA;\n        valB = valB === -1 ? Infinity : valB;\n      }\n\n      let comparison = 0;\n      if (typeof valA === 'string' && typeof valB === 'string') {\n        comparison = valA.localeCompare(valB);\n      } else if (typeof valA === 'number' && typeof valB === 'number') {\n        comparison = valA - valB;\n      } else {\n        // Fallback for mixed types or other types (e.g., status)\n        comparison = String(valA).localeCompare(String(valB));\n      }\n\n      return sortDirection === 'asc' ? comparison : comparison * -1;\n    });\n\n    return processedItems;\n  }, [items, searchTerm, filterCategory, filterStatus, sortKey, sortDirection]);\n\n  const handleSort = (key: SortKey) => {\n    if (sortKey === key) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortKey(key);\n      setSortDirection('asc');\n    }\n  };\n\n  const getSortIcon = (key: SortKey) => {\n    if (sortKey !== key) return null;\n    return sortDirection === 'asc' ? <SortAscIcon /> : <SortDescIcon />;\n  };\n\n  const lowStockThreshold = 5; // Define low stock threshold\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Search and Filter Controls */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search products...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600\"\n        />\n        <select\n          value={filterCategory}\n          onChange={(e) => setFilterCategory(e.target.value)}\n          className=\"p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600\"\n        >\n          {categories.map(cat => (\n            <option key={cat} value={cat}>{cat === 'all' ? 'All Categories' : cat}</option>\n          ))}\n        </select>\n        <select\n          value={filterStatus}\n          onChange={(e) => setFilterStatus(e.target.value as 'all' | 'active' | 'inactive')}\n          className=\"p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600\"\n        >\n          <option value=\"all\">All Statuses</option>\n          <option value=\"active\">Active</option>\n          <option value=\"inactive\">Inactive</option>\n        </select>\n      </div>\n\n      {/* Inventory Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\n            <tr>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('name')}>\n                <div className=\"flex items-center\">Name {getSortIcon('name')}</div>\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('category')}>\n                 <div className=\"flex items-center\">Category {getSortIcon('category')}</div>\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('price')}>\n                 <div className=\"flex items-center\">Price {getSortIcon('price')}</div>\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('stock')}>\n                 <div className=\"flex items-center\">Stock {getSortIcon('stock')}</div>\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('status')}>\n                 <div className=\"flex items-center\">Status {getSortIcon('status')}</div>\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {filteredAndSortedItems.length > 0 ? (\n              filteredAndSortedItems.map((item) => (\n                <tr key={item.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">{item.name}</td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{item.category}</td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{item.price} <span className=\"text-xs\">ESSENCE</span></td>\n                  <td className={cn(\n                      \"px-4 py-3 whitespace-nowrap text-sm\",\n                      item.stock !== -1 && item.stock < lowStockThreshold && item.stock > 0 ? \"text-orange-600 dark:text-orange-400 font-semibold\" : \"text-gray-500 dark:text-gray-400\",\n                      item.stock === 0 ? \"text-red-600 dark:text-red-400 font-semibold\" : \"\"\n                    )}>\n                      {item.stock === -1 ? 'Unlimited' : item.stock}\n                      {item.stock !== -1 && item.stock < lowStockThreshold && item.stock > 0 && <span className=\"ml-1 text-xs\">(Low)</span>}\n                      {item.stock === 0 && <span className=\"ml-1 text-xs\">(Out)</span>}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                    <span className={cn(\n                      \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\",\n                      item.status === 'active' ? \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\" : \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\n                    )}>\n                      {item.status}\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium space-x-2\">\n                    <button onClick={() => onEdit(item)} className=\"text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300\" title=\"Edit\">\n                      <EditIcon />\n                    </button>\n                    <button onClick={() => onDelete(item)} className=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300\" title=\"Delete\">\n                      <DeleteIcon />\n                    </button>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={6} className=\"px-4 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\n                  No products found matching your criteria.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n", "import React, { useState, useEffect } from 'react';\nimport { Form, useNavigation, useActionData } from '@remix-run/react';\nimport type { Navigation } from '@remix-run/router';\nimport type { MarketplaceItem } from '~/types/market';\nimport type { action as marketAction } from '~/routes/market'; \n\ninterface AddProductFormProps {\n  onCancel: () => void;\n  categories: string[];\n  navigation: Navigation;\n  actionData: ReturnType<typeof useActionData<typeof marketAction>>;\n}\n\nexport function AddProductForm({ onCancel, categories, navigation, actionData }: AddProductFormProps) {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState<number | ''>('');\n  const [stock, setStock] = useState<number | ''>('');\n  const [imageFile, setImageFile] = useState<File | null>(null);\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  const [category, setCategory] = useState(categories[0] || '');\n  const [newCategory, setNewCategory] = useState('');\n  const [status, setStatus] = useState<'active' | 'inactive'>('active');\n  const [isUnlimitedStock, setIsUnlimitedStock] = useState(false);\n  const [formError, setFormError] = useState<string | null>(null);\n\n  const isSubmitting = navigation.state === 'submitting' && navigation.formData?.get('intent') === 'addMarketplaceItem';\n\n  useEffect(() => {\n    if (actionData && actionData.intent === 'addMarketplaceItem') {\n      if (!actionData.success) {\n        setFormError(actionData.error || 'An unknown error occurred while adding the product.');\n      } else {\n        // Success is handled by SetupContent's useEffect which closes the form.\n        // Reset local form error if any.\n        setFormError(null);\n        // Optionally reset form fields here if parent doesn't unmount/re-key the component\n        // For now, parent (SetupContent) handles closing the form, which effectively resets.\n      }\n    }\n  }, [actionData]);\n\n  const handleStockChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setStock(value === '' ? '' : parseInt(value, 10));\n  };\n\n  const handlePriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setPrice(value === '' ? '' : parseFloat(value));\n  };\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setImageFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setImageFile(null);\n      setImagePreview(null);\n    }\n  };\n\n  const finalCategory = newCategory.trim() || category;\n\n  return (\n    <Form method=\"post\" action=\"/market\" encType=\"multipart/form-data\" className=\"space-y-4 p-4 border rounded-lg dark:border-gray-700 bg-white dark:bg-gray-800 shadow-md\">\n      <input type=\"hidden\" name=\"intent\" value=\"addMarketplaceItem\" />\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-gray-100\">Add New Product</h3>\n\n      <div>\n        <label htmlFor=\"product-name\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Product Name <span className=\"text-red-500\">*</span></label>\n        <input\n          type=\"text\"\n          id=\"product-name\"\n          name=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"product-description\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Description</label>\n        <textarea\n          id=\"product-description\"\n          name=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          rows={3}\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"product-price\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Price (ESSENCE) <span className=\"text-red-500\">*</span></label>\n        <input\n          type=\"number\"\n          id=\"product-price\"\n          name=\"price\"\n          value={price}\n          onChange={handlePriceChange}\n          required\n          min=\"0\"\n          step=\"0.01\"\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n        />\n      </div>\n\n      <div className=\"flex items-center space-x-4\">\n          <div className=\"flex-grow\">\n            <label htmlFor=\"product-stock\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Stock Quantity <span className=\"text-red-500\">*</span></label>\n            <input\n              type=\"number\"\n              id=\"product-stock\"\n              name=\"stock\"\n              value={stock}\n              onChange={handleStockChange}\n              required={!isUnlimitedStock}\n              min=\"0\"\n              step=\"1\"\n              disabled={isUnlimitedStock}\n              className={`mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white ${isUnlimitedStock ? 'bg-gray-100 dark:bg-gray-600 cursor-not-allowed' : ''}`}\n            />\n          </div>\n          <div className=\"pt-6\">\n              <label className=\"flex items-center space-x-2 text-sm text-gray-700 dark:text-gray-300\">\n                <input\n                    type=\"checkbox\"\n                    name=\"isUnlimitedStock\"\n                    checked={isUnlimitedStock}\n                    onChange={(e) => {\n                        setIsUnlimitedStock(e.target.checked);\n                        if (e.target.checked) setStock('');\n                    }}\n                    className=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 dark:border-gray-600 dark:bg-gray-700 dark:focus:ring-offset-gray-800\"\n                />\n                <span>Unlimited</span>\n            </label>\n          </div>\n      </div>\n\n      <div>\n        <label htmlFor=\"product-category-select\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Category <span className=\"text-red-500\">*</span></label>\n        <input type=\"hidden\" name=\"category\" value={finalCategory} />\n        <select\n          id=\"product-category-select\"\n          value={category}\n          onChange={(e) => { setCategory(e.target.value); setNewCategory(''); }}\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n        >\n          <option value=\"\" disabled>Select existing or add new</option>\n          {categories.filter(c => c !== 'all').map(cat => (\n            <option key={cat} value={cat}>{cat}</option>\n          ))}\n        </select>\n        <input\n          type=\"text\"\n          id=\"product-category-new\"\n          placeholder=\"Or add new category...\"\n          value={newCategory}\n          onChange={(e) => { setNewCategory(e.target.value); setCategory(''); }}\n          className=\"mt-2 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n        />\n        {!finalCategory && (\n            <p className=\"mt-1 text-xs text-red-600 dark:text-red-400\">Please select or enter a category.</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"product-image-upload\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Product Image</label>\n        <input\n          type=\"file\"\n          id=\"product-image-upload\"\n          name=\"productImage\" \n          accept=\"image/*\"\n          onChange={handleImageChange}\n          className=\"mt-1 block w-full text-sm text-gray-500 dark:text-gray-400\n                      file:mr-4 file:py-2 file:px-4\n                      file:rounded-md file:border-0\n                      file:text-sm file:font-semibold\n                      file:bg-indigo-50 file:text-indigo-700\n                      hover:file:bg-indigo-100\n                      dark:file:bg-gray-700 dark:file:text-indigo-300 dark:hover:file:bg-gray-600\"\n        />\n        {imagePreview && (\n            <div className=\"mt-2\">\n                <img src={imagePreview} alt=\"Selected preview\" className=\"h-20 w-20 object-cover rounded-md border dark:border-gray-600\" />\n            </div>\n        )}\n        <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">Upload an image for the product (optional).</p>\n      </div>\n\n      <div>\n        <label htmlFor=\"product-status\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Status</label>\n        <select\n          id=\"product-status\"\n          name=\"status\"\n          value={status}\n          onChange={(e) => setStatus(e.target.value as 'active' | 'inactive')}\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n        >\n          <option value=\"active\">Active</option>\n          <option value=\"inactive\">Inactive</option>\n        </select>\n      </div>\n\n      {formError && (\n        <p className=\"text-sm text-red-600 dark:text-red-400\">{formError}</p>\n      )}\n\n      <div className=\"flex justify-end space-x-3 pt-4\">\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          disabled={isSubmitting}\n          className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:bg-gray-600 dark:text-gray-100 dark:border-gray-500 dark:hover:bg-gray-500 disabled:opacity-50\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n          disabled={isSubmitting || !finalCategory || !name || price === '' || (stock === '' && !isUnlimitedStock)}\n          className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 disabled:opacity-50\"\n        >\n          {isSubmitting ? 'Adding...' : 'Add Product'}\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import React, { useState, useEffect } from 'react';\nimport { Form, useNavigation, useActionData } from '@remix-run/react'; \nimport type { Navigation } from '@remix-run/router'; \nimport type { MarketplaceItem } from '~/types/market';\nimport type { action as marketAction } from '~/routes/market'; \n\ninterface EditProductModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  product: MarketplaceItem | null;\n  categories: string[];\n  navigation: Navigation; \n  actionData: ReturnType<typeof useActionData<typeof marketAction>>; \n}\n\nexport function EditProductModal({\n  isOpen,\n  onClose,\n  product,\n  categories,\n  navigation,\n  actionData\n}: EditProductModalProps) {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState<number | ''>('');\n  const [stock, setStock] = useState<number | ''>('');\n  const [imageFile, setImageFile] = useState<File | null>(null);\n  const [imagePreview, setImagePreview] = useState<string | null>(null);\n  const [category, setCategory] = useState('');\n  const [newCategory, setNewCategory] = useState('');\n  const [status, setStatus] = useState<'active' | 'inactive'>('active');\n  const [isUnlimitedStock, setIsUnlimitedStock] = useState(false);\n  const [formError, setFormError] = useState<string | null>(null); \n\n  const isSubmitting = navigation.state === 'submitting' && navigation.formData?.get('intent') === 'editMarketplaceItem';\n\n  useEffect(() => {\n    if (product && isOpen) {\n      setName(product.name);\n      setDescription(product.description);\n      setPrice(product.price);\n      setStock(product.stock === -1 ? '' : product.stock);\n      setIsUnlimitedStock(product.stock === -1);\n      setImagePreview(product.imageUrl || null);\n      setImageFile(null); // Clear any previously selected file\n      setCategory(product.category);\n      setStatus(product.status);\n      setNewCategory('');\n      setFormError(null); \n    } else if (!isOpen) {\n      setImagePreview(null); // Clear preview when modal is not open\n      setImageFile(null);\n      setFormError(null);\n    }\n  }, [product, isOpen]);\n\n  useEffect(() => {\n    if (actionData && actionData.intent === 'editMarketplaceItem') {\n      if (!actionData.success) {\n        setFormError(actionData.error || 'An unknown error occurred while editing the product.');\n      } else {\n        // Success is handled by SetupContent's useEffect which closes the modal.\n        setFormError(null);\n      }\n    }\n  }, [actionData]);\n\n\n  if (!isOpen || !product) return null;\n\n  const handleStockChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setStock(value === '' ? '' : parseInt(value, 10));\n  };\n\n  const handlePriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setPrice(value === '' ? '' : parseFloat(value));\n  };\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setImageFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      // If file selection is cancelled, revert to original product image or null\n      setImageFile(null);\n      setImagePreview(product?.imageUrl || null);\n    }\n  };\n\n  const finalCategory = newCategory.trim() || category;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-lg max-h-[90vh] overflow-y-auto\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-100\">Edit Product: {product.name}</h2>\n        <Form method=\"post\" action=\"/market\" encType=\"multipart/form-data\" className=\"space-y-4\">\n          <input type=\"hidden\" name=\"intent\" value=\"editMarketplaceItem\" />\n          <input type=\"hidden\" name=\"productId\" value={product.id} />\n          <input type=\"hidden\" name=\"currentImageUrl\" value={product.imageUrl || ''} />\n\n          <div>\n            <label htmlFor=\"edit-product-name\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Product Name <span className=\"text-red-500\">*</span></label>\n            <input\n              type=\"text\"\n              id=\"edit-product-name\"\n              name=\"name\" \n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"edit-product-description\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Description</label>\n            <textarea\n              id=\"edit-product-description\"\n              name=\"description\" \n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              rows={3}\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"edit-product-price\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Price (ESSENCE) <span className=\"text-red-500\">*</span></label>\n            <input\n              type=\"number\"\n              id=\"edit-product-price\"\n              name=\"price\" \n              value={price}\n              onChange={handlePriceChange}\n              required\n              min=\"0\"\n              step=\"0.01\"\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            />\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-grow\">\n                <label htmlFor=\"edit-product-stock\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Stock Quantity <span className=\"text-red-500\">*</span></label>\n                <input\n                  type=\"number\"\n                  id=\"edit-product-stock\"\n                  name=\"stock\" \n                  value={stock}\n                  onChange={handleStockChange}\n                  required={!isUnlimitedStock}\n                  min=\"0\"\n                  step=\"1\"\n                  disabled={isUnlimitedStock}\n                  className={`mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white ${isUnlimitedStock ? 'bg-gray-100 dark:bg-gray-600 cursor-not-allowed' : ''}`}\n                />\n            </div>\n            <div className=\"pt-6\">\n                <label className=\"flex items-center space-x-2 text-sm text-gray-700 dark:text-gray-300\">\n                    <input\n                        type=\"checkbox\"\n                        name=\"isUnlimitedStock\" \n                        checked={isUnlimitedStock}\n                        onChange={(e) => {\n                            setIsUnlimitedStock(e.target.checked);\n                            if (e.target.checked) setStock('');\n                        }}\n                        className=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 dark:border-gray-600 dark:bg-gray-700 dark:focus:ring-offset-gray-800\"\n                    />\n                    <span>Unlimited</span>\n                </label>\n            </div>\n          </div>\n\n          <div>\n            <label htmlFor=\"edit-product-category-select\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Category <span className=\"text-red-500\">*</span></label>\n            <input type=\"hidden\" name=\"category\" value={finalCategory} />\n            <select\n              id=\"edit-product-category-select\"\n              value={category} \n              onChange={(e) => { setCategory(e.target.value); setNewCategory(''); }} \n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            >\n              <option value=\"\" disabled>Select existing or add new</option>\n              {categories.filter(c => c !== 'all').map(cat => (\n                <option key={cat} value={cat}>{cat}</option>\n              ))}\n            </select>\n            <input\n              type=\"text\"\n              id=\"edit-product-category-new\"\n              placeholder=\"Or add new category...\"\n              value={newCategory} \n              onChange={(e) => { setNewCategory(e.target.value); setCategory(''); }} \n              className=\"mt-2 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            />\n             {!finalCategory && (\n                <p className=\"mt-1 text-xs text-red-600 dark:text-red-400\">Please select or enter a category.</p>\n             )}\n          </div>\n\n          <div>\n            <label htmlFor=\"edit-product-image-upload\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Product Image</label>\n             {imagePreview && (\n                <div className=\"mt-2 mb-2\">\n                    <img src={imagePreview} alt=\"Current product preview\" className=\"h-20 w-20 object-cover rounded-md border dark:border-gray-600\" />\n                </div>\n             )}\n            <input\n              type=\"file\"\n              id=\"edit-product-image-upload\"\n              name=\"productImage\" \n              accept=\"image/*\"\n              onChange={handleImageChange}\n              className=\"mt-1 block w-full text-sm text-gray-500 dark:text-gray-400\n                         file:mr-4 file:py-2 file:px-4\n                         file:rounded-md file:border-0\n                         file:text-sm file:font-semibold\n                         file:bg-indigo-50 file:text-indigo-700\n                         hover:file:bg-indigo-100\n                         dark:file:bg-gray-700 dark:file:text-indigo-300 dark:hover:file:bg-gray-600\"\n            />\n             <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">Upload a new image to replace the current one.</p>\n          </div>\n\n          <div>\n            <label htmlFor=\"edit-product-status\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Status</label>\n            <select\n              id=\"edit-product-status\"\n              name=\"status\" \n              value={status}\n              onChange={(e) => setStatus(e.target.value as 'active' | 'inactive')}\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n            >\n              <option value=\"active\">Active</option>\n              <option value=\"inactive\">Inactive</option>\n            </select>\n          </div>\n\n           {formError && (\n             <p className=\"text-sm text-red-600 dark:text-red-400\">{formError}</p>\n           )}\n\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              disabled={isSubmitting} \n              className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:bg-gray-600 dark:text-gray-100 dark:border-gray-500 dark:hover:bg-gray-500 disabled:opacity-50\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting || !finalCategory || !name || price === '' || (stock === '' && !isUnlimitedStock)} \n              className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 disabled:opacity-50\"\n            >\n              {isSubmitting ? 'Updating...' : 'Update Product'}\n            </button>\n          </div>\n        </Form> \n      </div>\n    </div>\n  );\n}\n", "import React from 'react';\nimport { Form } from '@remix-run/react';\nimport type { Navigation } from '@remix-run/router';\nimport type { MarketplaceItem } from '~/types/market';\n\ninterface DeleteConfirmationModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  product: MarketplaceItem | null;\n  navigation: Navigation;\n  defaultPlaceholderImageUrl: string; // Added prop\n}\n\nexport function DeleteConfirmationModal({\n  isOpen,\n  onClose,\n  product,\n  navigation,\n  defaultPlaceholderImageUrl, // Use prop\n}: DeleteConfirmationModalProps) {\n  if (!isOpen || !product) return null;\n\n  const isSubmitting = navigation.state === 'submitting' && \n                       navigation.formData?.get('intent') === 'deleteMarketplaceItem' && \n                       navigation.formData?.get('productId') === product.id;\n\n  // Determine if the image is a custom uploaded image (not the default placeholder)\n  const isCustomImage = product.imageUrl && product.imageUrl !== defaultPlaceholderImageUrl;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-100\">Confirm Deletion</h2>\n        <p className=\"mb-6 text-gray-600 dark:text-gray-300\">\n          Are you sure you want to delete the product \"<strong>{product.name}</strong>\"? This action cannot be undone.\n          {isCustomImage && ( // Show message only for custom images\n            <span className=\"block text-xs text-gray-500 dark:text-gray-400 mt-1\">\n              The associated custom image will also be deleted from storage.\n            </span>\n          )}\n        </p>\n        <Form method=\"post\" action=\"/market\"> {/* Ensure action points to your market route */}\n          <input type=\"hidden\" name=\"intent\" value=\"deleteMarketplaceItem\" />\n          <input type=\"hidden\" name=\"productId\" value={product.id} />\n          {/* Pass imageUrl to action; the action logic will decide if it's deletable */}\n          {product.imageUrl && <input type=\"hidden\" name=\"imageUrl\" value={product.imageUrl} />}\n          \n          <div className=\"flex justify-end space-x-3\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              disabled={isSubmitting}\n              className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:bg-gray-600 dark:text-gray-100 dark:border-gray-500 dark:hover:bg-gray-500 disabled:opacity-50\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 dark:focus:ring-offset-gray-800 disabled:opacity-50\"\n            >\n              {isSubmitting ? 'Deleting...' : 'Delete Product'}\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import React, { useState, useMemo } from 'react';\nimport { useStore } from '~/store/store';\nimport type { PurchaseRecordWithBuyerDetails } from '~/types/market'; // Use the new type\n// import type { User } from '~/types/admin'; // User type might not be needed directly if buyerName is in record\nimport { cn } from '~/lib/utils';\nimport { ConfirmationModal } from '~/components/admin/ConfirmationModal';\n\n// Icons\nconst CheckCircleIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-green-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" /></svg>;\nconst ClockIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-yellow-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.414-1.414L11 9.586V6z\" clipRule=\"evenodd\" /></svg>;\nconst TruckIcon = () => <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.657 16.657l-4.243 4.243M6.343 16.657l4.243 4.243\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17l.172-.171a3 3 0 014.242 0L15 17\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 21V10m0 0a8 8 0 110-8 8 8 0 010 8zm0 0a8 8 0 100 8 8 8 0 000-8z\" /><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0z\" /></svg>;\n\ninterface SalesLogTableProps {\n  records: PurchaseRecordWithBuyerDetails[]; // Accept records as a prop\n}\n\ntype SortKey = 'itemName' | 'buyerName' | 'quantity' | 'price' | 'purchaseDate' | 'status' | 'deliveryDate';\ntype SortDirection = 'asc' | 'desc';\n\nexport function SalesLogTable({ records }: SalesLogTableProps) {\n  // markPurchaseAsDelivered is still sourced from Zustand for global state modification\n  const { markPurchaseAsDelivered } = useStore((state) => ({\n    markPurchaseAsDelivered: state.markPurchaseAsDelivered,\n  }));\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterProduct, setFilterProduct] = useState('all');\n  const [filterBuyer, setFilterBuyer] = useState('all'); // This will filter by buyerName from records\n  const [filterStatus, setFilterStatus] = useState<'all' | 'pending' | 'delivered'>('all');\n  const [filterStartDate, setFilterStartDate] = useState('');\n  const [filterEndDate, setFilterEndDate] = useState('');\n  const [sortKey, setSortKey] = useState<SortKey>('purchaseDate');\n  const [sortDirection, setSortDirection] = useState<SortDirection>('desc');\n  const [confirmingDelivery, setConfirmingDelivery] = useState<PurchaseRecordWithBuyerDetails | null>(null);\n\n  // No need for userMap if buyer details are in records\n  // const userMap = useMemo(() => { ... });\n\n  const uniqueProducts = useMemo(() => {\n    const names = new Set(records.map(p => p.itemName));\n    return ['all', ...Array.from(names)];\n  }, [records]);\n\n  const uniqueBuyers = useMemo(() => {\n    const buyerNames = new Set(records.map(p => p.profiles?.fullName || `Unknown User (${p.userId})`));\n    return ['all', ...Array.from(buyerNames)];\n  }, [records]);\n\n  const filteredAndSortedHistory = useMemo(() => {\n    // Add buyerName to each record for easier filtering/sorting if not already flat\n    let processedHistory = records.map(p => ({\n      ...p,\n      buyerName: p.profiles?.fullName || `Unknown User (${p.userId})`,\n    }));\n\n    // Filter by search term (product name or buyer name)\n    if (searchTerm) {\n      const lowerCaseSearchTerm = searchTerm.toLowerCase();\n      processedHistory = processedHistory.filter(p =>\n        p.itemName.toLowerCase().includes(lowerCaseSearchTerm) ||\n        p.buyerName.toLowerCase().includes(lowerCaseSearchTerm)\n      );\n    }\n\n    // Filter by product\n    if (filterProduct !== 'all') {\n      processedHistory = processedHistory.filter(p => p.itemName === filterProduct);\n    }\n\n    // Filter by buyer name\n    if (filterBuyer !== 'all') {\n      processedHistory = processedHistory.filter(p => p.buyerName === filterBuyer);\n    }\n\n    // Filter by status\n    if (filterStatus !== 'all') {\n      processedHistory = processedHistory.filter(p => p.status === filterStatus);\n    }\n\n    // Filter by date range\n    const startDate = filterStartDate ? new Date(filterStartDate).getTime() : null;\n    const endDate = filterEndDate ? new Date(filterEndDate).setHours(23, 59, 59, 999) : null;\n\n    if (startDate || endDate) {\n      processedHistory = processedHistory.filter(p => {\n        const purchaseTime = new Date(p.purchaseDate).getTime();\n        const startMatch = startDate ? purchaseTime >= startDate : true;\n        const endMatch = endDate ? purchaseTime <= endDate : true;\n        return startMatch && endMatch;\n      });\n    }\n\n    // Sort\n    processedHistory.sort((a, b) => {\n      let valA: any = a[sortKey as keyof typeof a]; // Type assertion for safety\n      let valB: any = b[sortKey as keyof typeof b];\n\n      if (sortKey === 'purchaseDate' || sortKey === 'deliveryDate') {\n        valA = valA ? new Date(valA).getTime() : (sortDirection === 'asc' ? Infinity : -Infinity);\n        valB = valB ? new Date(valB).getTime() : (sortDirection === 'asc' ? Infinity : -Infinity);\n      }\n\n      let comparison = 0;\n      if (typeof valA === 'string' && typeof valB === 'string') {\n        comparison = valA.localeCompare(valB);\n      } else if (typeof valA === 'number' && typeof valB === 'number') {\n        comparison = valA - valB;\n      } else {\n        comparison = String(valA).localeCompare(String(valB));\n      }\n\n      return sortDirection === 'asc' ? comparison : comparison * -1;\n    });\n\n    return processedHistory;\n  }, [records, searchTerm, filterProduct, filterBuyer, filterStatus, filterStartDate, filterEndDate, sortKey, sortDirection]);\n\n  const handleSort = (key: SortKey) => {\n    if (sortKey === key) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortKey(key);\n      setSortDirection('asc');\n    }\n  };\n\n  const getSortIcon = (key: SortKey) => {\n    if (sortKey !== key) return null;\n    return sortDirection === 'asc' ? ' \u25B2' : ' \u25BC';\n  };\n\n  const formatDateTime = (isoString: string | null | undefined) => {\n    if (!isoString) return 'N/A';\n    try {\n      return new Date(isoString).toLocaleString();\n    } catch (e) {\n      return 'Invalid Date';\n    }\n  };\n\n  const handleConfirmDelivery = () => {\n    if (confirmingDelivery) {\n      markPurchaseAsDelivered(confirmingDelivery.id);\n      console.log(`Marked purchase ${confirmingDelivery.id} as delivered.`);\n    }\n    setConfirmingDelivery(null);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Filter Controls */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-md border dark:border-gray-700\">\n        <input\n          type=\"text\"\n          placeholder=\"Search Product or Buyer...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600\"\n        />\n        <select\n          value={filterProduct}\n          onChange={(e) => setFilterProduct(e.target.value)}\n          className=\"p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600\"\n        >\n          {uniqueProducts.map(prod => (\n            <option key={prod} value={prod}>{prod === 'all' ? 'All Products' : prod}</option>\n          ))}\n        </select>\n        <select\n          value={filterBuyer}\n          onChange={(e) => setFilterBuyer(e.target.value)}\n          className=\"p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600\"\n        >\n          {uniqueBuyers.map(buyer => (\n            <option key={buyer} value={buyer}>{buyer === 'all' ? 'All Buyers' : buyer}</option>\n          ))}\n        </select>\n        <select\n          value={filterStatus}\n          onChange={(e) => setFilterStatus(e.target.value as 'all' | 'pending' | 'delivered')}\n          className=\"p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600\"\n        >\n          <option value=\"all\">All Statuses</option>\n          <option value=\"pending\">Pending</option>\n          <option value=\"delivered\">Delivered</option>\n        </select>\n         <div className=\"col-span-1 md:col-span-2 lg:col-span-2 grid grid-cols-2 gap-4\">\n             <div>\n                <label htmlFor=\"filter-start-date\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Purchase Date From</label>\n                <input\n                    type=\"date\"\n                    id=\"filter-start-date\"\n                    value={filterStartDate}\n                    onChange={(e) => setFilterStartDate(e.target.value)}\n                    className=\"p-2 border rounded-md w-full dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                />\n             </div>\n             <div>\n                <label htmlFor=\"filter-end-date\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Purchase Date To</label>\n                <input\n                    type=\"date\"\n                    id=\"filter-end-date\"\n                    value={filterEndDate}\n                    onChange={(e) => setFilterEndDate(e.target.value)}\n                    className=\"p-2 border rounded-md w-full dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                />\n             </div>\n         </div>\n      </div>\n\n      {/* Sales Log Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\n            <tr>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('itemName')}>\n                Product Name {getSortIcon('itemName')}\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('buyerName')}>\n                Buyer {getSortIcon('buyerName')}\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('quantity')}>\n                Qty {getSortIcon('quantity')}\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('price')}>\n                Total Price {getSortIcon('price')}\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('purchaseDate')}>\n                Purchase Date {getSortIcon('purchaseDate')}\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('status')}>\n                Status {getSortIcon('status')}\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" onClick={() => handleSort('deliveryDate')}>\n                Delivery Date {getSortIcon('deliveryDate')}\n              </th>\n              <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                Action\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {filteredAndSortedHistory.length > 0 ? (\n              filteredAndSortedHistory.map((record) => (\n                <tr key={record.id} className={cn(\n                    \"hover:bg-gray-50 dark:hover:bg-gray-800\",\n                    record.status === 'pending' ? 'bg-yellow-50 dark:bg-yellow-900/20' : ''\n                )}>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">{record.itemName}</td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    {record.profiles?.fullName || `Unknown User (${record.userId})`}\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400 text-center\">{record.quantity}</td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{record.price} <span className=\"text-xs\">ESSENCE</span></td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{formatDateTime(record.purchaseDate)}</td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                    <span className={cn(\n                      \"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium capitalize\",\n                      record.status === 'delivered' ? \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\" : \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\"\n                    )}>\n                      {record.status === 'delivered' ? <CheckCircleIcon /> : <ClockIcon />}\n                      <span className=\"ml-1\">{record.status}</span>\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{formatDateTime(record.deliveryDate)}</td>\n                  <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium\">\n                    {record.status === 'pending' ? (\n                      <button\n                        onClick={() => setConfirmingDelivery(record)}\n                        className=\"inline-flex items-center px-2 py-1 border border-transparent text-xs leading-4 font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-gray-800\"\n                        title=\"Mark as Delivered\"\n                      >\n                        <TruckIcon /> <span className=\"ml-1\">Deliver</span>\n                      </button>\n                    ) : (\n                      <span className=\"text-green-600 dark:text-green-400 flex items-center text-xs\">\n                        <CheckCircleIcon /> <span className=\"ml-1\">Completed</span>\n                      </span>\n                    )}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={8} className=\"px-4 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\n                  No purchase records found matching your criteria.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      <ConfirmationModal\n        isOpen={!!confirmingDelivery}\n        onClose={() => setConfirmingDelivery(null)}\n        onConfirm={handleConfirmDelivery}\n        title=\"Confirm Delivery\"\n        message={\n          <span>\n            Are you sure you want to mark the purchase of \"<strong>{confirmingDelivery?.itemName}</strong>\" by <strong>{confirmingDelivery?.profiles?.fullName || `User ID ${confirmingDelivery?.userId}`}</strong> as delivered?\n          </span>\n        }\n        confirmText=\"Mark Delivered\"\n        confirmButtonClass=\"bg-indigo-600 hover:bg-indigo-700\"\n      />\n    </div>\n  );\n}\n", "import React, { useEffect, useState } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Form, useNavigation, useActionData } from '@remix-run/react'; // Use Remix Form\nimport { cn } from '~/lib/utils';\n\ninterface ConfirmationModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  // onConfirm: () => void; // Removed direct confirm handler\n  title: string;\n  message: React.ReactNode;\n  confirmText?: string;\n  cancelText?: string;\n  confirmButtonClass?: string;\n  actionData: any; // Action data from parent\n  navigation: any; // Navigation state from parent\n  intent: string; // The intent for the form submission\n  formData: Record<string, any> | null | undefined; // Allow null/undefined for safety\n}\n\nexport function ConfirmationModal({\n  isOpen,\n  onClose,\n  // onConfirm,\n  title,\n  message,\n  confirmText = 'Confirm',\n  cancelText = 'Cancel',\n  confirmButtonClass = 'bg-red-600 hover:bg-red-700', // Default to red for destructive actions\n  actionData,\n  navigation, // Received prop\n  intent,\n  formData,\n}: ConfirmationModalProps) {\n\n  // *** ADD LOGGING HERE ***\n  // console.log(\"[ConfirmationModal] Received navigation prop:\", navigation);\n  // console.log(\"[ConfirmationModal] Received actionData prop:\", actionData);\n  // console.log(\"[ConfirmationModal] Received formData prop:\", formData); // Log formData\n\n\n  const [formError, setFormError] = useState<string | null>(null);\n\n  // Determine if this specific confirmation action is submitting\n  // Add optional chaining to safely access navigation.state\n  const isSubmitting = navigation?.state === 'submitting' &&\n                       navigation?.formData?.get('intent') === intent &&\n                       navigation?.formData?.get('userId') === formData?.userId; // Check relevant ID if applicable\n\n   // Handle errors from action data specifically for this intent/data\n   useEffect(() => {\n    // Check if the actionData corresponds to this modal's action\n    // Also check if formData exists before accessing its properties\n    const isRelevantAction = actionData?.intent === intent &&\n                             formData && // Ensure formData is not null/undefined\n                             actionData?.formData?.userId === formData?.userId; // Adjust check as needed\n\n    if (isRelevantAction && !actionData?.success && actionData?.error) {\n      setFormError(actionData.error);\n    } else if (isRelevantAction && actionData?.success) {\n      setFormError(null); // Clear error on success\n      // Parent component handles closing the modal\n    }\n  }, [actionData, intent, formData]);\n\n   // Clear error when modal closes or opens for a new action\n  useEffect(() => {\n    if (!isOpen) {\n      setFormError(null);\n    }\n  }, [isOpen]);\n\n\n  return (\n    // Use `as=\"div\"` instead of `as={React.Fragment}` for the main Transition\n    <Transition appear show={isOpen} as=\"div\">\n      <Dialog as=\"div\" className=\"relative z-20\" onClose={onClose}> {/* Increased z-index */}\n        {/* Overlay */}\n        {/* Use `as=\"div\"` for Transition.Child */}\n        <Transition.Child\n          as=\"div\" // Changed from React.Fragment\n          className=\"fixed inset-0 bg-black/30\" // Apply styles directly here\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        />\n          {/* The previous child div is no longer needed as Transition.Child is now the div */}\n          {/* <div className=\"fixed inset-0 bg-black bg-opacity-30\" /> */}\n\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            {/* Use `as=\"div\"` for Transition.Child */}\n            <Transition.Child\n              as=\"div\" // Changed from React.Fragment\n              className=\"w-full max-w-md\" // Apply layout constraints here\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              {/* Dialog.Panel remains the semantic content container */}\n              <Dialog.Panel className=\"w-full transform overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white\">\n                  {title}\n                </Dialog.Title>\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {message}\n                  </p>\n                </div>\n\n                 {formError && (\n                   <div className=\"mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded dark:bg-red-900 dark:border-red-700 dark:text-red-200 text-sm\">\n                     {formError}\n                   </div>\n                 )}\n\n                {/* Use Remix Form for the confirmation action */}\n                <Form method=\"post\" action=\"/market\" className=\"mt-4\"> {/* Changed action to /market */}\n                  {/* Hidden field for intent */}\n                  <input type=\"hidden\" name=\"intent\" value={intent} />\n                  {/* Hidden fields for formData - Add safeguard for null/undefined formData */}\n                  {Object.entries(formData || {}).map(([key, value]) => (\n                    <input key={key} type=\"hidden\" name={key} value={value ?? ''} />\n                  ))}\n\n                  <div className=\"mt-4 flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\n                      onClick={onClose}\n                      disabled={isSubmitting}\n                    >\n                      {cancelText}\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className={cn(\n                        \"inline-flex justify-center rounded-md border border-transparent px-4 py-2 text-sm font-medium text-white focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:opacity-50\",\n                        confirmButtonClass // Apply dynamic class\n                      )}\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? 'Processing...' : confirmText}\n                    </button>\n                  </div>\n                </Form>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n", "// app/lib/supabase-admin.ts\nimport { createClient } from '@supabase/supabase-js';\n\nconsole.log('[supabase-admin] Initializing Supabase admin client module...');\n\nconst supabaseUrl = process.env.SUPABASE_URL;\nconst serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\n// Enhanced logging for diagnostics\nconsole.log(`[supabase-admin] Environment SUPABASE_URL check: ${supabaseUrl ? `SET (starts with: ${supabaseUrl.substring(0, Math.min(30, supabaseUrl.length))}...)` : 'NOT SET'}`);\nconsole.log(`[supabase-admin] Environment SUPABASE_SERVICE_ROLE_KEY check: ${serviceRoleKey ? 'SET (sensitive, not logged)' : 'NOT SET'}`);\n\nif (!supabaseUrl || !serviceRoleKey) {\n  const errorMessage = \"[supabase-admin] CRITICAL ERROR: SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY environment variables are missing or empty. These are required for admin-level Supabase operations. Please check your .env file and server environment configuration.\";\n  console.error(errorMessage);\n  // Throw an error to prevent the application from attempting to use an uninitialized client.\n  // This will make the startup failure more apparent if env vars are missing.\n  throw new Error(errorMessage);\n}\n\nlet supabaseAdminClientInstance;\n\ntry {\n  console.log('[supabase-admin] Attempting to create Supabase admin client instance...');\n  supabaseAdminClientInstance = createClient(supabaseUrl, serviceRoleKey, {\n    auth: {\n      // For server-side clients using a service role key, it's good practice:\n      autoRefreshToken: false, // No need to refresh a service key\n      persistSession: false,   // No session to persist\n      detectSessionInUrl: false // Not applicable for server-side\n    }\n  });\n  console.log('[supabase-admin] Supabase admin client instance created.');\n\n  // Verify that the created client looks like a Supabase client\n  if (!supabaseAdminClientInstance || typeof supabaseAdminClientInstance.from !== 'function') {\n    const clientVerificationError = '[supabase-admin] CRITICAL ERROR: Supabase admin client instance was created, but it does not appear to be a valid Supabase client (e.g., \".from\" method is missing).';\n    console.error(clientVerificationError);\n    throw new Error(clientVerificationError);\n  }\n  console.log('[supabase-admin] Supabase admin client instance verified successfully (basic check).');\n\n} catch (error: any) {\n  console.error('[supabase-admin] CRITICAL ERROR: Failed to create or verify the Supabase admin client instance.', error.message);\n  // Re-throw the error to ensure the application is aware of this critical failure.\n  throw error;\n}\n\n// Final check before exporting\nif (!supabaseAdminClientInstance) {\n    const finalCheckError = '[supabase-admin] CRITICAL ERROR: supabaseAdminClientInstance is unexpectedly null or undefined before export. This should not happen if previous checks passed.';\n    console.error(finalCheckError);\n    throw new Error(finalCheckError);\n}\n\n// Export the initialized client\n// The original code used `export default supabaseAdmin;`\n// We'll stick to that pattern.\nconst supabaseAdmin = supabaseAdminClientInstance;\nexport default supabaseAdmin;\n", "import type { ActionFunctionArgs, LoaderFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData, useActionData, useNavigation } from \"@remix-run/react\"; // Import useNavigation\nimport { SuperAdminDashboard } from \"~/components/dashboard/SuperAdminDashboard\";\nimport { useStore } from \"~/store/store\";\nimport { useEffect } from \"react\";\nimport supabaseAdmin from \"~/lib/supabase-admin\";\nimport type { User, Group, Transaction } from \"~/types/admin\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Life Economy - Admin\" },\n    { name: \"description\", content: \"Super Admin exclusive area for critical system operations.\" },\n  ];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  let users: User[] = [];\n  let groups: Group[] = [];\n  let transactions: Transaction[] = [];\n\n  const { data: usersData, error: usersError } = await supabaseAdmin\n    .from('profiles')\n    .select('id, email, full_name, balance, role, created_at, group_id, is_suspended');\n  if (usersError) {\n    console.error(\"Error fetching users:\", usersError);\n  } else {\n    users = usersData as User[];\n  }\n\n  const { data: groupsData, error: groupsError } = await supabaseAdmin\n    .from('groups')\n    .select('id, name, description, created_at');\n  if (groupsError) {\n    console.error(\"Error fetching groups:\", groupsError);\n  } else {\n    groups = groupsData as Group[];\n  }\n\n  const { data: transactionsData, error: transactionsError } = await supabaseAdmin\n    .from('transactions')\n    .select('*');\n  if (transactionsError) {\n    console.error(\"Error fetching transactions:\", transactionsError);\n  } else {\n    transactions = transactionsData as Transaction[];\n  }\n\n  return json({\n    users,\n    groups,\n    transactions,\n  });\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const intent = formData.get(\"_intent\");\n\n  switch (intent) {\n    case \"suspend-user\": {\n      const userId = formData.get(\"userId\") as string;\n      const { error } = await supabaseAdmin\n        .from('profiles')\n        .update({ is_suspended: true })\n        .eq('id', userId);\n\n      if (error) {\n        console.error(\"Error suspending user:\", error);\n        return json({ success: false, message: \"Failed to suspend user.\", intent: \"suspend-user\" }, { status: 500 });\n      }\n      return json({ success: true, message: \"User suspended successfully.\", intent: \"suspend-user\" });\n    }\n    case \"restore-user\": {\n      const userId = formData.get(\"userId\") as string;\n      const { error } = await supabaseAdmin\n        .from('profiles')\n        .update({ is_suspended: false })\n        .eq('id', userId);\n\n      if (error) {\n        console.error(\"Error restoring user:\", error);\n        return json({ success: false, message: \"Failed to restore user.\", intent: \"restore-user\" }, { status: 500 });\n      }\n      return json({ success: true, message: \"User restored successfully.\", intent: \"restore-user\" });\n    }\n    case \"change-user-role\": {\n      const userId = formData.get(\"userId\") as string;\n      const newRole = formData.get(\"newRole\") as string;\n      const { error } = await supabaseAdmin\n        .from('profiles')\n        .update({ role: newRole })\n        .eq('id', userId);\n\n      if (error) {\n        console.error(\"Error changing user role:\", error);\n        return json({ success: false, message: \"Failed to change user role.\", intent: \"change-user-role\" }, { status: 500 });\n      }\n      return json({ success: true, message: `User role changed to ${newRole} successfully.`, intent: \"change-user-role\" });\n    }\n    case \"delete-user\": {\n      const userId = formData.get(\"userId\") as string;\n      const { error } = await supabaseAdmin\n        .from('profiles')\n        .delete()\n        .eq('id', userId);\n\n      if (error) {\n        console.error(\"Error deleting user:\", error);\n        return json({ success: false, message: \"Failed to delete user.\", intent: \"delete-user\" }, { status: 500 });\n      }\n      return json({ success: true, message: \"User deleted successfully.\", intent: \"delete-user\" });\n    }\n    case \"create-user\": {\n      const email = formData.get(\"email\") as string;\n      const fullName = formData.get(\"fullName\") as string;\n      const role = formData.get(\"role\") as string;\n      const groupId = formData.get(\"groupId\") as string;\n      const password = formData.get(\"password\") as string;\n\n      // Create user in Supabase Auth\n      const { data: authData, error: authError } = await supabaseAdmin.auth.admin.createUser({\n        email,\n        password,\n        email_confirm: false, // Disable email confirmation\n      });\n\n      if (authError) {\n        console.error(\"Error creating auth user:\", authError);\n        return json({ success: false, message: authError.message, intent: \"create-user\" }, { status: 400 });\n      }\n\n      // Create profile entry\n      const { error: profileError } = await supabaseAdmin\n        .from('profiles')\n        .insert({\n          id: authData.user?.id,\n          email,\n          full_name: fullName,\n          role,\n          group_id: groupId === '' ? null : groupId, // Handle empty group_id\n          balance: 0, // Default balance\n          is_suspended: false, // Default status\n        });\n\n      if (profileError) {\n        console.error(\"Error creating user profile:\", profileError);\n        // Optionally, delete the auth user if profile creation fails\n        await supabaseAdmin.auth.admin.deleteUser(authData.user?.id as string);\n        return json({ success: false, message: profileError.message, intent: \"create-user\" }, { status: 500 });\n      }\n\n      return json({ success: true, message: \"User created successfully.\", intent: \"create-user\" });\n    }\n    case \"update-user\": {\n      const userId = formData.get(\"userId\") as string;\n      const fullName = formData.get(\"fullName\") as string;\n      const role = formData.get(\"role\") as string;\n      const groupId = formData.get(\"groupId\") as string;\n      const balance = parseFloat(formData.get(\"balance\") as string);\n\n      const { error } = await supabaseAdmin\n        .from('profiles')\n        .update({\n          full_name: fullName,\n          role,\n          group_id: groupId === '' ? null : groupId,\n          balance,\n        })\n        .eq('id', userId);\n\n      if (error) {\n        console.error(\"Error updating user:\", error);\n        return json({ success: false, message: \"Failed to update user.\", intent: \"update-user\" }, { status: 500 });\n      }\n      return json({ success: true, message: \"User updated successfully.\", intent: \"update-user\" });\n    }\n    case \"change-password\": {\n      const userId = formData.get(\"userId\") as string;\n      const newPassword = formData.get(\"newPassword\") as string;\n\n      const { error } = await supabaseAdmin.auth.admin.updateUserById(userId, {\n        password: newPassword,\n      });\n\n      if (error) {\n        console.error(\"Error changing password:\", error);\n        return json({ success: false, message: error.message, intent: \"change-password\" }, { status: 500 });\n      }\n      return json({ success: true, message: \"Password changed successfully.\", intent: \"change-password\" });\n    }\n    case \"create-group\": {\n      const name = formData.get(\"name\") as string;\n      const description = formData.get(\"description\") as string;\n\n      const { error } = await supabaseAdmin\n        .from('groups')\n        .insert({ name, description });\n\n      if (error) {\n        console.error(\"Error creating group:\", error);\n        return json({ success: false, message: \"Failed to create group.\", intent: \"create-group\" }, { status: 500 });\n      }\n      return json({ success: true, message: \"Group created successfully.\", intent: \"create-group\" });\n    }\n    case \"update-group\": {\n      const groupId = formData.get(\"groupId\") as string;\n      const name = formData.get(\"name\") as string;\n      const description = formData.get(\"description\") as string;\n\n      const { error } = await supabaseAdmin\n        .from('groups')\n        .update({ name, description })\n        .eq('id', groupId);\n\n      if (error) {\n        console.error(\"Error updating group:\", error);\n        return json({ success: false, message: \"Failed to update group.\", intent: \"update-group\" }, { status: 500 });\n      }\n      return json({ success: true, message: \"Group updated successfully.\", intent: \"update-group\" });\n    }\n    case \"delete-group\": {\n      const groupId = formData.get(\"groupId\") as string;\n      const { error } = await supabaseAdmin\n        .from('groups')\n        .delete()\n        .eq('id', groupId);\n\n      if (error) {\n        console.error(\"Error deleting group:\", error);\n        return json({ success: false, message: \"Failed to delete group.\", intent: \"delete-group\" }, { status: 500 });\n      }\n      return json({ success: true, message: \"Group deleted successfully.\", intent: \"delete-group\" });\n    }\n    default:\n      return json({ success: false, message: \"Invalid intent.\", intent: \"unknown\" }, { status: 400 });\n  }\n}\n\nexport default function AdminPage() {\n  const { users, groups, transactions } = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation(); // Get navigation object\n\n  useEffect(() => {\n    const storeState = useStore.getState();\n    if (storeState && typeof storeState.setUsers === 'function' && typeof storeState.setGroups === 'function' && typeof storeState.setTransactions === 'function') {\n      if (users) {\n        storeState.setUsers(users);\n      }\n      if (groups) {\n        storeState.setGroups(groups);\n      }\n      if (transactions) {\n        storeState.setTransactions(transactions);\n      }\n    } else {\n      console.error(\"Zustand store setters not available.\");\n    }\n  }, [users, groups, transactions]);\n\n  useEffect(() => {\n    if (actionData?.success) {\n      console.log(actionData.message);\n    } else if (actionData?.message) {\n      console.error(actionData.message);\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"container mx-auto p-4 md:p-6\">\n      <h1 className=\"text-2xl font-semibold mb-4\">Admin Console</h1>\n      {/* Pass actionData and navigation to SuperAdminDashboard */}\n      <SuperAdminDashboard\n        users={users}\n        groups={groups}\n        transactions={transactions}\n        actionData={actionData}\n        navigation={navigation}\n      />\n    </div>\n  );\n}\n", "import React, { useState, useEffect } from 'react';\nimport { Tab } from '@headlessui/react';\nimport { UsersTabContent } from './UsersTabContent';\nimport { MasterTabContent } from './MasterTabContent';\nimport type { User, Group, Transaction } from '~/types/admin';\nimport type { Navigation } from '@remix-run/react';\nimport { UsersRoundIcon, SettingsIcon } from 'lucide-react';\n\ninterface AdminTabsProps {\n  users: User[];\n  groups: Group[];\n  transactions: Transaction[];\n  actionData: any; // The action data from the admin route\n  navigation: Navigation; // The navigation object from Remix\n}\n\nexport function AdminTabs({ users, groups, transactions, actionData, navigation }: AdminTabsProps) {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  // Define the tabs with icons\n  const tabs = [\n    {\n      name: 'Users',\n      icon: <UsersRoundIcon className=\"h-5 w-5 mr-2\" />,\n      component: <UsersTabContent users={users} groups={groups} navigation={navigation} actionData={actionData} />\n    },\n    {\n      name: 'Master',\n      icon: <SettingsIcon className=\"h-5 w-5 mr-2\" />,\n      component: <MasterTabContent groups={groups} users={users} />\n    },\n  ];\n\n  return (\n    <div className=\"w-full px-2 py-4 sm:px-0\">\n      <Tab.Group selectedIndex={selectedIndex} onChange={setSelectedIndex}>\n        <Tab.List className=\"flex space-x-1 rounded-xl bg-gray-100 p-1 dark:bg-gray-800\">\n          {tabs.map((tab) => (\n            <Tab\n              key={tab.name}\n              className={({ selected }) =>\n                `w-full flex items-center justify-center rounded-lg py-2.5 text-sm font-medium leading-5\n                ring-blue-500 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2\n                ${selected\n                  ? 'bg-white text-blue-700 shadow dark:bg-gray-700 dark:text-white'\n                  : 'text-gray-600 hover:bg-white/[0.12] hover:text-blue-700 dark:text-gray-300 dark:hover:bg-gray-600 dark:hover:text-white'\n                }`\n              }\n            >\n              {tab.icon}\n              {tab.name}\n            </Tab>\n          ))}\n        </Tab.List>\n        <Tab.Panels className=\"mt-2\">\n          {tabs.map((tab, idx) => (\n            <Tab.Panel\n              key={idx}\n              className={`rounded-xl bg-white p-3 ring-white/60 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2 dark:bg-gray-900`}\n            >\n              {tab.component}\n            </Tab.Panel>\n          ))}\n        </Tab.Panels>\n      </Tab.Group>\n    </div>\n  );\n}\n", "import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { useNavigation, type Navigation } from '@remix-run/react'; // Import useNavigation\nimport { UsersTable } from './UsersTable';\nimport { AddUserModal } from './AddUserModal';\nimport { BulkUploadModal } from './BulkUploadModal'; // Keep for now, but needs Remix integration\nimport { ConfirmationModal } from './ConfirmationModal';\nimport { UserProfileView } from './UserProfileView';\nimport { EditUserModal } from './EditUserModal';\nimport { ChangePasswordModal } from './ChangePasswordModal';\n// Removed useStore import\nimport type { User, Group, UserRole, UserStatus, BulkUploadResult } from '~/types/admin';\n\n// --- Icons --- (Keep existing icons)\nfunction PlusIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"12\" x2=\"12\" y1=\"5\" y2=\"19\"/><line x1=\"5\" x2=\"19\" y1=\"12\" y2=\"12\"/></svg>; }\nfunction UploadIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/><polyline points=\"17 8 12 3 7 8\"/><line x1=\"12\" x2=\"12\" y1=\"3\" y2=\"15\"/></svg>; }\nfunction SearchIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"/><path d=\"m21 21-4.3-4.3\"/></svg>; }\n\ninterface UsersTabContentProps {\n  users: User[];\n  groups: Group[];\n  navigation: Navigation; // Use Remix's navigation state\n  actionData: any; // Action data from useActionData\n}\n\nexport function UsersTabContent({ users, groups, navigation, actionData }: UsersTabContentProps) {\n  // Removed useStore() call\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterGroup, setFilterGroup] = useState<string>(''); // Group ID\n  const [filterRole, setFilterRole] = useState<UserRole | ''>('');\n  const [filterStatus, setFilterStatus] = useState<UserStatus | ''>('');\n\n  // Modal States\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isBulkModalOpen, setIsBulkModalOpen] = useState(false); // Bulk upload needs separate handling\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isSuspendModalOpen, setIsSuspendModalOpen] = useState(false);\n  const [isRestoreModalOpen, setIsRestoreModalOpen] = useState(false);\n  const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\n  const [isProfileViewOpen, setIsProfileViewOpen] = useState(false);\n\n  // State for selected user for actions\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  // Close modals on successful actions (check actionData)\n  useEffect(() => {\n    if (actionData?.success) {\n      // Close relevant modals based on intent\n      const intent = actionData.intent;\n      if (intent === 'create-user') setIsAddModalOpen(false);\n      if (intent === 'update-user') setIsEditModalOpen(false);\n      if (intent === 'delete-user') setIsDeleteModalOpen(false);\n      if (intent === 'suspend-user') setIsSuspendModalOpen(false);\n      if (intent === 'restore-user') setIsRestoreModalOpen(false);\n      if (intent === 'change-user-password') setIsPasswordModalOpen(false);\n      setSelectedUser(null); // Clear selected user after successful action\n    }\n    // Handle potential errors from actionData if needed (e.g., keep modal open and show error)\n  }, [actionData]);\n\n\n  // Memoized filtered users\n  const filteredUsers = useMemo(() => {\n    // Ensure users is always an array\n    const currentUsers = Array.isArray(users) ? users : [];\n    return currentUsers.filter(user => {\n      const searchMatch = searchTerm === '' ||\n        user.fullName?.toLowerCase().includes(searchTerm.toLowerCase()) || // Add null checks\n        user.email?.toLowerCase().includes(searchTerm.toLowerCase());\n      const groupMatch = filterGroup === '' || user.groupId === filterGroup;\n      const roleMatch = filterRole === '' || user.role === filterRole;\n      // Use isSuspended for filtering status\n      const statusMatch = filterStatus === '' ||\n        (filterStatus === 'Active' && !user.isSuspended) ||\n        (filterStatus === 'Suspended' && user.isSuspended);\n      return searchMatch && groupMatch && roleMatch && statusMatch;\n    });\n  }, [users, searchTerm, filterGroup, filterRole, filterStatus]);\n\n  // --- Action Handlers (now just open modals) ---\n  const handleAddUserClick = useCallback(() => setIsAddModalOpen(true), []);\n  const handleBulkUploadClick = useCallback(() => setIsBulkModalOpen(true), []); // Keep for now\n\n  const handleEditUser = useCallback((userToEdit: User) => {\n    setSelectedUser(userToEdit);\n    setIsEditModalOpen(true);\n  }, []);\n\n  const handleDeleteUser = useCallback((userToDelete: User) => {\n    setSelectedUser(userToDelete);\n    setIsDeleteModalOpen(true);\n  }, []);\n\n  const handleSuspendUser = useCallback((userToSuspend: User) => {\n    setSelectedUser(userToSuspend);\n    setIsSuspendModalOpen(true);\n  }, []);\n\n  const handleRestoreUser = useCallback((userToRestore: User) => {\n    setSelectedUser(userToRestore);\n    setIsRestoreModalOpen(true);\n  }, []);\n\n  const handleChangePassword = useCallback((userToChangePass: User) => {\n    setSelectedUser(userToChangePass);\n    setIsPasswordModalOpen(true);\n  }, []);\n\n  const handleViewProfile = useCallback((userToView: User) => {\n    setSelectedUser(userToView);\n    setIsProfileViewOpen(true);\n  }, []);\n\n  // --- Bulk Upload Handler (Needs Refactoring for Remix) ---\n   const handleBulkUpload = useCallback((newUsers: Omit<User, 'id' | 'groupName' | 'balance' | 'createdAt'>[]): BulkUploadResult => {\n    // TODO: Refactor this to submit a form to a dedicated Remix action\n    // or process client-side and submit multiple 'create-user' actions (less ideal).\n    console.warn(\"Bulk upload needs refactoring for Remix actions.\");\n    let successCount = 0;\n    const errors: { row: number; message: string }[] = [];\n    // Simulate processing for now\n    newUsers.forEach((_, index) => {\n       // errors.push({ row: index + 2, message: `Remix action needed.` });\n    });\n    return { successCount, errors };\n  }, []);\n\n\n  return (\n    <div className=\"p-4 border rounded-b-md dark:border-gray-700 bg-white dark:bg-gray-900\">\n      {/* Header Bar */}\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-4 gap-3\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">User Management</h2>\n        <div className=\"flex gap-2 flex-wrap\">\n          <button\n            onClick={handleAddUserClick} // Use handler\n            className=\"inline-flex items-center gap-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm\"\n          >\n            <PlusIcon className=\"h-4 w-4\" />\n            Add New User\n          </button>\n          <button\n            onClick={handleBulkUploadClick} // Use handler\n            className=\"inline-flex items-center gap-1 px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm\"\n          >\n            <UploadIcon className=\"h-4 w-4\" />\n            Bulk Upload Users\n          </button>\n        </div>\n      </div>\n\n      {/* Search and Filters */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-md border dark:border-gray-700\">\n        {/* Search */}\n        <div className=\"relative\">\n           <label htmlFor=\"search-users\" className=\"sr-only\">Search by name or email</label>\n           <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n             <SearchIcon className=\"h-5 w-5 text-gray-400\" />\n           </div>\n           <input\n            type=\"text\"\n            id=\"search-users\"\n            placeholder=\"Search by name or email...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n          />\n        </div>\n        {/* Filter by Group */}\n        <div>\n          <label htmlFor=\"filter-group\" className=\"sr-only\">Filter by Group</label>\n          <select\n            id=\"filter-group\"\n            value={filterGroup}\n            onChange={(e) => setFilterGroup(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"\">All Groups</option>\n            {groups.map(group => (\n              <option key={group.id} value={group.id}>{group.name}</option>\n            ))}\n          </select>\n        </div>\n        {/* Filter by Role */}\n        <div>\n           <label htmlFor=\"filter-role\" className=\"sr-only\">Filter by Role</label>\n           <select\n            id=\"filter-role\"\n            value={filterRole}\n            onChange={(e) => setFilterRole(e.target.value as UserRole | '')}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"\">All Roles</option>\n            <option value=\"Super Admin\">Super Admin</option>\n            <option value=\"Admin\">Admin</option>\n            <option value=\"User\">User</option>\n          </select>\n        </div>\n        {/* Filter by Status */}\n        <div>\n           <label htmlFor=\"filter-status\" className=\"sr-only\">Filter by Status</label>\n           <select\n            id=\"filter-status\"\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value as UserStatus | '')}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"\">All Statuses</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Suspended\">Suspended</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Users Table */}\n      <UsersTable\n        users={filteredUsers}\n        onViewProfile={handleViewProfile}\n        onEdit={handleEditUser}\n        onDelete={handleDeleteUser}\n        onSuspend={handleSuspendUser}\n        onRestore={handleRestoreUser}\n        onChangePassword={handleChangePassword}\n      />\n\n      {/* Modals - Pass groups, actionData, navigation */}\n      <AddUserModal\n        isOpen={isAddModalOpen}\n        onClose={() => setIsAddModalOpen(false)}\n        groups={groups}\n        actionData={actionData} // Pass action data for error display\n        navigation={navigation} // Pass navigation for pending UI\n        // onAddUser={handleAddUser} // Remove direct add handler\n      />\n      <BulkUploadModal\n        isOpen={isBulkModalOpen}\n        onClose={() => setIsBulkModalOpen(false)}\n        onBulkUpload={handleBulkUpload} // Keep for now, needs rework\n      />\n       <EditUserModal\n        isOpen={isEditModalOpen}\n        user={selectedUser}\n        groups={groups}\n        onClose={() => { setIsEditModalOpen(false); setSelectedUser(null); }}\n        actionData={actionData}\n        navigation={navigation}\n        // onUpdateUser={handleUpdateUser} // Remove direct update handler\n      />\n       <ConfirmationModal // Confirmation modals now trigger form submission\n        isOpen={isDeleteModalOpen}\n        onClose={() => { setIsDeleteModalOpen(false); setSelectedUser(null); }}\n        // onConfirm={confirmDeleteUser} // Remove direct confirm handler\n        title=\"Confirm Deletion\"\n        message={\n          <span>Are you sure you want to delete user <strong>{selectedUser?.fullName}</strong>? This action cannot be undone.</span>\n        }\n        confirmText=\"Delete\"\n        confirmButtonClass=\"bg-red-600 hover:bg-red-700\"\n        actionData={actionData}\n        navigation={navigation}\n        intent=\"delete-user\" // Add intent\n        formData={{ userId: selectedUser?.id ?? '' }} // Add data for the form\n      />\n       <ConfirmationModal\n        isOpen={isSuspendModalOpen}\n        onClose={() => { setIsSuspendModalOpen(false); setSelectedUser(null); }}\n        // onConfirm={confirmSuspendUser} // Remove direct confirm handler\n        title=\"Confirm Suspension\"\n        message={\n          <span>Are you sure you want to suspend user <strong>{selectedUser?.fullName}</strong>? They will lose access until restored.</span>\n        }\n        confirmText=\"Suspend\"\n        confirmButtonClass=\"bg-yellow-600 hover:bg-yellow-700\"\n        actionData={actionData}\n        navigation={navigation}\n        intent=\"suspend-user\" // Add intent\n        formData={{ userId: selectedUser?.id ?? '' }} // Add data for the form\n      />\n       <ConfirmationModal\n        isOpen={isRestoreModalOpen}\n        onClose={() => { setIsRestoreModalOpen(false); setSelectedUser(null); }}\n        // onConfirm={confirmRestoreUser} // Remove direct confirm handler\n        title=\"Confirm Restoration\"\n        message={\n          <span>Are you sure you want to restore access for user <strong>{selectedUser?.fullName}</strong>?</span>\n        }\n        confirmText=\"Restore\"\n        confirmButtonClass=\"bg-green-600 hover:bg-green-700\"\n        actionData={actionData}\n        navigation={navigation}\n        intent=\"restore-user\" // Add intent\n        formData={{ userId: selectedUser?.id ?? '' }} // Add data for the form\n      />\n       <ChangePasswordModal\n        isOpen={isPasswordModalOpen}\n        user={selectedUser}\n        onClose={() => { setIsPasswordModalOpen(false); setSelectedUser(null); }}\n        actionData={actionData}\n        navigation={navigation}\n        // onChangePassword={confirmChangePassword} // Remove direct change handler\n      />\n       <UserProfileView\n        isOpen={isProfileViewOpen}\n        user={selectedUser}\n        onClose={() => { setIsProfileViewOpen(false); setSelectedUser(null); }}\n      />\n\n    </div>\n  );\n}\n", "import React from 'react';\nimport type { User, UserRole, UserStatus } from '~/types/admin';\nimport { cn } from '~/lib/utils';\n\n// --- Icons --- (Keep existing icons)\nfunction ViewIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>; }\nfunction EditIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\"/><path d=\"m15 5 4 4\"/></svg>; }\nfunction DeleteIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 6h18\"/><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"/><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"/><line x1=\"10\" x2=\"10\" y1=\"11\" y2=\"17\"/><line x1=\"14\" x2=\"14\" y1=\"11\" y2=\"17\"/></svg>; }\nfunction SuspendIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><line x1=\"10\" x2=\"10\" y1=\"15\" y2=\"9\"/><line x1=\"14\" x2=\"14\" y1=\"15\" y2=\"9\"/></svg>; }\nfunction RestoreIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><polygon points=\"10 8 16 12 10 16 10 8\"/></svg>; }\nfunction PasswordIcon(props: React.SVGProps<SVGSVGElement>) { /* ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M2 18v3c0 .6.4 1 1 1h4v-3h3v-3h2l1.4-1.4a6.5 6.5 0 1 0-4-4Z\"/><circle cx=\"16.5\" cy=\"7.5\" r=\".5\"/></svg>; }\n\n\ninterface UsersTableProps {\n  users: User[];\n  onViewProfile: (user: User) => void;\n  onEdit: (user: User) => void;\n  onDelete: (user: User) => void;\n  onSuspend: (user: User) => void;\n  onRestore: (user: User) => void;\n  onChangePassword: (user: User) => void;\n}\n\nexport function UsersTable({\n  users,\n  onViewProfile,\n  onEdit,\n  onDelete,\n  onSuspend,\n  onRestore,\n  onChangePassword,\n}: UsersTableProps) {\n\n  // Use isSuspended to determine status class\n  const getStatusClass = (isSuspended: boolean | undefined) => {\n    return isSuspended\n      ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\n      : 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n  };\n\n  const getRoleClass = (role: UserRole | undefined) => {\n     switch (role) {\n      case 'Super Admin': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      case 'Admin': return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'User': return 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200';\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200';\n    }\n  }\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n        <thead className=\"bg-gray-50 dark:bg-gray-800\">\n          <tr>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Full Name</th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Email</th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Group</th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Role</th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Status</th>\n            <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Actions</th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700\">\n          {users.length === 0 ? (\n            <tr>\n              <td colSpan={6} className=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\n                No users found matching your criteria.\n              </td>\n            </tr>\n          ) : (\n            users.map((user) => (\n              <tr key={user.id}>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">{user.fullName}</td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{user.email}</td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{user.groupName ?? 'N/A'}</td> {/* Display group name */}\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                   <span className={cn(\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\", getRoleClass(user.role))}>\n                    {user.role}\n                  </span>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                  <span className={cn(\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\", getStatusClass(user.isSuspended))}>\n                    {user.isSuspended ? 'Suspended' : 'Active'} {/* Display status based on isSuspended */}\n                  </span>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-1\">\n                  {/* Buttons now just trigger the modal open handlers passed as props */}\n                  <button onClick={() => onViewProfile(user)} className=\"text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-200 p-1\" title=\"View Profile\">\n                    <ViewIcon className=\"h-5 w-5\" />\n                  </button>\n                  <button onClick={() => onEdit(user)} className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-200 p-1\" title=\"Edit User\">\n                     <EditIcon className=\"h-5 w-5\" />\n                  </button>\n                   {/* Use isSuspended to decide which button to show */}\n                   {!user.isSuspended ? (\n                    <button onClick={() => onSuspend(user)} className=\"text-yellow-600 hover:text-yellow-900 dark:text-yellow-400 dark:hover:text-yellow-200 p-1\" title=\"Suspend User\">\n                      <SuspendIcon className=\"h-5 w-5\" />\n                    </button>\n                  ) : (\n                    <button onClick={() => onRestore(user)} className=\"text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-200 p-1\" title=\"Restore User\">\n                      <RestoreIcon className=\"h-5 w-5\" />\n                    </button>\n                  )}\n                   <button onClick={() => onChangePassword(user)} className=\"text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-200 p-1\" title=\"Change Password\">\n                     <PasswordIcon className=\"h-5 w-5\" />\n                  </button>\n                  <button onClick={() => onDelete(user)} className=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-200 p-1\" title=\"Delete User\">\n                    <DeleteIcon className=\"h-5 w-5\" />\n                  </button>\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n", "import React, { useState, useEffect } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Form, useNavigation, useActionData } from '@remix-run/react';\nimport type { Group, UserRole } from '~/types/admin';\n\ninterface AddUserModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  groups: Group[];\n  actionData: any; // From useActionData in parent\n  navigation: any; // From useNavigation in parent\n}\n\nexport function AddUserModal({ isOpen, onClose, groups, actionData, navigation }: AddUserModalProps) {\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState<UserRole>('User');\n  const [groupId, setGroupId] = useState<string>('');\n  const [formError, setFormError] = useState<string | null>(null);\n\n  const isSubmitting = navigation.state === 'submitting' && navigation.formData?.get('intent') === 'create-user';\n\n  // Clear form and error on close\n  useEffect(() => {\n    if (!isOpen) {\n      setEmail('');\n      setFullName('');\n      setPassword('');\n      setRole('User');\n      setGroupId('');\n      setFormError(null);\n    }\n  }, [isOpen]);\n\n  // Handle errors from action data\n  useEffect(() => {\n    if (actionData?.intent === 'create-user' && !actionData?.success && actionData?.error) {\n      setFormError(actionData.error);\n    } else if (actionData?.intent === 'create-user' && actionData?.success) {\n      setFormError(null); // Clear error on success\n      // Modal closing is handled by parent component via useEffect on actionData\n    }\n  }, [actionData]);\n\n\n  return (\n    <Transition appear show={isOpen} as={React.Fragment}>\n      <Dialog as=\"div\" className=\"relative z-10\" onClose={onClose}>\n        {/* Overlay */}\n        <Transition.Child\n          as={React.Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child\n              as={React.Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white\"\n                >\n                  Add New User\n                </Dialog.Title>\n\n                {/* Use Remix Form */}\n                <Form method=\"post\" action=\"/admin\" className=\"mt-4 space-y-4\">\n                   {/* Intent Hidden Field */}\n                   <input type=\"hidden\" name=\"intent\" value=\"create-user\" />\n\n                   {formError && (\n                     <div className=\"p-3 bg-red-100 border border-red-400 text-red-700 rounded dark:bg-red-900 dark:border-red-700 dark:text-red-200 text-sm\">\n                       {formError}\n                     </div>\n                   )}\n\n                  <div>\n                    <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Full Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"fullName\"\n                      id=\"fullName\"\n                      required\n                      value={fullName}\n                      onChange={(e) => setFullName(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Email Address</label>\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      required\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                  </div>\n                   <div>\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      required\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                     <p className=\"mt-1 text-xs text-yellow-600 dark:text-yellow-400\">Warning: Password will be stored insecurely in this example. Use hashing in production.</p>\n                  </div>\n                   <div>\n                    <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Role</label>\n                    <select\n                      name=\"role\"\n                      id=\"role\"\n                      required\n                      value={role}\n                      onChange={(e) => setRole(e.target.value as UserRole)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    >\n                      <option value=\"User\">User</option>\n                      <option value=\"Admin\">Admin</option>\n                      <option value=\"Super Admin\">Super Admin</option>\n                    </select>\n                  </div>\n                   <div>\n                    <label htmlFor=\"groupId\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Group (Optional)</label>\n                    <select\n                      name=\"groupId\"\n                      id=\"groupId\"\n                      value={groupId}\n                      onChange={(e) => setGroupId(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    >\n                      <option value=\"\">-- No Group --</option>\n                      {groups.map(group => (\n                        <option key={group.id} value={group.id}>{group.name}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div className=\"mt-6 flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-gray-200 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-300 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 dark:bg-gray-600 dark:text-gray-100 dark:hover:bg-gray-500\"\n                      onClick={onClose}\n                      disabled={isSubmitting}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:opacity-50\"\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? 'Adding...' : 'Add User'}\n                    </button>\n                  </div>\n                </Form>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n", "import React, { useState, useCallback } from 'react';\nimport * as XLSX from 'xlsx';\nimport type { User, Group, UserRole, UserStatus, BulkUploadResult } from '~/types/admin';\nimport { useStore } from '~/store/store';\n\ninterface BulkUploadModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onBulkUpload: (users: Omit<User, 'id' | 'groupName' | 'balance' | 'createdAt'>[]) => BulkUploadResult; // Simulates backend processing\n}\n\n// --- Icons ---\nfunction DownloadIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/><polyline points=\"7 10 12 15 17 10\"/><line x1=\"12\" x2=\"12\" y1=\"15\" y2=\"3\"/></svg>\n  );\n}\nfunction UploadIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/><polyline points=\"17 8 12 3 7 8\"/><line x1=\"12\" x2=\"12\" y1=\"3\" y2=\"15\"/></svg>\n  );\n}\nfunction AlertCircleIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><line x1=\"12\" x2=\"12\" y1=\"8\" y2=\"12\"/><line x1=\"12\" x2=\"12.01\" y1=\"16\" y2=\"16\"/></svg>\n  );\n}\nfunction CheckCircleIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"/><path d=\"m9 11 3 3L22 4\"/></svg>\n  );\n}\n\n\n// Expected columns in the template/upload\nconst expectedColumns = [\"FullName\", \"Email\", \"GroupName\", \"Role\", \"Status\"];\nconst validRoles: UserRole[] = [\"Super Admin\", \"Admin\", \"User\"];\nconst validStatuses: UserStatus[] = [\"Active\", \"Suspended\"];\n\nexport function BulkUploadModal({ isOpen, onClose, onBulkUpload }: BulkUploadModalProps) {\n  const { groups } = useStore();\n  const [file, setFile] = useState<File | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [uploadResult, setUploadResult] = useState<BulkUploadResult | null>(null);\n  const [fileName, setFileName] = useState<string>('');\n  const [processingError, setProcessingError] = useState<string | null>(null);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      const selectedFile = event.target.files[0];\n      if (selectedFile.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || selectedFile.name.endsWith('.xlsx')) {\n        setFile(selectedFile);\n        setFileName(selectedFile.name);\n        setUploadResult(null); // Reset previous results\n        setProcessingError(null);\n      } else {\n        alert('Please upload a valid .xlsx file.');\n        event.target.value = ''; // Clear the input\n      }\n    }\n  };\n\n  const downloadTemplate = () => {\n    const ws = XLSX.utils.aoa_to_sheet([expectedColumns]);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Users Template\");\n    XLSX.writeFile(wb, \"LifeEconomy_User_Template.xlsx\");\n  };\n\n  const processUpload = useCallback(async () => {\n    if (!file) return;\n\n    setIsProcessing(true);\n    setUploadResult(null);\n    setProcessingError(null);\n\n    try {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const data = e.target?.result;\n          if (!data) throw new Error(\"Failed to read file data.\");\n\n          const workbook = XLSX.read(data, { type: 'array' });\n          const sheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[sheetName];\n          const jsonData = XLSX.utils.sheet_to_json<any>(worksheet, { header: 1 }); // Read as array of arrays\n\n          if (!jsonData || jsonData.length < 2) { // Header + at least one data row\n             throw new Error(\"File is empty or contains only headers.\");\n          }\n\n          const headers = jsonData[0] as string[];\n          const missingHeaders = expectedColumns.filter(h => !headers.includes(h));\n          if (missingHeaders.length > 0) {\n            throw new Error(`Missing required columns: ${missingHeaders.join(', ')}`);\n          }\n\n          const usersToUpload: Omit<User, 'id' | 'groupName' | 'balance' | 'createdAt'>[] = [];\n          const errors: { row: number; message: string }[] = [];\n          const groupMap = new Map(groups.map(g => [g.name.toLowerCase(), g.id])); // For quick lookup\n\n          for (let i = 1; i < jsonData.length; i++) {\n            const row = jsonData[i] as any[];\n            const rowData: { [key: string]: any } = {};\n            headers.forEach((header, index) => {\n              rowData[header] = row[index];\n            });\n\n            const rowNum = i + 1; // User-friendly row number (1-based index including header)\n            const fullName = rowData.FullName?.trim();\n            const email = rowData.Email?.trim();\n            const groupName = rowData.GroupName?.trim();\n            const role = rowData.Role?.trim() as UserRole;\n            const status = rowData.Status?.trim() as UserStatus;\n\n            // --- Validation ---\n            let rowHasError = false;\n            if (!fullName) { errors.push({ row: rowNum, message: \"FullName is required.\" }); rowHasError = true; }\n            if (!email) { errors.push({ row: rowNum, message: \"Email is required.\" }); rowHasError = true; }\n            else if (!/\\S+@\\S+\\.\\S+/.test(email)) { errors.push({ row: rowNum, message: \"Email format is invalid.\" }); rowHasError = true; }\n            // Add email uniqueness check against existing users if needed here\n            if (!groupName) { errors.push({ row: rowNum, message: \"GroupName is required.\" }); rowHasError = true; }\n            const groupId = groupMap.get(groupName?.toLowerCase());\n            if (groupName && !groupId) { errors.push({ row: rowNum, message: `Group '${groupName}' not found.` }); rowHasError = true; }\n            if (!role) { errors.push({ row: rowNum, message: \"Role is required.\" }); rowHasError = true; }\n            else if (!validRoles.includes(role)) { errors.push({ row: rowNum, message: `Invalid Role '${role}'. Valid roles: ${validRoles.join(', ')}` }); rowHasError = true; }\n            if (!status) { errors.push({ row: rowNum, message: \"Status is required.\" }); rowHasError = true; }\n            else if (!validStatuses.includes(status)) { errors.push({ row: rowNum, message: `Invalid Status '${status}'. Valid statuses: ${validStatuses.join(', ')}` }); rowHasError = true; }\n            // --- End Validation ---\n\n            if (!rowHasError && groupId) {\n              usersToUpload.push({ fullName, email, groupId, role, status });\n            }\n          }\n\n          if (errors.length > 0) {\n             // Only show validation errors, don't proceed with upload yet\n             setUploadResult({ successCount: 0, errors });\n          } else if (usersToUpload.length > 0) {\n            // Simulate backend processing\n            const result = onBulkUpload(usersToUpload);\n            setUploadResult(result);\n          } else {\n             // No valid users found, but no specific errors (e.g., empty data rows)\n             setProcessingError(\"No valid user data found in the file to upload.\");\n          }\n\n        } catch (err: any) {\n          console.error(\"Error processing XLSX file:\", err);\n          setProcessingError(`Error processing file: ${err.message || 'Unknown error'}`);\n          setUploadResult(null); // Clear any partial results\n        } finally {\n          setIsProcessing(false);\n        }\n      };\n      reader.onerror = (err) => {\n        console.error(\"FileReader error:\", err);\n        setProcessingError(\"Error reading the file.\");\n        setIsProcessing(false);\n      };\n      reader.readAsArrayBuffer(file);\n\n    } catch (error: any) {\n      console.error(\"Upload error:\", error);\n      setProcessingError(`An unexpected error occurred: ${error.message}`);\n      setIsProcessing(false);\n    }\n  }, [file, onBulkUpload]);\n\n\n  const handleClose = () => {\n    setFile(null);\n    setFileName('');\n    setIsProcessing(false);\n    setUploadResult(null);\n    setProcessingError(null);\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-lg\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">Bulk Upload Users</h2>\n\n        {/* Download Template */}\n        <div className=\"mb-4\">\n          <button\n            onClick={downloadTemplate}\n            className=\"inline-flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm\"\n          >\n            <DownloadIcon className=\"h-4 w-4\" />\n            Download .xlsx Template\n          </button>\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            Download the template, fill in user details, and upload the file below. Required columns: {expectedColumns.join(', ')}.\n          </p>\n        </div>\n\n        {/* Upload Area */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Upload .xlsx File</label>\n          <div className=\"flex items-center border border-gray-300 dark:border-gray-600 rounded-md\">\n             <label htmlFor=\"file-upload\" className=\"flex-grow px-3 py-2 text-sm text-gray-500 dark:text-gray-400 cursor-pointer truncate\">\n               {fileName || \"Choose file...\"}\n             </label>\n             <input\n                id=\"file-upload\"\n                type=\"file\"\n                accept=\".xlsx, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n                onChange={handleFileChange}\n                className=\"hidden\" // Hide default input, use label for styling\n              />\n             <button\n                onClick={() => document.getElementById('file-upload')?.click()}\n                className=\"px-4 py-2 bg-blue-500 text-white rounded-r-md hover:bg-blue-600 text-sm\"\n                disabled={isProcessing}\n              >\n                Browse\n              </button>\n          </div>\n\n        </div>\n\n         {/* Processing Indicator */}\n        {isProcessing && (\n          <div className=\"text-center my-4 text-blue-600 dark:text-blue-400\">\n            Processing... Please wait.\n          </div>\n        )}\n\n        {/* Error Display */}\n        {processingError && (\n          <div className=\"my-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded-md text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <AlertCircleIcon className=\"h-5 w-5 flex-shrink-0\"/>\n              <span>{processingError}</span>\n            </div>\n          </div>\n        )}\n\n\n        {/* Upload Results */}\n        {uploadResult && (\n          <div className=\"mt-4 space-y-3\">\n            <h3 className=\"text-md font-semibold text-gray-800 dark:text-gray-200\">Upload Summary</h3>\n            {uploadResult.successCount > 0 && (\n               <div className=\"p-3 bg-green-100 border border-green-400 text-green-700 rounded-md text-sm\">\n                 <div className=\"flex items-center gap-2\">\n                    <CheckCircleIcon className=\"h-5 w-5 flex-shrink-0\"/>\n                    <span>Successfully processed {uploadResult.successCount} users.</span>\n                 </div>\n               </div>\n            )}\n             {uploadResult.errors.length > 0 && (\n               <div className=\"p-3 bg-red-100 border border-red-400 text-red-700 rounded-md text-sm\">\n                 <div className=\"flex items-center gap-2 mb-2\">\n                    <AlertCircleIcon className=\"h-5 w-5 flex-shrink-0\"/>\n                    <span className=\"font-medium\">Found {uploadResult.errors.length} errors:</span>\n                 </div>\n                 <ul className=\"list-disc list-inside max-h-40 overflow-y-auto text-xs space-y-1\">\n                    {uploadResult.errors.map((err, index) => (\n                      <li key={index}>Row {err.row}: {err.message}</li>\n                    ))}\n                 </ul>\n               </div>\n            )}\n             {(uploadResult.successCount === 0 && uploadResult.errors.length === 0 && !processingError) && (\n                 <div className=\"p-3 bg-yellow-100 border border-yellow-400 text-yellow-700 rounded-md text-sm\">\n                    <div className=\"flex items-center gap-2\">\n                        <AlertCircleIcon className=\"h-5 w-5 flex-shrink-0\"/>\n                        <span>No users were processed. Check the file for valid data or errors.</span>\n                    </div>\n                 </div>\n             )}\n          </div>\n        )}\n\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-end gap-3 mt-6\">\n          <button\n            type=\"button\"\n            onClick={handleClose}\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500\"\n            disabled={isProcessing}\n          >\n            {uploadResult ? 'Close' : 'Cancel'}\n          </button>\n          <button\n            type=\"button\"\n            onClick={processUpload}\n            className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            disabled={!file || isProcessing || !!uploadResult} // Disable if no file, processing, or results shown\n          >\n             <UploadIcon className=\"h-4 w-4\" />\n            {isProcessing ? 'Processing...' : 'Upload & Validate'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "// Placeholder for the detailed user view component\n// This could be a modal, a drawer, or navigate to a new route like /admin/users/:userId\n\nimport React, { useMemo } from 'react';\nimport type { User } from '~/types/admin';\nimport { useStore } from '~/store/store';\n\ninterface UserProfileViewProps {\n  user: User | null;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function UserProfileView({ user, isOpen, onClose }: UserProfileViewProps) {\n  const { transactions } = useStore();\n  \n  // Filter transactions for this user (placeholder - add user ID to transactions later)\n  const userTransactions = useMemo(() => {\n    return transactions.slice(-5); // For now, just show last 5 transactions\n  }, [transactions]);\n\n  if (!isOpen || !user) return null;\n\n  // Basic Modal Structure - Replace with more detailed layout later\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-3xl max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">User Profile: {user.fullName}</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n          >\n            &times; {/* Close icon */}\n          </button>\n        </div>\n\n        {/* --- Placeholder Sections --- */}\n        <div className=\"space-y-6\">\n          {/* 1. Personal Info */}\n          <section className=\"p-4 border rounded dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-2\">Personal Info</h3>\n            <p><strong>Email:</strong> {user.email}</p>\n            <p><strong>Group:</strong> {user.groupName}</p>\n            <p><strong>Role:</strong> {user.role}</p>\n            <p><strong>Status:</strong> {user.status}</p>\n          </section>\n\n          {/* 2. ESSENCE Balance */}\n          <section className=\"p-4 border rounded dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-2\">ESSENCE Balance</h3>\n            <p className=\"text-2xl font-bold\">{user.balance ?? 0} <span className=\"text-sm font-normal\">ESSENCE</span></p>\n          </section>\n\n          {/* 3. Transaction History */}\n          <section className=\"p-4 border rounded dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-2\">Transaction History</h3>\n            <p className=\"text-gray-500 dark:text-gray-400\">(Placeholder: Table with Date, Type, Amount, Description, Search, Date Filter)</p>\n          </section>\n\n          {/* 4. Activity Log */}\n          <section className=\"p-4 border rounded dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-2\">Activity Log</h3>\n            <p className=\"text-gray-500 dark:text-gray-400\">(Placeholder: Table of user actions - login, updates, etc.)</p>\n          </section>\n\n          {/* 5. Rewards Summary */}\n           <section className=\"p-4 border rounded dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-2\">Rewards Summary</h3>\n            <p className=\"text-gray-500 dark:text-gray-400\">(Placeholder: Total rewards, list with reasons/dates)</p>\n          </section>\n\n          {/* 6. Expenses List */}\n           <section className=\"p-4 border rounded dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-2\">Expenses List</h3>\n            <p className=\"text-gray-500 dark:text-gray-400\">(Placeholder: Assigned expenses, amounts, frequency)</p>\n          </section>\n\n          {/* 7. Fines Record */}\n           <section className=\"p-4 border rounded dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-2\">Fines Record</h3>\n            <p className=\"text-gray-500 dark:text-gray-400\">(Placeholder: Fine history, issuer, amount, reasons)</p>\n          </section>\n\n           {/* 8. Activity List */}\n           <section className=\"p-4 border rounded dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-2\">Assigned Activities</h3>\n            <p className=\"text-gray-500 dark:text-gray-400\">(Placeholder: List of assigned activities, pay amount, frequency)</p>\n          </section>\n\n        </div>\n\n        <div className=\"mt-6 flex justify-end\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import React, { useState, useEffect } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Form, useNavigation, useActionData } from '@remix-run/react';\nimport type { User, Group, UserRole } from '~/types/admin';\n\ninterface EditUserModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  user: User | null;\n  groups: Group[];\n  actionData: any;\n  navigation: any;\n}\n\nexport function EditUserModal({ isOpen, onClose, user, groups, actionData, navigation }: EditUserModalProps) {\n  const [email, setEmail] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [role, setRole] = useState<UserRole>('User');\n  const [groupId, setGroupId] = useState<string>('');\n  const [formError, setFormError] = useState<string | null>(null);\n\n  const isSubmitting = navigation.state === 'submitting' && navigation.formData?.get('intent') === 'update-user' && navigation.formData?.get('userId') === user?.id;\n\n  // Populate form when user prop changes\n  useEffect(() => {\n    if (user) {\n      setEmail(user.email ?? '');\n      setFullName(user.fullName ?? '');\n      setRole(user.role ?? 'User');\n      setGroupId(user.groupId ?? '');\n      setFormError(null); // Clear previous errors when opening for a new user\n    } else {\n      // Clear form if user is null (e.g., modal closed)\n      setEmail('');\n      setFullName('');\n      setRole('User');\n      setGroupId('');\n      setFormError(null);\n    }\n  }, [user]);\n\n  // Handle errors from action data specifically for this user update\n   useEffect(() => {\n    if (actionData?.intent === 'update-user' && actionData?.formData?.userId === user?.id && !actionData?.success && actionData?.error) {\n      setFormError(actionData.error);\n    } else if (actionData?.intent === 'update-user' && actionData?.formData?.userId === user?.id && actionData?.success) {\n      setFormError(null); // Clear error on success\n      // Parent component handles closing the modal\n    }\n  }, [actionData, user]);\n\n\n  // Clear form and error on close explicitly\n  useEffect(() => {\n    if (!isOpen) {\n      setEmail('');\n      setFullName('');\n      setRole('User');\n      setGroupId('');\n      setFormError(null);\n    }\n  }, [isOpen]);\n\n\n  if (!user) return null; // Don't render if no user is selected\n\n  return (\n    <Transition appear show={isOpen} as={React.Fragment}>\n      <Dialog as=\"div\" className=\"relative z-10\" onClose={onClose}>\n        {/* Overlay */}\n        <Transition.Child as={React.Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n          <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child as={React.Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white\">\n                  Edit User: {user.fullName}\n                </Dialog.Title>\n\n                <Form method=\"post\" action=\"/admin\" className=\"mt-4 space-y-4\">\n                  <input type=\"hidden\" name=\"intent\" value=\"update-user\" />\n                  <input type=\"hidden\" name=\"userId\" value={user.id} />\n\n                   {formError && (\n                     <div className=\"p-3 bg-red-100 border border-red-400 text-red-700 rounded dark:bg-red-900 dark:border-red-700 dark:text-red-200 text-sm\">\n                       {formError}\n                     </div>\n                   )}\n\n                  <div>\n                    <label htmlFor={`edit-fullName-${user.id}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Full Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"fullName\"\n                      id={`edit-fullName-${user.id}`}\n                      required\n                      value={fullName}\n                      onChange={(e) => setFullName(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor={`edit-email-${user.id}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Email Address</label>\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      id={`edit-email-${user.id}`}\n                      required\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                  </div>\n                   <div>\n                    <label htmlFor={`edit-role-${user.id}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Role</label>\n                    <select\n                      name=\"role\"\n                      id={`edit-role-${user.id}`}\n                      required\n                      value={role}\n                      onChange={(e) => setRole(e.target.value as UserRole)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    >\n                      <option value=\"User\">User</option>\n                      <option value=\"Admin\">Admin</option>\n                      <option value=\"Super Admin\">Super Admin</option>\n                    </select>\n                  </div>\n                   <div>\n                    <label htmlFor={`edit-groupId-${user.id}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Group</label>\n                    <select\n                      name=\"groupId\"\n                      id={`edit-groupId-${user.id}`}\n                      value={groupId}\n                      onChange={(e) => setGroupId(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    >\n                      <option value=\"\">-- No Group --</option>\n                      {groups.map(group => (\n                        <option key={group.id} value={group.id}>{group.name}</option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div className=\"mt-6 flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-gray-200 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-300 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 dark:bg-gray-600 dark:text-gray-100 dark:hover:bg-gray-500\"\n                      onClick={onClose}\n                      disabled={isSubmitting}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:opacity-50\"\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? 'Saving...' : 'Save Changes'}\n                    </button>\n                  </div>\n                </Form>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n", "import React, { useState, useEffect } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Form, useNavigation, useActionData } from '@remix-run/react';\nimport type { User } from '~/types/admin';\n\ninterface ChangePasswordModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  user: User | null;\n  actionData: any;\n  navigation: any;\n}\n\nexport function ChangePasswordModal({ isOpen, onClose, user, actionData, navigation }: ChangePasswordModalProps) {\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [formError, setFormError] = useState<string | null>(null);\n\n  const isSubmitting = navigation.state === 'submitting' &&\n                       navigation.formData?.get('intent') === 'change-user-password' &&\n                       navigation.formData?.get('userId') === user?.id;\n\n  // Clear form and error on close or when user changes\n  useEffect(() => {\n    if (!isOpen || !user) {\n      setNewPassword('');\n      setConfirmPassword('');\n      setFormError(null);\n    }\n  }, [isOpen, user]);\n\n  // Handle errors/success from action data\n  useEffect(() => {\n     const isRelevantAction = actionData?.intent === 'change-user-password' &&\n                             actionData?.formData?.userId === user?.id;\n\n    if (isRelevantAction && !actionData?.success && actionData?.error) {\n      setFormError(actionData.error);\n    } else if (isRelevantAction && actionData?.success) {\n      setFormError(null); // Clear error on success\n      // Parent component handles closing the modal\n    }\n  }, [actionData, user]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    setFormError(null); // Clear previous errors on new submission attempt\n    if (newPassword !== confirmPassword) {\n      event.preventDefault(); // Prevent form submission\n      setFormError(\"Passwords do not match.\");\n    } else if (newPassword.length < 6) { // Basic length check (add more complex rules if needed)\n       event.preventDefault();\n       setFormError(\"Password must be at least 6 characters long.\");\n    }\n    // If validation passes, the Remix Form will submit naturally\n  };\n\n  if (!user) return null;\n\n  return (\n    <Transition appear show={isOpen} as={React.Fragment}>\n      <Dialog as=\"div\" className=\"relative z-20\" onClose={onClose}>\n        {/* Overlay */}\n        <Transition.Child as={React.Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n          <div className=\"fixed inset-0 bg-black bg-opacity-30\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child as={React.Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900 dark:text-white\">\n                  Change Password for {user.fullName}\n                </Dialog.Title>\n\n                <Form method=\"post\" action=\"/admin\" className=\"mt-4 space-y-4\" onSubmit={handleSubmit}>\n                  <input type=\"hidden\" name=\"intent\" value=\"change-user-password\" />\n                  <input type=\"hidden\" name=\"userId\" value={user.id} />\n\n                  {formError && (\n                     <div className=\"p-3 bg-red-100 border border-red-400 text-red-700 rounded dark:bg-red-900 dark:border-red-700 dark:text-red-200 text-sm\">\n                       {formError}\n                     </div>\n                   )}\n\n                  <div>\n                    <label htmlFor={`newPassword-${user.id}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">New Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"newPassword\"\n                      id={`newPassword-${user.id}`}\n                      required\n                      value={newPassword}\n                      onChange={(e) => setNewPassword(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor={`confirmPassword-${user.id}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">Confirm New Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"confirmPassword\" // This field is only for client-side validation\n                      id={`confirmPassword-${user.id}`}\n                      required\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                  </div>\n                   <p className=\"mt-1 text-xs text-yellow-600 dark:text-yellow-400\">Warning: Secure password change implementation (hashing/Supabase Auth) is needed on the server.</p>\n\n\n                  <div className=\"mt-6 flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-gray-200 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-300 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 dark:bg-gray-600 dark:text-gray-100 dark:hover:bg-gray-500\"\n                      onClick={onClose}\n                      disabled={isSubmitting}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:opacity-50\"\n                      disabled={isSubmitting || newPassword !== confirmPassword || newPassword.length < 6} // Disable if passwords don't match or too short\n                    >\n                      {isSubmitting ? 'Changing...' : 'Change Password'}\n                    </button>\n                  </div>\n                </Form>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n", "import React, { useState, useMemo, Fragment } from 'react';\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\"; // Import Form, useActionData, useNavigation\nimport { Dialog, Transition } from '@headlessui/react'; // Keep for modals\nimport type { Group, User } from '~/types/admin';\nimport type { action as adminAction } from '~/routes/admin'; // Import action type\n\n// --- Icons (keep as they are) ---\nfunction PlusIcon(props: React.SVGProps<SVGSVGElement>) { /* ... icon svg ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"12\" x2=\"12\" y1=\"5\" y2=\"19\"/><line x1=\"5\" x2=\"19\" y1=\"12\" y2=\"12\"/></svg>; }\nfunction EditIcon(props: React.SVGProps<SVGSVGElement>) { /* ... icon svg ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\"/><path d=\"m15 5 4 4\"/></svg>; }\nfunction DeleteIcon(props: React.SVGProps<SVGSVGElement>) { /* ... icon svg ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 6h18\"/><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"/><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"/><line x1=\"10\" x2=\"10\" y1=\"11\" y2=\"17\"/><line x1=\"14\" x2=\"14\" y1=\"11\" y2=\"17\"/></svg>; }\nfunction ViewIcon(props: React.SVGProps<SVGSVGElement>) { /* ... icon svg ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/></svg>; }\nfunction SearchIcon(props: React.SVGProps<SVGSVGElement>) { /* ... icon svg ... */ return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"11\" cy=\"11\" r=\"8\"/><path d=\"m21 21-4.3-4.3\"/></svg>; }\nfunction SpinnerIcon(props: React.SVGProps<SVGSVGElement>) { return <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"animate-spin\"><path d=\"M21 12a9 9 0 1 1-6.219-8.56\"/></svg>; }\n\n\n// --- Add/Edit Group Modal ---\n// Uses Headless UI Dialog + Remix Form\nfunction AddEditGroupModal({ isOpen, onClose, group, isSubmitting }: { isOpen: boolean, onClose: () => void, group: Group | null, isSubmitting: boolean }) {\n  const actionData = useActionData<typeof adminAction>();\n  const formRef = React.useRef<HTMLFormElement>(null);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [type, setType] = useState('');\n  const [formError, setFormError] = useState<string | null>(null); // Local form validation error\n\n  React.useEffect(() => {\n    if (isOpen) {\n      setName(group?.name || '');\n      setDescription(group?.description || '');\n      setType(group?.type || '');\n      setFormError(null); // Reset local error on open\n      // Reset server error when modal opens or group changes\n      // (actionData might persist from previous unrelated actions)\n    }\n  }, [isOpen, group]);\n\n  // Close modal on successful submission (listen to actionData)\n  React.useEffect(() => {\n     if (!isSubmitting && actionData?.success && actionData.intent?.includes('group')) {\n       onClose();\n     }\n   }, [actionData, isSubmitting, onClose]);\n\n\n  const handleLocalValidation = () => {\n    if (!name.trim()) {\n      setFormError('Group Name is required.');\n      return false;\n    }\n    setFormError(null);\n    return true;\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    if (!handleLocalValidation()) {\n      event.preventDefault(); // Prevent submission if local validation fails\n    }\n    // Let Remix handle the actual submission\n  };\n\n  if (!isOpen) return null;\n\n  const intent = group ? \"update-group\" : \"create-group\";\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        {/* Backdrop */}\n        <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        {/* Modal Content */}\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title as=\"h3\" className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n                  {group ? 'Edit Group' : 'Add New Group'}\n                </Dialog.Title>\n\n                {/* Display Server Error from actionData if it's related to group actions */}\n                {actionData?.error && actionData.intent === intent && (\n                  <p className=\"text-red-500 text-sm mb-3\">{actionData.error}</p>\n                )}\n                {/* Display Local Form Error */}\n                {formError && (\n                  <p className=\"text-red-500 text-sm mb-3\">{formError}</p>\n                )}\n\n                {/* Use Remix Form */}\n                <Form method=\"post\" action=\"/admin\" ref={formRef} onSubmit={handleSubmit} className=\"space-y-4\">\n                  {/* Hidden fields for intent and groupId (if editing) */}\n                  <input type=\"hidden\" name=\"intent\" value={intent} />\n                  {group && <input type=\"hidden\" name=\"groupId\" value={group.id} />}\n\n                  <div>\n                    <label htmlFor=\"groupName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Group Name <span className=\"text-red-500\">*</span></label>\n                    <input\n                      type=\"text\"\n                      id=\"groupName\"\n                      name=\"name\" // Name matches form data key\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      required // Basic HTML5 validation\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"groupDesc\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Description</label>\n                    <textarea\n                      id=\"groupDesc\"\n                      name=\"description\" // Name matches form data key\n                      value={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                      rows={3}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"groupType\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Group Type</label>\n                    <input\n                      type=\"text\"\n                      id=\"groupType\"\n                      name=\"type\" // Name matches form data key\n                      value={type}\n                      onChange={(e) => setType(e.target.value)}\n                      placeholder=\"e.g., Squad, Team\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:ring-blue-500 focus:border-blue-500\"\n                    />\n                  </div>\n\n                  {/* Buttons */}\n                  <div className=\"flex justify-end gap-3 mt-6\">\n                    <button\n                      type=\"button\" // Important: type=\"button\" to prevent form submission\n                      onClick={onClose}\n                      disabled={isSubmitting}\n                      className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500 disabled:opacity-50\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                      className=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                    >\n                      {isSubmitting && <SpinnerIcon className=\"h-4 w-4\" />}\n                      {isSubmitting ? (group ? 'Updating...' : 'Adding...') : (group ? 'Update Group' : 'Add Group')}\n                    </button>\n                  </div>\n                </Form>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n\n// --- Delete Confirmation Modal ---\n// Uses Headless UI Dialog + Remix Form for the confirmation action\nfunction DeleteConfirmationModal({ isOpen, onClose, group, isSubmitting }: { isOpen: boolean, onClose: () => void, group: Group | null, isSubmitting: boolean }) {\n  const actionData = useActionData<typeof adminAction>();\n\n  // Close modal on successful deletion\n  React.useEffect(() => {\n    if (!isSubmitting && actionData?.success && actionData.intent === 'delete-group') {\n      onClose();\n    }\n  }, [actionData, isSubmitting, onClose]);\n\n  if (!isOpen || !group) return null;\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\n        {/* Backdrop */}\n        <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0\" enterTo=\"opacity-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        {/* Modal Content */}\n        <div className=\"fixed inset-0 overflow-y-auto\">\n          <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n            <Transition.Child as={Fragment} enter=\"ease-out duration-300\" enterFrom=\"opacity-0 scale-95\" enterTo=\"opacity-100 scale-100\" leave=\"ease-in duration-200\" leaveFrom=\"opacity-100 scale-100\" leaveTo=\"opacity-0 scale-95\">\n              <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 p-6 text-left align-middle shadow-xl transition-all\">\n                <Dialog.Title as=\"h3\" className=\"text-xl font-semibold mb-2 text-gray-900 dark:text-white\">\n                  Confirm Group Deletion\n                </Dialog.Title>\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                    Are you sure you want to delete the group <strong>{group.name}</strong>?\n                    {group.userCount && group.userCount > 0\n                      ? <span className=\"font-semibold text-red-600 dark:text-red-400\"> This group currently has {group.userCount} member(s). Deletion is blocked.</span>\n                      : \" This action cannot be undone.\"}\n                  </p>\n                  {/* Display Server Error from actionData */}\n                  {actionData?.error && actionData.intent === 'delete-group' && (\n                    <p className=\"text-red-500 text-sm mt-3\">{actionData.error}</p>\n                  )}\n                </div>\n\n                {/* Use Remix Form for the delete action */}\n                <Form method=\"post\" action=\"/admin\" className=\"mt-6 flex justify-end gap-3\">\n                  <input type=\"hidden\" name=\"intent\" value=\"delete-group\" />\n                  <input type=\"hidden\" name=\"groupId\" value={group.id} />\n\n                  <button\n                    type=\"button\"\n                    onClick={onClose}\n                    disabled={isSubmitting}\n                    className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500 disabled:opacity-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    // Disable delete if group has members\n                    disabled={isSubmitting || (group.userCount !== undefined && group.userCount > 0)}\n                    className=\"inline-flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isSubmitting && <SpinnerIcon className=\"h-4 w-4\" />}\n                    {isSubmitting ? 'Deleting...' : 'Delete'}\n                  </button>\n                </Form>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n\n\n// --- View Members Modal (Remains mostly the same, uses props) ---\nfunction ViewMembersModal({ isOpen, onClose, group, users }: { isOpen: boolean, onClose: () => void, group: Group | null, users: User[] }) {\n  if (!isOpen || !group) return null;\n  const members = users.filter(u => u.groupId === group.id);\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-lg max-h-[80vh] flex flex-col\">\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">Members of {group.name} ({members.length})</h2>\n        <div className=\"flex-grow overflow-y-auto mb-4 border dark:border-gray-700 rounded\">\n          {members.length === 0 ? (\n            <p className=\"p-4 text-gray-500 dark:text-gray-400\">No users found in this group.</p>\n          ) : (\n            <ul className=\"divide-y dark:divide-gray-700\">\n              {members.map(user => (\n                <li key={user.id} className=\"px-4 py-2 text-sm text-gray-700 dark:text-gray-300\">\n                  {user.fullName} ({user.email}) - {user.role}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className=\"flex justify-end\">\n          <button onClick={onClose} className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500\">Close</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n// --- Main GroupsManagement Component ---\n// Accepts groups and users from props (loader data)\nexport function GroupsManagement({ groups: initialGroups, users }: { groups: Group[], users: User[] }) {\n  const navigation = useNavigation(); // Get navigation state\n  const actionData = useActionData<typeof adminAction>(); // Get action results\n\n  // Determine if a group-related action is submitting\n  const isSubmitting = navigation.state === 'submitting' &&\n    navigation.formData?.get('intent')?.toString().includes('group');\n\n  // Use props directly, no need for local state for the list itself\n  // const [groups, setGroups] = useState<Group[]>(initialGroups); // Remove this\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterType, setFilterType] = useState('');\n  const [isAddEditModalOpen, setIsAddEditModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isViewMembersModalOpen, setIsViewMembersModalOpen] = useState(false);\n  const [selectedGroup, setSelectedGroup] = useState<Group | null>(null);\n\n  // Recalculate derived data based on props\n  const groupTypes = useMemo(() => [...new Set(initialGroups.map(g => g.type).filter(Boolean))], [initialGroups]) as string[];\n\n  const filteredGroups = useMemo(() => {\n    // Add user count calculation here based on passed 'users' prop\n    const groupsWithCounts = initialGroups.map(g => ({\n        ...g,\n        userCount: users.filter(u => u.groupId === g.id).length\n    }));\n\n    return groupsWithCounts.filter(group => {\n      const searchMatch = searchTerm === '' || group.name.toLowerCase().includes(searchTerm.toLowerCase());\n      const typeMatch = filterType === '' || group.type === filterType;\n      return searchMatch && typeMatch;\n    });\n  }, [initialGroups, users, searchTerm, filterType]);\n\n  // --- Action Handlers ---\n  const handleAddGroup = () => {\n    setSelectedGroup(null);\n    setIsAddEditModalOpen(true);\n  };\n\n  const handleEditGroup = (group: Group) => {\n    setSelectedGroup(group);\n    setIsAddEditModalOpen(true);\n  };\n\n  // handleSaveGroup is now handled by the AddEditGroupModal's Form submission\n\n  const handleDeleteGroup = (group: Group) => {\n    setSelectedGroup(group);\n    setIsDeleteModalOpen(true);\n  };\n\n  // confirmDeleteGroup is now handled by the DeleteConfirmationModal's Form submission\n\n  const handleViewMembers = (group: Group) => {\n    setSelectedGroup(group);\n    setIsViewMembersModalOpen(true);\n  };\n\n  // Close modals if action was successful but component didn't re-render immediately\n  // (e.g., if not using redirect in action)\n  React.useEffect(() => {\n    if (actionData?.success && actionData.intent?.includes('group')) {\n      setIsAddEditModalOpen(false);\n      setIsDeleteModalOpen(false);\n      setSelectedGroup(null);\n    }\n  }, [actionData]);\n\n\n  return (\n    <div className=\"p-4 border rounded-md dark:border-gray-700 bg-white dark:bg-gray-900 shadow-sm\">\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-900 dark:text-white\">Groups Management</h3>\n\n      {/* Controls */}\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-4 gap-3\">\n        <button\n          onClick={handleAddGroup}\n          disabled={isSubmitting} // Disable if any group action is pending\n          className=\"inline-flex items-center gap-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm disabled:opacity-50\"\n        >\n          <PlusIcon className=\"h-4 w-4\" />\n          Add New Group\n        </button>\n        <div className=\"flex gap-2 flex-wrap\">\n          {/* Search */}\n          <div className=\"relative\">\n            <label htmlFor=\"search-groups\" className=\"sr-only\">Search by group name</label>\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <SearchIcon className=\"h-5 w-5 text-gray-400\" />\n            </div>\n            <input\n              type=\"text\"\n              id=\"search-groups\"\n              placeholder=\"Search groups...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full md:w-auto pl-10 pr-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n            />\n          </div>\n          {/* Filter by Type */}\n          <div>\n            <label htmlFor=\"filter-group-type\" className=\"sr-only\">Filter by Group Type</label>\n            <select\n              id=\"filter-group-type\"\n              value={filterType}\n              onChange={(e) => setFilterType(e.target.value)}\n              className=\"w-full md:w-auto px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n            >\n              <option value=\"\">All Types</option>\n              {groupTypes.map(type => (\n                <option key={type} value={type}>{type}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Groups Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-800\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Group Name</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Type</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">User Count</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Actions</th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700\">\n            {filteredGroups.length === 0 ? (\n              <tr>\n                <td colSpan={4} className=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\n                  No groups found matching your criteria.\n                </td>\n              </tr>\n            ) : (\n              filteredGroups.map((group) => (\n                <tr key={group.id} className={navigation.formData?.get('groupId') === group.id ? 'opacity-50' : ''}> {/* Dim row during action */}\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">{group.name}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{group.type || '-'}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{group.userCount}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-1\">\n                    <button onClick={() => handleViewMembers(group)} disabled={isSubmitting} className=\"text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-200 p-1 disabled:opacity-50\" title=\"View Members\">\n                      <ViewIcon className=\"h-5 w-5\" />\n                    </button>\n                    <button onClick={() => handleEditGroup(group)} disabled={isSubmitting} className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-200 p-1 disabled:opacity-50\" title=\"Edit Group\">\n                      <EditIcon className=\"h-5 w-5\" />\n                    </button>\n                    <button onClick={() => handleDeleteGroup(group)} disabled={isSubmitting} className=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-200 p-1 disabled:opacity-50\" title=\"Delete Group\">\n                      <DeleteIcon className=\"h-5 w-5\" />\n                    </button>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Modals */}\n      <AddEditGroupModal\n        isOpen={isAddEditModalOpen}\n        onClose={() => setIsAddEditModalOpen(false)}\n        group={selectedGroup}\n        isSubmitting={isSubmitting && (navigation.formData?.get('intent') === 'create-group' || navigation.formData?.get('intent') === 'update-group')}\n      />\n      <DeleteConfirmationModal\n        isOpen={isDeleteModalOpen}\n        onClose={() => { setIsDeleteModalOpen(false); setSelectedGroup(null); }}\n        group={selectedGroup}\n        isSubmitting={isSubmitting && navigation.formData?.get('intent') === 'delete-group'}\n      />\n      <ViewMembersModal\n        isOpen={isViewMembersModalOpen}\n        onClose={() => { setIsViewMembersModalOpen(false); setSelectedGroup(null); }}\n        group={selectedGroup}\n        users={users} // Pass users from props\n      />\n    </div>\n  );\n}\n", "import React, { useState, useEffect } from 'react';\nimport { useStore } from '~/store/store';\n\n// Placeholder type for settings\ninterface EssenceSettingsData {\n  maxRewardAmount: number | string; // Use string for input field binding\n  maxFineAmount: number | string;\n  centralFineAccountId: string; // User ID or Email\n  enableGroupActions: boolean;\n}\n\nexport function EssenceSettings() {\n  const { users } = useStore();\n  const centralFineAccount = users.find(u => u.role === 'Super Admin'); // Example: Use first Super Admin as central account\n\n  // Simulate fetching settings - replace with actual data fetching\n  const [settings, setSettings] = useState<EssenceSettingsData>({\n    maxRewardAmount: 1000,\n    maxFineAmount: 500,\n    centralFineAccountId: centralFineAccount?.email || '', // Use actual user email\n    enableGroupActions: true,\n  });\n  const [isEditing, setIsEditing] = useState(false); // To toggle edit mode if needed\n  const [tempSettings, setTempSettings] = useState<EssenceSettingsData>(settings);\n\n  useEffect(() => {\n    if (centralFineAccount) {\n      setSettings(prev => ({ ...prev, centralFineAccountId: centralFineAccount.email }));\n      setTempSettings(prev => ({ ...prev, centralFineAccountId: centralFineAccount.email }));\n    }\n  }, [centralFineAccount]);\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target;\n    const checked = (e.target as HTMLInputElement).checked; // For checkbox\n\n    setTempSettings(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n  };\n\n  const handleSave = () => {\n    // TODO: Add validation (e.g., amounts are numbers, account ID format)\n    console.log(\"Saving Essence Settings:\", tempSettings);\n    setSettings(tempSettings);\n    setIsEditing(false);\n    // TODO: Show success toast\n    // TODO: Call API to save settings\n  };\n\n  const handleCancel = () => {\n    setTempSettings(settings); // Revert changes\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"p-4 border rounded-md dark:border-gray-700 bg-white dark:bg-gray-900 shadow-sm\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Essence Settings</h3>\n        {!isEditing && (\n          <button\n            onClick={() => { setTempSettings(settings); setIsEditing(true); }}\n            className=\"text-sm text-blue-600 hover:underline dark:text-blue-400\"\n          >\n            Edit Settings\n          </button>\n        )}\n      </div>\n\n      <div className=\"space-y-4\">\n        {/* Max Reward Amount */}\n        <div>\n          <label htmlFor=\"maxRewardAmount\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Maximum Reward Amount</label>\n          <input\n            type=\"number\"\n            id=\"maxRewardAmount\"\n            name=\"maxRewardAmount\"\n            value={isEditing ? tempSettings.maxRewardAmount : settings.maxRewardAmount}\n            onChange={handleInputChange}\n            disabled={!isEditing}\n            className=\"w-full md:w-1/2 px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white disabled:opacity-70 disabled:bg-gray-100 dark:disabled:bg-gray-700\"\n            min=\"0\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">Set the highest amount allowed for a single reward.</p>\n        </div>\n\n        {/* Max Fine Amount */}\n        <div>\n          <label htmlFor=\"maxFineAmount\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Maximum Fine Amount</label>\n          <input\n            type=\"number\"\n            id=\"maxFineAmount\"\n            name=\"maxFineAmount\"\n            value={isEditing ? tempSettings.maxFineAmount : settings.maxFineAmount}\n            onChange={handleInputChange}\n            disabled={!isEditing}\n            className=\"w-full md:w-1/2 px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white disabled:opacity-70 disabled:bg-gray-100 dark:disabled:bg-gray-700\"\n            min=\"0\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">Set the highest amount allowed for a single fine.</p>\n        </div>\n\n        {/* Central Fine Account */}\n        <div>\n          <label htmlFor=\"centralFineAccountId\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Central Fine Account Identifier</label>\n          <input\n            type=\"text\" // Could be email, user ID, etc.\n            id=\"centralFineAccountId\"\n            name=\"centralFineAccountId\"\n            value={isEditing ? tempSettings.centralFineAccountId : settings.centralFineAccountId}\n            onChange={handleInputChange}\n            disabled={!isEditing}\n            placeholder=\"Enter User ID or Email\"\n            className=\"w-full md:w-1/2 px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white disabled:opacity-70 disabled:bg-gray-100 dark:disabled:bg-gray-700\"\n          />\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">Specify the user account where collected fines are sent.</p>\n        </div>\n\n        {/* Enable Group Actions */}\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            id=\"enableGroupActions\"\n            name=\"enableGroupActions\"\n            checked={isEditing ? tempSettings.enableGroupActions : settings.enableGroupActions}\n            onChange={handleInputChange}\n            disabled={!isEditing}\n            className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 disabled:opacity-70\"\n          />\n          <label htmlFor=\"enableGroupActions\" className=\"ml-2 block text-sm text-gray-900 dark:text-gray-300\">\n            Enable Group-Based Economic Actions\n          </label>\n        </div>\n         <p className=\"text-xs text-gray-500 dark:text-gray-400 -mt-3 ml-6\">Allow admins to assign rewards/fines/expenses to entire groups.</p>\n\n        {/* Action Buttons */}\n        {isEditing && (\n          <div className=\"flex justify-end gap-3 pt-4 border-t dark:border-gray-700\">\n            <button\n              onClick={handleCancel}\n              className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleSave}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n            >\n              Save Settings\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import React, { useState, useMemo } from 'react';\nimport { useStore } from '~/store/store';\n\n// --- Icons ---\nfunction DownloadIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/><polyline points=\"7 10 12 15 17 10\"/><line x1=\"12\" x2=\"12\" y1=\"15\" y2=\"3\"/></svg>\n  );\n}\nfunction UploadIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/><polyline points=\"17 8 12 3 7 8\"/><line x1=\"12\" x2=\"12\" y1=\"3\" y2=\"15\"/></svg>\n  );\n}\nfunction FileTextIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\"/><path d=\"M14 2v4a2 2 0 0 0 2 2h4\"/><path d=\"M10 9H8\"/><path d=\"M16 13H8\"/><path d=\"M16 17H8\"/></svg>\n  );\n}\nfunction DatabaseIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\"/><path d=\"M3 5V19A9 3 0 0 0 21 19V5\"/><path d=\"M3 12A9 3 0 0 0 21 12\"/></svg>\n  );\n}\nfunction ArchiveIcon(props: React.SVGProps<SVGSVGElement>) { // For ZIP\n    return (\n        <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><rect width=\"20\" height=\"5\" x=\"2\" y=\"3\" rx=\"1\"/><path d=\"M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8\"/><path d=\"M10 12h4\"/></svg>\n    )\n}\n\n\n// Placeholder types\ntype ExportModule = 'config' | 'groups' | 'essenceSettings' | 'users' | 'balances' | 'transactions' | 'activityLogs' | 'economySetup';\ntype ExportFormat = 'json' | 'csv';\ntype ImportMode = 'merge' | 'overwrite';\n\ninterface AuditLogEntry {\n  id: string;\n  actionType: 'Import' | 'Export';\n  fileName?: string; // For import/export of single files\n  modules?: ExportModule[]; // For export all / zip\n  performedBy: string; // User ID or Name\n  timestamp: string;\n  status: 'Success' | 'Partial Success' | 'Failed';\n  details?: string; // Error messages or summary\n}\n\nexport function BackupRestore() {\n  const { users, groups, transactions } = useStore();\n  const [exportModules, setExportModules] = useState<ExportModule[]>([]);\n  const [exportFormat, setExportFormat] = useState<ExportFormat>('json');\n  const [includeLogs, setIncludeLogs] = useState(false);\n\n  // Import State\n  const [importFile, setImportFile] = useState<File | null>(null);\n  const [importFileName, setImportFileName] = useState('');\n  const [importModule, setImportModule] = useState<ExportModule | ''>(''); // Which module the file corresponds to\n  const [importMode, setImportMode] = useState<ImportMode>('merge');\n  const [importPreview, setImportPreview] = useState<any>(null); // Placeholder for preview data\n  const [importErrors, setImportErrors] = useState<string[]>([]);\n\n  // Audit Log State\n  const [auditLog, setAuditLog] = useState<AuditLogEntry[]>([\n    // Placeholder data\n    { id: 'log1', actionType: 'Export', modules: ['config', 'groups'], performedBy: 'Super Admin', timestamp: new Date(Date.now() - 86400000).toISOString(), status: 'Success' },\n    { id: 'log2', actionType: 'Import', fileName: 'users_import_v2.csv', performedBy: 'Super Admin', timestamp: new Date().toISOString(), status: 'Failed', details: 'Row 15: Invalid email format. Row 22: User ID not found.' },\n  ]);\n  const [filterDate, setFilterDate] = useState('');\n  const [filterAction, setFilterAction] = useState<'Import' | 'Export' | ''>('');\n\n\n  // --- Placeholder Handlers ---\n  const handleExportSelection = (module: ExportModule, type: 'config' | 'full') => {\n    // Basic logic to handle selection - needs refinement for exclusive choices etc.\n    setExportModules(prev => {\n        if (type === 'config') {\n            // Allow selecting individual config items\n            return prev.includes(module) ? prev.filter(m => m !== module) : [...prev, module];\n        } else {\n             // Allow selecting individual full data items (excluding logs initially)\n             if (module === 'activityLogs') return prev; // Handled by separate checkbox\n             return prev.includes(module) ? prev.filter(m => m !== module) : [...prev, module];\n        }\n    });\n  };\n\n  const handleExport = (type: 'selected' | 'all_config' | 'all_data' | 'zip') => {\n    // Simulate export file generation\n    console.log(`Exporting... Type: ${type}`);\n    console.log(\"Data to export:\", {\n      users: users.length,\n      groups: groups.length,\n      transactions: transactions.length,\n      selectedModules: exportModules,\n      includeLogs,\n      format: exportFormat\n    });\n\n    let modulesToExport: ExportModule[] = [];\n    if (type === 'selected') modulesToExport = exportModules;\n    if (type === 'all_config') modulesToExport = ['config', 'groups', 'essenceSettings']; // Define what 'config' means\n    // FIX: Corrected conditional spread syntax\n    if (type === 'all_data') modulesToExport = ['users', 'balances', 'transactions', 'economySetup', ...(includeLogs ? ['activityLogs'] : [])]; // Define what 'data' means\n    // FIX: Corrected conditional spread syntax\n    if (type === 'zip') modulesToExport = ['config', 'groups', 'essenceSettings', 'users', 'balances', 'transactions', 'economySetup', ...(includeLogs ? ['activityLogs'] : [])]; // All\n\n    if (modulesToExport.length === 0 && type === 'selected') {\n        alert(\"Please select at least one module to export.\");\n        return;\n    }\n\n    // TODO: Generate mock data based on selection and format\n    // TODO: Trigger file download (single file or zip)\n    // TODO: Add entry to Audit Log\n    alert(`Export initiated for ${type} with ${users.length} users, ${groups.length} groups, and ${transactions.length} transactions as ${exportFormat}. Check console.`);\n    // Add mock audit log entry\n    setAuditLog(prev => [{\n        id: `log${Date.now()}`,\n        actionType: 'Export',\n        modules: modulesToExport,\n        performedBy: 'Current Super Admin', // Get actual user later\n        timestamp: new Date().toISOString(),\n        status: 'Success', // Assume success for placeholder\n    }, ...prev]);\n  };\n\n  const handleImportFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setImportFile(file);\n      setImportFileName(file.name);\n      setImportPreview(null); // Reset preview\n      setImportErrors([]);\n      // Try to guess module from filename? Or require selection?\n      // For now, require selection via dropdown.\n    }\n  };\n\n  const handleImport = () => {\n    if (!importFile || !importModule) {\n      alert(\"Please select a file and the corresponding data module to import.\");\n      return;\n    }\n    console.log(`Importing file: ${importFileName}`);\n    console.log(`Module: ${importModule}`);\n    console.log(`Mode: ${importMode}`);\n\n    // TODO: Read file content (FileReader)\n    // TODO: Parse data (JSON/CSV)\n    // TODO: Validate data structure and content\n    // TODO: Show preview (first few rows?)\n    // TODO: Show validation errors\n    // TODO: If valid, show confirmation for 'overwrite' mode\n    // TODO: Simulate merge/overwrite action\n    // TODO: Add entry to Audit Log\n\n    alert(`Placeholder: Import initiated for ${importModule} from ${importFileName} (Mode: ${importMode}). Check console.`);\n    // Add mock audit log entry\n     setAuditLog(prev => [{\n        id: `log${Date.now()}`,\n        actionType: 'Import',\n        fileName: importFileName,\n        modules: [importModule],\n        performedBy: 'Current Super Admin', // Get actual user later\n        timestamp: new Date().toISOString(),\n        status: 'Success', // Assume success for placeholder\n    }, ...prev]);\n     // Reset import form\n     setImportFile(null);\n     setImportFileName('');\n     setImportModule('');\n     setImportPreview(null);\n     setImportErrors([]);\n  };\n\n  const filteredAuditLog = useMemo(() => {\n    return auditLog.filter(log => {\n        const dateMatch = !filterDate || log.timestamp.startsWith(filterDate);\n        const actionMatch = !filterAction || log.actionType === filterAction;\n        return dateMatch && actionMatch;\n    });\n  }, [auditLog, filterDate, filterAction]);\n\n\n  return (\n    <div className=\"p-4 border rounded-md dark:border-gray-700 bg-white dark:bg-gray-900 shadow-sm space-y-8\">\n      {/* Export Section */}\n      <section>\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-900 dark:text-white\">Export Data</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Configuration Export */}\n          <div className=\"p-4 border rounded dark:border-gray-600\">\n            <h4 className=\"font-medium mb-2 flex items-center gap-2\"><FileTextIcon className=\"w-5 h-5\"/>Configuration Modules</h4>\n            <div className=\"space-y-2 text-sm\">\n              {/* Add checkboxes for config modules */}\n              <label className=\"flex items-center gap-2\">\n                <input type=\"checkbox\" checked={exportModules.includes('groups')} onChange={() => handleExportSelection('groups', 'config')} className=\"form-checkbox h-4 w-4 text-blue-600\"/> Groups\n              </label>\n              <label className=\"flex items-center gap-2\">\n                <input type=\"checkbox\" checked={exportModules.includes('essenceSettings')} onChange={() => handleExportSelection('essenceSettings', 'config')} className=\"form-checkbox h-4 w-4 text-blue-600\"/> Essence Settings\n              </label>\n               {/* Add more config modules as needed */}\n            </div>\n             <button\n                onClick={() => handleExport('all_config')}\n                className=\"mt-3 inline-flex items-center gap-1 px-3 py-1 bg-gray-500 text-white rounded hover:bg-gray-600 text-xs\"\n             >\n                <DownloadIcon className=\"h-3 w-3\" /> Export All Config\n             </button>\n          </div>\n\n          {/* Full Data Export */}\n          <div className=\"p-4 border rounded dark:border-gray-600\">\n            <h4 className=\"font-medium mb-2 flex items-center gap-2\"><DatabaseIcon className=\"w-5 h-5\"/>Full Data Modules</h4>\n            <div className=\"space-y-2 text-sm\">\n              {/* Add checkboxes for data modules */}\n               <label className=\"flex items-center gap-2\">\n                <input type=\"checkbox\" checked={exportModules.includes('users')} onChange={() => handleExportSelection('users', 'full')} className=\"form-checkbox h-4 w-4 text-blue-600\"/> Users\n              </label>\n               <label className=\"flex items-center gap-2\">\n                <input type=\"checkbox\" checked={exportModules.includes('balances')} onChange={() => handleExportSelection('balances', 'full')} className=\"form-checkbox h-4 w-4 text-blue-600\"/> User Balances\n              </label>\n               <label className=\"flex items-center gap-2\">\n                <input type=\"checkbox\" checked={exportModules.includes('transactions')} onChange={() => handleExportSelection('transactions', 'full')} className=\"form-checkbox h-4 w-4 text-blue-600\"/> Transactions\n              </label>\n               <label className=\"flex items-center gap-2\">\n                <input type=\"checkbox\" checked={exportModules.includes('economySetup')} onChange={() => handleExportSelection('economySetup', 'full')} className=\"form-checkbox h-4 w-4 text-blue-600\"/> Economy Setup (Activities/Expenses)\n              </label>\n              <hr className=\"my-2 dark:border-gray-600\"/>\n               <label className=\"flex items-center gap-2\">\n                <input type=\"checkbox\" checked={includeLogs} onChange={(e) => setIncludeLogs(e.target.checked)} className=\"form-checkbox h-4 w-4 text-blue-600\"/> Include Activity Logs (Optional)\n              </label>\n            </div>\n             <button\n                onClick={() => handleExport('all_data')}\n                className=\"mt-3 inline-flex items-center gap-1 px-3 py-1 bg-gray-500 text-white rounded hover:bg-gray-600 text-xs\"\n             >\n                <DownloadIcon className=\"h-3 w-3\" /> Export All Data\n             </button>\n          </div>\n        </div>\n\n        {/* Export Controls */}\n        <div className=\"mt-4 flex flex-col sm:flex-row items-start sm:items-center gap-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-md border dark:border-gray-700\">\n           <div className=\"flex-shrink-0\">\n             <label htmlFor=\"exportFormat\" className=\"text-sm font-medium mr-2\">Format:</label>\n             <select\n                id=\"exportFormat\"\n                value={exportFormat}\n                onChange={(e) => setExportFormat(e.target.value as ExportFormat)}\n                className=\"px-3 py-1 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n             >\n                <option value=\"json\">JSON</option>\n                <option value=\"csv\">CSV</option>\n             </select>\n           </div>\n           <div className=\"flex-grow flex flex-wrap gap-2\">\n             <button\n                onClick={() => handleExport('selected')}\n                disabled={exportModules.length === 0}\n                className=\"inline-flex items-center gap-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm disabled:opacity-50 disabled:cursor-not-allowed\"\n             >\n                <DownloadIcon className=\"h-4 w-4\" /> Export Selected ({exportModules.length})\n             </button>\n              <button\n                onClick={() => handleExport('zip')}\n                className=\"inline-flex items-center gap-1 px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm\"\n             >\n                <ArchiveIcon className=\"h-4 w-4\" /> Download All as ZIP\n             </button>\n           </div>\n        </div>\n      </section>\n\n      <hr className=\"dark:border-gray-700\"/>\n\n      {/* Import Section */}\n      <section>\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-900 dark:text-white\">Import Data</h3>\n        <div className=\"p-4 border rounded dark:border-gray-600 bg-gray-50 dark:bg-gray-800\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n            {/* File Upload */}\n            <div>\n              <label htmlFor=\"importFile\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Select File (.json or .csv)</label>\n              <input\n                type=\"file\"\n                id=\"importFile\"\n                accept=\".json,.csv\"\n                onChange={handleImportFileChange}\n                className=\"block w-full text-sm text-gray-500 dark:text-gray-400 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 dark:file:bg-gray-700 dark:file:text-gray-200 dark:hover:file:bg-gray-600\"\n              />\n              {importFileName && <p className=\"text-xs mt-1 text-gray-600 dark:text-gray-400 truncate\">Selected: {importFileName}</p>}\n            </div>\n\n            {/* Module Selection */}\n            <div>\n              <label htmlFor=\"importModule\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Data Module</label>\n              <select\n                id=\"importModule\"\n                value={importModule}\n                onChange={(e) => setImportModule(e.target.value as ExportModule | '')}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n              >\n                <option value=\"\" disabled>Select module...</option>\n                <option value=\"users\">Users</option>\n                <option value=\"balances\">User Balances</option>\n                <option value=\"transactions\">Transactions</option>\n                <option value=\"groups\">Groups</option>\n                <option value=\"economySetup\">Economy Setup (Activities/Expenses)</option>\n                 {/* Add other importable modules */}\n              </select>\n            </div>\n\n            {/* Import Mode & Button */}\n            <div className=\"flex flex-col sm:flex-row items-start sm:items-end gap-2\">\n               <div>\n                 <label htmlFor=\"importMode\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Import Mode</label>\n                 <select\n                    id=\"importMode\"\n                    value={importMode}\n                    onChange={(e) => setImportMode(e.target.value as ImportMode)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                 >\n                    <option value=\"merge\">Merge with existing</option>\n                    <option value=\"overwrite\">Overwrite existing</option>\n                 </select>\n               </div>\n               <button\n                  onClick={handleImport}\n                  disabled={!importFile || !importModule}\n                  className=\"w-full sm:w-auto inline-flex items-center justify-center gap-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm disabled:opacity-50 disabled:cursor-not-allowed\"\n               >\n                  <UploadIcon className=\"h-4 w-4\" /> Import\n               </button>\n            </div>\n          </div>\n           {/* Placeholder for Preview/Validation */}\n           {importErrors.length > 0 && (\n             <div className=\"mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded text-sm\">\n                <p className=\"font-medium mb-1\">Import Validation Errors:</p>\n                <ul className=\"list-disc list-inside text-xs\">\n                    {importErrors.map((err, i) => <li key={i}>{err}</li>)}\n                </ul>\n             </div>\n           )}\n           {importPreview && (\n              <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 text-blue-800 rounded text-sm\">\n                <p className=\"font-medium mb-1\">Import Preview:</p>\n                <pre className=\"text-xs max-h-40 overflow-auto bg-white dark:bg-gray-900 p-2 rounded\">{JSON.stringify(importPreview, null, 2)}</pre>\n             </div>\n           )}\n           <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">Note: 'Overwrite' mode requires confirmation. Validation checks headers, data types, and references (e.g., User IDs). Preview shows sample data before import.</p>\n        </div>\n      </section>\n\n       <hr className=\"dark:border-gray-700\"/>\n\n      {/* Audit Trail Section */}\n      <section>\n        <h3 className=\"text-lg font-semibold mb-4 text-gray-900 dark:text-white\">Import/Export Audit Trail</h3>\n         {/* Filters */}\n         <div className=\"flex flex-wrap gap-4 mb-4\">\n             <div>\n                <label htmlFor=\"filterDate\" className=\"text-sm font-medium mr-2\">Date:</label>\n                <input\n                    type=\"date\"\n                    id=\"filterDate\"\n                    value={filterDate}\n                    onChange={(e) => setFilterDate(e.target.value)}\n                    className=\"px-3 py-1 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white text-sm\"\n                />\n             </div>\n             <div>\n                <label htmlFor=\"filterAction\" className=\"text-sm font-medium mr-2\">Action:</label>\n                <select\n                    id=\"filterAction\"\n                    value={filterAction}\n                    onChange={(e) => setFilterAction(e.target.value as 'Import' | 'Export' | '')}\n                    className=\"px-3 py-1 border border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white text-sm\"\n                >\n                    <option value=\"\">All Actions</option>\n                    <option value=\"Import\">Import</option>\n                    <option value=\"Export\">Export</option>\n                </select>\n             </div>\n         </div>\n\n        {/* Audit Log Table */}\n        <div className=\"overflow-x-auto border rounded dark:border-gray-700\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead className=\"bg-gray-50 dark:bg-gray-800\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Timestamp</th>\n                <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Action</th>\n                <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Details</th>\n                <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Performed By</th>\n                <th scope=\"col\" className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400\">Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700\">\n              {filteredAuditLog.length === 0 ? (\n                <tr>\n                  <td colSpan={5} className=\"px-4 py-3 text-center text-sm text-gray-500 dark:text-gray-400\">\n                    No audit log entries found matching your criteria.\n                  </td>\n                </tr>\n              ) : (\n                filteredAuditLog.map((log) => (\n                  <tr key={log.id}>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{new Date(log.timestamp).toLocaleString()}</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${log.actionType === 'Import' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' : 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'}`}>\n                            {log.actionType}\n                        </span>\n                    </td>\n                    <td className=\"px-4 py-3 text-sm text-gray-500 dark:text-gray-400\">\n                        {log.fileName ? `File: ${log.fileName}` : ''}\n                        {log.modules ? ` Modules: ${log.modules.join(', ')}` : ''}\n                        {log.details ? <p className=\"text-xs text-red-600 dark:text-red-400 mt-1\">{log.details}</p> : ''}\n                    </td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{log.performedBy}</td>\n                    <td className=\"px-4 py-3 whitespace-nowrap text-sm\">\n                       <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${log.status === 'Success' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : log.status === 'Failed' ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200' : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\n                         {log.status}\n                       </span>\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n    </div>\n  );\n}\n", "import type { Group, User } from \"~/types/admin\";\nimport { GroupsManagement } from \"./GroupsManagement\";\nimport { EssenceSettings } from \"./EssenceSettings\";\nimport { BackupRestore } from \"./BackupRestore\";\n\n// Accept groups and users as props\ninterface MasterTabContentProps {\n  groups: Group[];\n  users: User[];\n}\n\nexport function MasterTabContent({ groups, users }: MasterTabContentProps) {\n  return (\n    <div className=\"p-4 border rounded-b-md dark:border-gray-700 bg-gray-50 dark:bg-gray-950 space-y-6\">\n       {/* Pass the props down to GroupsManagement */}\n       <GroupsManagement groups={groups} users={users} />\n       <EssenceSettings />\n       <BackupRestore />\n    </div>\n  );\n}\n", "import React from 'react';\nimport { AdminTabs } from '~/components/admin/AdminTabs';\nimport type { User, Group, Transaction } from '~/types/admin';\nimport type { Navigation } from '@remix-run/react';\n\ninterface SuperAdminDashboardProps {\n  users: User[];\n  groups: Group[];\n  transactions: Transaction[];\n  actionData: any;\n  navigation: Navigation;\n}\n\nexport function SuperAdminDashboard({ users, groups, transactions, actionData, navigation }: SuperAdminDashboardProps) {\n  return (\n    <div className=\"space-y-6\">\n      {/* AdminTabs now only shows Users and Master tabs */}\n      <AdminTabs\n        users={users}\n        groups={groups}\n        transactions={transactions}\n        actionData={actionData}\n        navigation={navigation}\n      />\n    </div>\n  );\n}\n", "import type { ActionFunctionArgs, LoaderFunctionArgs, MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport { getAuthSession, signIn } from \"~/lib/auth.server\";\nimport { getSession, commitSession } from \"~/lib/session.server\";\n\nexport const meta: MetaFunction = () => {\n  return [{ title: \"Life Economy - Login\" }];\n};\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const session = await getAuthSession(request);\n  if (session) {\n    // If user is already logged in, redirect to dashboard\n    return redirect(\"/\");\n  }\n  return json({});\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\")?.toString();\n  const password = formData.get(\"password\")?.toString();\n\n  if (!email || !password) {\n    return json({ error: \"Email and password are required.\" }, { status: 400 });\n  }\n\n  const { data, error, headers } = await signIn(request, { email, password });\n\n  if (error) {\n    return json({ error }, { status: 401, headers });\n  }\n\n  // If login is successful, redirect to the dashboard\n  return redirect(\"/\", { headers });\n}\n\nexport default function LoginPage() {\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-gray-100 px-4 dark:bg-gray-950\">\n      <div className=\"w-full max-w-md rounded-lg bg-white p-8 shadow-lg dark:bg-gray-900\">\n        <h2 className=\"mb-6 text-center text-3xl font-bold text-gray-900 dark:text-white\">\n          Sign In to Life Economy\n        </h2>\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 dark:border-gray-700 dark:bg-gray-800 dark:text-white dark:placeholder-gray-500 sm:text-sm\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 dark:border-gray-700 dark:bg-gray-800 dark:text-white dark:placeholder-gray-500 sm:text-sm\"\n              />\n            </div>\n          </div>\n\n          {actionData?.error && (\n            <p className=\"text-sm text-red-600 dark:text-red-400\">\n              {actionData.error}\n            </p>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"flex w-full justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:bg-indigo-500 dark:hover:bg-indigo-600 dark:focus:ring-offset-gray-900\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? \"Signing In...\" : \"Sign In\"}\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { json, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { supabase } from \"~/lib/supabase\";\nimport { useStore } from \"~/store/store\";\nimport { useEffect } from \"react\";\nimport type { User } from \"~/types/admin\"; // Assuming your User type is here\n\n// Loader to fetch users and pass them to the client\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const { data: users, error } = await supabase\n    .from('profiles')\n    .select('id, full_name, balance'); // Fetch necessary user data\n\n  if (error) {\n    console.error(\"Error fetching users in layout loader:\", error);\n    // Depending on your app's needs, you might throw an error\n    // or return an empty array and handle the error client-side.\n    // Returning empty array for now to avoid breaking the app.\n    return json({ users: [] });\n  }\n\n  // Return users as JSON\n  return json({ users });\n}\n\n// Layout component that populates the store\nexport default function Layout() {\n  const { users } = useLoaderData<typeof loader>();\n  const setUsers = useStore((state) => state.setUsers);\n  const isStoreReady = useStore((state) => !!state.setUsers); // Check if setter is available\n\n  // Populate the store with fetched users\n  useEffect(() => {\n    if (isStoreReady && users) {\n      // Map fetched data to your store's User type if necessary\n      const storeUsers: User[] = users.map(user => ({\n        id: user.id,\n        fullName: user.full_name || 'Unknown User', // Handle potential null full_name\n        balance: user.balance || 0, // Handle potential null balance\n        // Add other user properties if needed by the store/app\n      }));\n      setUsers(storeUsers);\n    }\n  }, [isStoreReady, users, setUsers]); // Depend on isStoreReady, users, and setUsers\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* You can add shared layout elements here, like a header or sidebar */}\n      <main className=\"container mx-auto py-8 px-4\">\n        <Outlet /> {/* This is where nested routes like /transfer will render */}\n      </main>\n    </div>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-GWNLWJOI.js','imports':['/build/_shared/chunk-O4BRYNJ4.js','/build/_shared/chunk-6LJYTYAE.js','/build/_shared/chunk-U4FRFQSK.js','/build/_shared/chunk-XGOTYLZ5.js','/build/_shared/chunk-7M6SC7J5.js','/build/_shared/chunk-U5E2PCIK.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-L62FXQAZ.js','imports':['/build/_shared/chunk-X6HWNA6P.js','/build/_shared/chunk-KHBLHEPB.js','/build/_shared/chunk-OW4LD7OY.js','/build/_shared/chunk-MUUU2TT6.js','/build/_shared/chunk-PH7FC7E6.js','/build/_shared/chunk-X2UCJLGP.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/_app':{'id':'routes/_app','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_app-GVKBQPT7.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-U7E2WJ52.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-V4MFBZPV.js','imports':['/build/_shared/chunk-KXL53RSK.js','/build/_shared/chunk-P5VLRVCV.js','/build/_shared/chunk-GULYIQQM.js','/build/_shared/chunk-PGSXFMOW.js','/build/_shared/chunk-NYNU5XW3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-56HNK2ZQ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-VH3KYJK7.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-JAIKBCTD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/management':{'id':'routes/management','parentId':'root','path':'management','index':undefined,'caseSensitive':undefined,'module':'/build/routes/management-754ZOZKV.js','imports':['/build/_shared/chunk-XAPJPHCM.js','/build/_shared/chunk-P5VLRVCV.js','/build/_shared/chunk-NTBHBIZX.js','/build/_shared/chunk-B43JI2TA.js','/build/_shared/chunk-PGSXFMOW.js','/build/_shared/chunk-NYNU5XW3.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/market':{'id':'routes/market','parentId':'root','path':'market','index':undefined,'caseSensitive':undefined,'module':'/build/routes/market-2YZPY6ZI.js','imports':['/build/_shared/chunk-KXL53RSK.js','/build/_shared/chunk-XAPJPHCM.js','/build/_shared/chunk-GULYIQQM.js','/build/_shared/chunk-PGSXFMOW.js','/build/_shared/chunk-NYNU5XW3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/reports':{'id':'routes/reports','parentId':'root','path':'reports','index':undefined,'caseSensitive':undefined,'module':'/build/routes/reports-35V5CQJ2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/reports.security-log':{'id':'routes/reports.security-log','parentId':'routes/reports','path':'security-log','index':undefined,'caseSensitive':undefined,'module':'/build/routes/reports.security-log-6Q6K5M5I.js','imports':['/build/_shared/chunk-NYNU5XW3.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/settings':{'id':'routes/settings','parentId':'root','path':'settings','index':undefined,'caseSensitive':undefined,'module':'/build/routes/settings-RM7BO6JQ.js','imports':['/build/_shared/chunk-GULYIQQM.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':true},'routes/transactions':{'id':'routes/transactions','parentId':'root','path':'transactions','index':undefined,'caseSensitive':undefined,'module':'/build/routes/transactions-YKKWVADM.js','imports':['/build/_shared/chunk-46QPPEQM.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/transfer':{'id':'routes/transfer','parentId':'root','path':'transfer','index':undefined,'caseSensitive':undefined,'module':'/build/routes/transfer-BN4PNT3P.js','imports':['/build/_shared/chunk-NTBHBIZX.js','/build/_shared/chunk-B43JI2TA.js','/build/_shared/chunk-PGSXFMOW.js','/build/_shared/chunk-NYNU5XW3.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'d9d5d340','hmr':{'runtime':'/build/_shared/chunk-U5E2PCIK.js','timestamp':1750523367388},'url':'/build/manifest-D9D5D340.js'};", "\nimport * as entryServer from \"/home/project/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/reports.security-log.tsx\";\nimport * as route2 from \"./routes/transactions.tsx\";\nimport * as route3 from \"./routes/management.tsx\";\nimport * as route4 from \"./routes/dashboard.tsx\";\nimport * as route5 from \"./routes/settings.tsx\";\nimport * as route6 from \"./routes/transfer.tsx\";\nimport * as route7 from \"./routes/reports.tsx\";\nimport * as route8 from \"./routes/_index.tsx\";\nimport * as route9 from \"./routes/logout.tsx\";\nimport * as route10 from \"./routes/market.tsx\";\nimport * as route11 from \"./routes/admin.tsx\";\nimport * as route12 from \"./routes/login.tsx\";\nimport * as route13 from \"./routes/_app.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/reports.security-log\": {\n      id: \"routes/reports.security-log\",\n      parentId: \"routes/reports\",\n      path: \"security-log\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/transactions\": {\n      id: \"routes/transactions\",\n      parentId: \"root\",\n      path: \"transactions\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/management\": {\n      id: \"routes/management\",\n      parentId: \"root\",\n      path: \"management\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/settings\": {\n      id: \"routes/settings\",\n      parentId: \"root\",\n      path: \"settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/transfer\": {\n      id: \"routes/transfer\",\n      parentId: \"root\",\n      path: \"transfer\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/reports\": {\n      id: \"routes/reports\",\n      parentId: \"root\",\n      path: \"reports\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/market\": {\n      id: \"routes/market\",\n      parentId: \"root\",\n      path: \"market\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/_app\": {\n      id: \"routes/_app\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };"],
  "mappings": "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",
  "names": ["redirect", "useEffect", "jsxDEV", "supabaseUrl", "supabaseAnonKey", "supabase", "createClient", "jsxDEV", "session", "redirect", "useEffect", "useState", "useState", "useEffect", "Fragment", "jsxDEV", "jsxDEV", "Fragment", "jsxDEV", "useState", "useState", "useMemo", "useEffect", "jsxDEV", "SearchIcon", "jsxDEV", "CalendarIcon", "useMemo", "useState", "useEffect", "startIndex", "endIndex", "loader", "meta", "json", "redirect", "useLoaderData", "useState", "Tab", "useState", "useEffect", "React", "action", "useEffect", "useState", "useState", "useEffect", "jsxDEV", "useState", "useEffect", "useState", "useMemo", "React", "jsxDEV", "React", "jsxDEV", "React", "cva", "jsxDEV", "cva", "React", "cva", "jsxDEV", "cva", "React", "jsxDEV", "HistoryIcon", "jsxDEV", "mode", "useState", "useMemo", "HistoryIcon", "useState", "useState", "Form", "jsxDEV", "useState", "Form", "useState", "Form", "jsxDEV", "useState", "Form", "useState", "Form", "jsxDEV", "useState", "Form", "useState", "Form", "jsxDEV", "useState", "Form", "jsxDEV", "useState", "DollarSignIcon", "jsxDEV", "useState", "Tab", "jsxDEV", "meta", "loader", "redirect", "json", "useLoaderData", "loader", "useLoaderData", "json", "redirect", "useEffect", "jsxDEV", "jsxDEV", "jsxDEV", "loader", "redirect", "json", "useLoaderData", "useEffect", "ErrorBoundary", "loader", "meta", "useState", "useEffect", "json", "useLoaderData", "useRouteError", "isRouteErrorResponse", "useActionData", "useState", "Fragment", "useEffect", "Form", "Dialog", "jsxDEV", "jsxDEV", "meta", "loader", "json", "supabase", "useLoaderData", "useActionData", "useState", "useEffect", "ErrorBoundary", "useRouteError", "isRouteErrorResponse", "action", "loader", "meta", "json", "Form", "useActionData", "useLoaderData", "useState", "jsxDEV", "React", "Check", "React", "jsxDEV", "jsxDEV", "React", "jsxDEV", "jsxDEV", "Check", "jsxDEV", "meta", "loader", "json", "action", "useActionData", "useLoaderData", "useState", "Form", "meta", "jsxDEV", "loader", "json", "redirect", "useEffect", "jsxDEV", "loader", "redirect", "json", "useEffect", "action", "action", "action", "loader", "useState", "useMemo", "useEffect", "useCallback", "useNavigation", "useActionData", "useLoaderData", "json", "jsxDEV", "jsxDEV", "Search", "jsxDEV", "jsxDEV", "useState", "useEffect", "Form", "useNavigation", "useActionData", "jsxDEV", "useNavigation", "useActionData", "useState", "useEffect", "Form", "useState", "useMemo", "jsxDEV", "useState", "useMemo", "useState", "useEffect", "Form", "jsxDEV", "useState", "useEffect", "Form", "jsxDEV", "Form", "jsxDEV", "useState", "useMemo", "useEffect", "useState", "Dialog", "Transition", "Form", "jsxDEV", "useState", "useEffect", "Transition", "Dialog", "Form", "jsxDEV", "useState", "useMemo", "createClient", "supabaseUrl", "Fragment", "jsxDEV", "loader", "json", "action", "useMemo", "useState", "useCallback", "useNavigation", "useActionData", "useEffect", "useLoaderData", "action", "loader", "meta", "json", "useLoaderData", "useActionData", "useNavigation", "useState", "Tab", "useState", "useMemo", "useCallback", "useEffect", "jsxDEV", "EditIcon", "DeleteIcon", "React", "useState", "useEffect", "Dialog", "Transition", "Form", "jsxDEV", "useState", "useCallback", "jsxDEV", "DownloadIcon", "CheckCircleIcon", "useState", "useCallback", "useMemo", "jsxDEV", "useMemo", "React", "useState", "useEffect", "Dialog", "Transition", "Form", "jsxDEV", "React", "useState", "useEffect", "Dialog", "Transition", "Form", "jsxDEV", "ChangePasswordModal", "jsxDEV", "UploadIcon", "SearchIcon", "useState", "useEffect", "useMemo", "useCallback", "ChangePasswordModal", "React", "useState", "useMemo", "Fragment", "Form", "useActionData", "useNavigation", "Dialog", "Transition", "jsxDEV", "PlusIcon", "EditIcon", "DeleteIcon", "ViewIcon", "SearchIcon", "DeleteConfirmationModal", "useState", "useEffect", "jsxDEV", "useState", "useEffect", "useState", "useMemo", "jsxDEV", "DownloadIcon", "UploadIcon", "FileTextIcon", "useState", "useMemo", "jsxDEV", "jsxDEV", "useState", "Tab", "jsxDEV", "useEffect", "jsxDEV", "meta", "loader", "json", "action", "useLoaderData", "useActionData", "useNavigation", "useEffect", "action", "loader", "meta", "json", "redirect", "Form", "useActionData", "useNavigation", "jsxDEV", "meta", "loader", "redirect", "json", "action", "useActionData", "useNavigation", "Form", "Layout", "loader", "Outlet", "useLoaderData", "json", "useEffect", "jsxDEV", "loader", "json", "Layout", "useLoaderData", "Outlet"]
}
